{"remainingRequest":"/var/www/html/app/node_modules/babel-loader/lib/index.js!/var/www/html/app/node_modules/eslint-loader/index.js??ref--13-0!/var/www/html/app/src/store/AuthModule.js","dependencies":[{"path":"/var/www/html/app/src/store/AuthModule.js","mtime":1605536593292},{"path":"/var/www/html/app/node_modules/cache-loader/dist/cjs.js","mtime":1605161485326},{"path":"/var/www/html/app/node_modules/babel-loader/lib/index.js","mtime":1605161483481},{"path":"/var/www/html/app/node_modules/eslint-loader/index.js","mtime":1605161495835}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBBdXRoU2VydmljZSBmcm9tICcuLi9zZXJ2aWNlcy9BdXRoU2VydmljZSc7CnZhciB1c2VyID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndXNlcicpKTsKdmFyIGluaXRpYWxTdGF0ZSA9IHVzZXIgPyB7CiAgc3RhdHVzOiB7CiAgICBsb2dnZWRJbjogdHJ1ZQogIH0sCiAgdXNlcjogdXNlcgp9IDogewogIHN0YXR1czogewogICAgbG9nZ2VkSW46IGZhbHNlCiAgfSwKICB1c2VyOiBudWxsCn07CmV4cG9ydCB2YXIgYXV0aCA9IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiBpbml0aWFsU3RhdGUsCiAgYWN0aW9uczogewogICAgbG9naW46IGZ1bmN0aW9uIGxvZ2luKF9yZWYsIHVzZXIpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICByZXR1cm4gQXV0aFNlcnZpY2UubG9naW4odXNlcikudGhlbihmdW5jdGlvbiAodXNlcikgewogICAgICAgIGNvbW1pdCgnbG9naW5TdWNjZXNzJywgdXNlcik7CiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh1c2VyKTsKICAgICAgfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgY29tbWl0KCdsb2dpbkZhaWx1cmUnKTsKICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpOwogICAgICB9KTsKICAgIH0sCiAgICBsb2dvdXQ6IGZ1bmN0aW9uIGxvZ291dChfcmVmMikgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICBBdXRoU2VydmljZS5sb2dvdXQoKTsKICAgICAgY29tbWl0KCdsb2dvdXQnKTsKICAgIH0KICB9LAogIG11dGF0aW9uczogewogICAgbG9naW5TdWNjZXNzOiBmdW5jdGlvbiBsb2dpblN1Y2Nlc3Moc3RhdGUsIHVzZXIpIHsKICAgICAgY29uc29sZS5sb2codXNlci5hdHRyaWJ1dGVzKTsKICAgICAgc3RhdGUuc3RhdHVzLmxvZ2dlZEluID0gdHJ1ZTsKICAgICAgc3RhdGUudXNlciA9IHVzZXI7CiAgICB9LAogICAgbG9naW5GYWlsdXJlOiBmdW5jdGlvbiBsb2dpbkZhaWx1cmUoc3RhdGUpIHsKICAgICAgc3RhdGUuc3RhdHVzLmxvZ2dlZEluID0gZmFsc2U7CiAgICAgIHN0YXRlLnVzZXIgPSBudWxsOwogICAgfSwKICAgIGxvZ291dDogZnVuY3Rpb24gbG9nb3V0KHN0YXRlKSB7CiAgICAgIHN0YXRlLnN0YXR1cy5sb2dnZWRJbiA9IGZhbHNlOwogICAgICBzdGF0ZS51c2VyID0gbnVsbDsKICAgIH0KICB9Cn07"},{"version":3,"sources":["/var/www/html/app/src/store/AuthModule.js"],"names":["AuthService","user","JSON","parse","localStorage","getItem","initialState","status","loggedIn","auth","namespaced","state","actions","login","commit","then","Promise","resolve","error","reject","logout","mutations","loginSuccess","console","log","attributes","loginFailure"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,yBAAxB;AAEA,IAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AACA,IAAMC,YAAY,GAAGL,IAAI,GAAG;AAAEM,EAAAA,MAAM,EAAE;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAAV;AAA8BP,EAAAA,IAAI,EAAJA;AAA9B,CAAH,GAA0C;AAAEM,EAAAA,MAAM,EAAE;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAAV;AAA+BP,EAAAA,IAAI,EAAE;AAArC,CAAnE;AAEA,OAAO,IAAMQ,IAAI,GAAG;AAChBC,EAAAA,UAAU,EAAE,IADI;AAEhBC,EAAAA,KAAK,EAAEL,YAFS;AAGhBM,EAAAA,OAAO,EAAE;AACLC,IAAAA,KADK,uBACaZ,IADb,EACmB;AAAA,UAAhBa,MAAgB,QAAhBA,MAAgB;AACpB,aAAOd,WAAW,CAACa,KAAZ,CAAkBZ,IAAlB,EAAwBc,IAAxB,CACH,UAAAd,IAAI,EAAI;AACJa,QAAAA,MAAM,CAAC,cAAD,EAAiBb,IAAjB,CAAN;AACA,eAAOe,OAAO,CAACC,OAAR,CAAgBhB,IAAhB,CAAP;AACH,OAJE,EAKH,UAAAiB,KAAK,EAAI;AACLJ,QAAAA,MAAM,CAAC,cAAD,CAAN;AACA,eAAOE,OAAO,CAACG,MAAR,CAAeD,KAAf,CAAP;AACH,OARE,CAAP;AAUH,KAZI;AAaLE,IAAAA,MAbK,yBAac;AAAA,UAAVN,MAAU,SAAVA,MAAU;AACfd,MAAAA,WAAW,CAACoB,MAAZ;AACAN,MAAAA,MAAM,CAAC,QAAD,CAAN;AACH;AAhBI,GAHO;AAqBhBO,EAAAA,SAAS,EAAE;AACPC,IAAAA,YADO,wBACMX,KADN,EACaV,IADb,EACmB;AACtBsB,MAAAA,OAAO,CAACC,GAAR,CAAYvB,IAAI,CAACwB,UAAjB;AACAd,MAAAA,KAAK,CAACJ,MAAN,CAAaC,QAAb,GAAwB,IAAxB;AACAG,MAAAA,KAAK,CAACV,IAAN,GAAaA,IAAb;AACH,KALM;AAMPyB,IAAAA,YANO,wBAMMf,KANN,EAMa;AAChBA,MAAAA,KAAK,CAACJ,MAAN,CAAaC,QAAb,GAAwB,KAAxB;AACAG,MAAAA,KAAK,CAACV,IAAN,GAAa,IAAb;AACH,KATM;AAUPmB,IAAAA,MAVO,kBAUAT,KAVA,EAUO;AACVA,MAAAA,KAAK,CAACJ,MAAN,CAAaC,QAAb,GAAwB,KAAxB;AACAG,MAAAA,KAAK,CAACV,IAAN,GAAa,IAAb;AACH;AAbM;AArBK,CAAb","sourcesContent":["import AuthService from '../services/AuthService';\n\nconst user = JSON.parse(localStorage.getItem('user'));\nconst initialState = user ? { status: { loggedIn: true }, user } : { status: { loggedIn: false }, user: null };\n\nexport const auth = {\n    namespaced: true,\n    state: initialState,\n    actions: {\n        login({ commit }, user) {\n            return AuthService.login(user).then(\n                user => {\n                    commit('loginSuccess', user);\n                    return Promise.resolve(user);\n                },\n                error => {\n                    commit('loginFailure');\n                    return Promise.reject(error);\n                }\n            );\n        },\n        logout({ commit }) {\n            AuthService.logout();\n            commit('logout');\n        },\n    },\n    mutations: {\n        loginSuccess(state, user) {\n            console.log(user.attributes)\n            state.status.loggedIn = true;\n            state.user = user;\n        },\n        loginFailure(state) {\n            state.status.loggedIn = false;\n            state.user = null;\n        },\n        logout(state) {\n            state.status.loggedIn = false;\n            state.user = null;\n        }\n    }\n}\n"]}]}
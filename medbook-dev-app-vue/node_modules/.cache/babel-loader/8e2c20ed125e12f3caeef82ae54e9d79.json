{"remainingRequest":"/var/www/html/1/medbook-dev-app-vue/node_modules/babel-loader/lib/index.js!/var/www/html/1/medbook-dev-app-vue/node_modules/eslint-loader/index.js??ref--13-0!/var/www/html/1/medbook-dev-app-vue/src/services/Axios.js","dependencies":[{"path":"/var/www/html/1/medbook-dev-app-vue/src/services/Axios.js","mtime":1611728297708},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/cache-loader/dist/cjs.js","mtime":1610518510696},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/babel-loader/lib/index.js","mtime":1610518510640},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/eslint-loader/index.js","mtime":1610518511248}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsgLy8gaW1wb3J0IFByb21wdCBmcm9tICdwYXNzd29yZC1wcm9tcHQnOwovLyBpbXBvcnQgQXV0aFNlcnZpY2UgZnJvbSAnLi9BdXRoU2VydmljZSc7Cgp2YXIgYWNjZXNzX3Rva2VuID0gc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgndG9rZW4nKTsKdmFyIHRva2VuID0gYWNjZXNzX3Rva2VuID8gSlNPTi5wYXJzZShhY2Nlc3NfdG9rZW4pIDogbnVsbDsgLy8gdmFyIGJlYXJlclRva2VuID0gYWNjZXNzX3Rva2VuID8gZGF0YS50b2tlbi5hY2Nlc3NfdG9rZW4gOiBudWxsCgp2YXIgQXhpb3MgPSBheGlvcy5jcmVhdGUoewogIC8vIGJhc2VVUkw6ICdodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpLycsCiAgYmFzZVVSTDogJ2h0dHA6Ly9sb2NhbGhvc3QvMS9tZWRib29rLWRldi1hcHAvcHVibGljL2FwaS8nLAogIC8vIGJhc2VVUkwgOiAnaHR0cDovL2JhY2tlbmQubnZjLWludm9pY2UuY29tLycsCiAgLy8gdGltZW91dCA6IDEwMDAsCiAgaGVhZGVyczogewogICAgY29tbW9uOiB7CiAgICAgICdBY2NlcHQnOiAnYXBwbGljYXRpb24vanNvbicsCiAgICAgICdDb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsCiAgICAgICdBdXRob3JpemF0aW9uJzogJ0JlYXJlciAnICsgdG9rZW4KICAgIH0KICB9Cn0pOyAvLyBBeGlvcy5pbnRlcmNlcHRvcnMucmVxdWVzdC51c2UoKCkgPT4gewovLyB9KQovLyAqIEF4aW9zLmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoKHJlc3BvbnNlKSA9PiB7Ci8vIGNvbnNvbGUubG9nKCJyZXNwb25zZSAiICsgcmVzcG9uc2Uuc3RhdHVzKQovLyAqIHJldHVybiByZXNwb25zZTsKLy8gICogfSwgKGVycm9ycykgPT4gewovLyAgKiAgIGxldCBlcnJvciA9IGVycm9ycy5yZXNwb25zZQovLyAqICAgIGlmKGVycm9yLnN0YXR1cyA9PT0gNDAxKSB7Ci8vIGNvbnN0IHBhc3N3b3JkID0gcHJvbXB0KCdFbnRlciB5b3VyIHBhc3N3b3JkIHRvIGNvbnRpbnVlJykKLy8gbGV0IHByb21wdCA9IHJlcXVpcmUoJ3Bhc3N3b3JkLXByb21wdCcpCi8vIGxldCBwYXNzd29yZCA9ICdwYXNzd29yZCc7Ci8vIGNvbnN0IHZ1ZXhEYXRhID0gc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgndnVleCcpCi8vIGxldCBkYXRhID0gSlNPTi5wYXJzZSh2dWV4RGF0YSkKLy8gbGV0IGVtYWlsID0gZGF0YS5wcm9maWxlLnByb2ZpbGUuYXR0cmlidXRlcy5lbWFpbAovLyBsZXQgY3JlZGVudGlhbCA9IFtdOwovLyBsZXQgY3JlZGVudGlhbCA9IHsKLy8gICAgICJlbWFpbCIgOiBlbWFpbCwKLy8gICAgICdwYXNzd29yZCcgOiBwYXNzd29yZAovLyB9Ci8vIGNvbnNvbGUubG9nKGNyZWRlbnRpYWwpCi8vIEF4aW9zKHsKLy8gICAgIG1ldGhvZCA6ICdQT1NUJywKLy8gICAgIHVybCA6ICcvbG9naW4nLAovLyB9KQovLyBBdXRoU2VydmljZS5sb2dpbihjcmVkZW50aWFsKS50aGVuKAovLyAgICAgZmVlZCA9PiB7Ci8vICAgICAgICAgY29uc29sZS5sb2coZmVlZCkKLy8gICAgIH0sCi8vICAgICBlcnJvciA9PiB7Ci8vICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpCi8vICAgICB9Ci8vICkKCi8qKgogKiB1bmF1dGhvcml6ZWQgdXNlciBpcyBsb2dnZWQgb3V0IGFuZCByZWRpcmVjdGVkIHRvIHRoZSBzYW1lIHBhZ2UgdXBvbiBsb2dpbgogKiAKICogQ2xlYXIgZXhwaXJlZCB0b2tlbgogKi8KLy8gc2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbSgndG9rZW4nKQovLyBHZXQgY3VycmVudCBwYXRobmFtZQovLyBsZXQgcmVkaXJlY3RUbyA9IHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZQovLyBSZWRpcmVjdCB0byB0aGUgcGF0aG5hbWUKLy8gc2VsZi5sb2NhdGlvbiA9IHJlZGlyZWN0VG8KLy8gKiB9Ci8vICogcmV0dXJuIGVycm9yCi8vIGlmIChlcnJvci5yZXNwb25zZSAmJiBlcnJvci5yZXNwb25zZS5kYXRhKSB7Ci8vYWRkIHlvdXIgY29kZQovLyAgIGFsZXJ0KCJlcnJvciA6IiArIGVycm9yLnJlc3BvbnNlLmRhdGEpOwovLyA8RGlhbG9nLz4KLy8gIGNvbnNvbGUubG9nKGVycm9yLnJlc3BvbnNlLmRhdGEpCi8vICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IucmVzcG9uc2UuZGF0YSk7Ci8vIH0KLy8gcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yLm1lc3NhZ2UpOwovLyAqIH0pOwoKZXhwb3J0IGRlZmF1bHQgQXhpb3M7"},{"version":3,"sources":["/var/www/html/1/medbook-dev-app-vue/src/services/Axios.js"],"names":["axios","access_token","sessionStorage","getItem","token","JSON","parse","Axios","create","baseURL","headers","common"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACI,IAAMC,YAAY,GAAGC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAArB;AACA,IAAIC,KAAK,GAAGH,YAAY,GAAGI,IAAI,CAACC,KAAL,CAAWL,YAAX,CAAH,GAA8B,IAAtD,C,CACA;;AAGA,IAAMM,KAAK,GAAGP,KAAK,CAACQ,MAAN,CAAa;AACvB;AACAC,EAAAA,OAAO,EAAG,gDAFa;AAGvB;AACA;AACAC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,MAAM,EAAG;AAChB,gBAAW,kBADK;AAEhB,sBAAiB,kBAFD;AAGhB,uBAAkB,YAAWP;AAHb;AAAX;AALc,CAAb,CAAd,C,CAcA;AAEA;AAIA;AACI;AACH;AACD;AACA;AACA;AACQ;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACZ;AACA;AACA;AACA;AACY;AAEA;AACA;AAEA;AACA;AAEJ;AACA;AACA;AACK;AACD;AACA;AACA;AACA;AACJ;AACA;AACL;;AACH,eAAeG,KAAf","sourcesContent":["import axios from 'axios'\n// import Prompt from 'password-prompt';\n// import AuthService from './AuthService';\n    const access_token = sessionStorage.getItem('token');\n    let token = access_token ? JSON.parse(access_token) : null\n    // var bearerToken = access_token ? data.token.access_token : null\n\n\n    const Axios = axios.create({\n        // baseURL: 'http://localhost:8000/api/',\n        baseURL : 'http://localhost/1/medbook-dev-app/public/api/',\n        // baseURL : 'http://backend.nvc-invoice.com/',\n        // timeout : 1000,\n        headers: { common : {\n            'Accept' : 'application/json',\n            'Content-type' : 'application/json',\n            'Authorization' : 'Bearer '+ token\n        }}\n    });\n    \n\n\n    // Axios.interceptors.request.use(() => {\n\n    // })\n\n\n\n    // * Axios.interceptors.response.use((response) => {\n        // console.log(\"response \" + response.status)\n     // * return response;\n    //  * }, (errors) => {\n    //  *   let error = errors.response\n    // *    if(error.status === 401) {\n            // const password = prompt('Enter your password to continue')\n    \n            // let prompt = require('password-prompt')\n            // let password = 'password';\n\n\n            // const vuexData = sessionStorage.getItem('vuex')\n            // let data = JSON.parse(vuexData)\n            // let email = data.profile.profile.attributes.email\n            // let credential = [];\n            // let credential = {\n            //     \"email\" : email,\n            //     'password' : password\n            // }\n            // console.log(credential)\n\n            // Axios({\n            //     method : 'POST',\n            //     url : '/login',\n\n            // })\n            // AuthService.login(credential).then(\n            //     feed => {\n            //         console.log(feed)\n            //     },\n            //     error => {\n            //         console.log(error)\n            //     }\n            // )\n            /**\n             * unauthorized user is logged out and redirected to the same page upon login\n             * \n             * Clear expired token\n             */\n            // sessionStorage.removeItem('token')\n\n            // Get current pathname\n            // let redirectTo = window.location.pathname\n\n            // Redirect to the pathname\n            // self.location = redirectTo\n            \n        // * }\n        // * return error\n        // if (error.response && error.response.data) {\n             //add your code\n            //   alert(\"error :\" + error.response.data);\n            // <Dialog/>\n            //  console.log(error.response.data)\n            //  return Promise.reject(error.response.data);\n        // }\n        // return Promise.reject(error.message);\n   // * });\nexport default Axios;"]}]}
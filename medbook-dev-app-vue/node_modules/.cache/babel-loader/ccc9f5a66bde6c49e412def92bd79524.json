{"remainingRequest":"/var/www/html/1/medbook-dev-app-vue/node_modules/babel-loader/lib/index.js!/var/www/html/1/medbook-dev-app-vue/node_modules/eslint-loader/index.js??ref--13-0!/var/www/html/1/medbook-dev-app-vue/src/services/ProfileService.js","dependencies":[{"path":"/var/www/html/1/medbook-dev-app-vue/src/services/ProfileService.js","mtime":1611229297812},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/cache-loader/dist/cjs.js","mtime":1610518510696},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/babel-loader/lib/index.js","mtime":1610518510640},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/eslint-loader/index.js","mtime":1610518511248}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvdmFyL3d3dy9odG1sLzEvbWVkYm9vay1kZXYtYXBwLXZ1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gIi92YXIvd3d3L2h0bWwvMS9tZWRib29rLWRldi1hcHAtdnVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CmltcG9ydCBBeGlvcyBmcm9tICcuL0F4aW9zJzsKCnZhciBQcm9maWxlU2VydmljZSA9IGZ1bmN0aW9uIFByb2ZpbGVTZXJ2aWNlKCkgewogIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBQcm9maWxlU2VydmljZSk7CgogIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAicHJvZmlsZSIsIGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiBBeGlvcyh7CiAgICAgIG1ldGhvZDogJ0dFVCcsCiAgICAgIHVybDogJ3Byb2ZpbGUnCiAgICB9KTsKICB9KTsKCiAgX2RlZmluZVByb3BlcnR5KHRoaXMsICJ1cGRhdGVQcm9maWxlIiwgZnVuY3Rpb24gKGRhdGEpIHsKICAgIHJldHVybiBBeGlvcyh7CiAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICB1cmw6ICd1cGRhdGVfcHJvZmlsZScsCiAgICAgIGRhdGE6IGRhdGEKICAgIH0pOwogIH0pOwoKICBfZGVmaW5lUHJvcGVydHkodGhpcywgImFkZE5ld01haWwiLCBmdW5jdGlvbiAoZGF0YSkgewogICAgcmV0dXJuIEF4aW9zKHsKICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgIHVybDogJ2VtYWlsJywKICAgICAgZGF0YTogZGF0YQogICAgfSk7CiAgfSk7CgogIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAiZWRpdE1haWwiLCBmdW5jdGlvbiAoZGF0YSkgewogICAgcmV0dXJuIEF4aW9zKHsKICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgIHVybDogJ2VtYWlsLycgKyBkYXRhLmlkLAogICAgICBkYXRhOiBkYXRhCiAgICB9KTsKICB9KTsKCiAgX2RlZmluZVByb3BlcnR5KHRoaXMsICJhZGROZXdQaG9uZSIsIGZ1bmN0aW9uIChkYXRhKSB7CiAgICByZXR1cm4gQXhpb3MoewogICAgICBtZXRob2Q6ICdQT1NUJywKICAgICAgdXJsOiAncGhvbmUnLAogICAgICBkYXRhOiBkYXRhCiAgICB9KTsKICB9KTsKCiAgX2RlZmluZVByb3BlcnR5KHRoaXMsICJlZGl0UGhvbmUiLCBmdW5jdGlvbiAoZGF0YSkgewogICAgcmV0dXJuIEF4aW9zKHsKICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgIHVybDogJ3Bob25lLycgKyBkYXRhLmlkLAogICAgICBkYXRhOiBkYXRhCiAgICB9KTsKICB9KTsKCiAgX2RlZmluZVByb3BlcnR5KHRoaXMsICJzd2l0Y2hQcmltYXJ5UGhvbmUiLCBmdW5jdGlvbiAoZGF0YSkgewogICAgcmV0dXJuIEF4aW9zKHsKICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgIHVybDogJ3N3aXRjaF9wcmltYXJ5X3Bob25lJywKICAgICAgZGF0YTogewogICAgICAgICJwaG9uZSI6IGRhdGEucGhvbmUKICAgICAgfQogICAgfSk7CiAgfSk7CgogIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAic3dpdGNoUHJpbWFyeUVtYWlsIiwgZnVuY3Rpb24gKGRhdGEpIHsKICAgIHJldHVybiBBeGlvcyh7CiAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICB1cmw6ICdzd2l0Y2hfcHJpbWFyeV9lbWFpbCcsCiAgICAgIGRhdGE6IHsKICAgICAgICAiZW1haWwiOiBkYXRhLmVtYWlsCiAgICAgIH0KICAgIH0pOwogIH0pOwp9OwoKZXhwb3J0IGRlZmF1bHQgbmV3IFByb2ZpbGVTZXJ2aWNlKCk7"},{"version":3,"sources":["/var/www/html/1/medbook-dev-app-vue/src/services/ProfileService.js"],"names":["Axios","ProfileService","method","url","data","id","phone","email"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,SAAlB;;IACMC,c;;;mCAKQ,YAAM;AACZ,WAAOD,KAAK,CAAC;AACTE,MAAAA,MAAM,EAAG,KADA;AAETC,MAAAA,GAAG,EAAG;AAFG,KAAD,CAAZ;AAIH,G;;yCAOe,UAACC,IAAD,EAAU;AACtB,WAAOJ,KAAK,CAAC;AACTE,MAAAA,MAAM,EAAG,MADA;AAETC,MAAAA,GAAG,EAAG,gBAFG;AAGTC,MAAAA,IAAI,EAAGA;AAHE,KAAD,CAAZ;AAKH,G;;sCAOY,UAACA,IAAD,EAAU;AACnB,WAAOJ,KAAK,CAAC;AACTE,MAAAA,MAAM,EAAG,MADA;AAETC,MAAAA,GAAG,EAAG,OAFG;AAGTC,MAAAA,IAAI,EAAGA;AAHE,KAAD,CAAZ;AAKH,G;;oCAOU,UAACA,IAAD,EAAU;AACjB,WAAOJ,KAAK,CAAC;AACTE,MAAAA,MAAM,EAAG,MADA;AAETC,MAAAA,GAAG,EAAG,WAAWC,IAAI,CAACC,EAFb;AAGTD,MAAAA,IAAI,EAAGA;AAHE,KAAD,CAAZ;AAKH,G;;uCAOa,UAACA,IAAD,EAAU;AACpB,WAAOJ,KAAK,CAAC;AACTE,MAAAA,MAAM,EAAG,MADA;AAETC,MAAAA,GAAG,EAAG,OAFG;AAGTC,MAAAA,IAAI,EAAGA;AAHE,KAAD,CAAZ;AAKH,G;;qCAOW,UAACA,IAAD,EAAU;AAClB,WAAOJ,KAAK,CAAC;AACTE,MAAAA,MAAM,EAAG,MADA;AAETC,MAAAA,GAAG,EAAG,WAAWC,IAAI,CAACC,EAFb;AAGTD,MAAAA,IAAI,EAAGA;AAHE,KAAD,CAAZ;AAKH,G;;8CAOoB,UAACA,IAAD,EAAU;AAC3B,WAAOJ,KAAK,CAAC;AACTE,MAAAA,MAAM,EAAG,MADA;AAETC,MAAAA,GAAG,EAAG,sBAFG;AAGTC,MAAAA,IAAI,EAAG;AACH,iBAAUA,IAAI,CAACE;AADZ;AAHE,KAAD,CAAZ;AAOH,G;;8CAOoB,UAACF,IAAD,EAAU;AAC3B,WAAOJ,KAAK,CAAC;AACTE,MAAAA,MAAM,EAAG,MADA;AAETC,MAAAA,GAAG,EAAG,sBAFG;AAGTC,MAAAA,IAAI,EAAG;AACH,iBAAUA,IAAI,CAACG;AADZ;AAHE,KAAD,CAAZ;AAOH,G;;;AAKL,eAAe,IAAIN,cAAJ,EAAf","sourcesContent":["import Axios from './Axios';\nclass ProfileService {\n\n    /**\n     * Get authenticated user profile data\n     */\n    profile = () => {\n        return Axios({\n            method : 'GET',\n            url : 'profile'\n        })\n    }\n\n    /**\n     * Update user profile\n     * \n     * @param {*} data new data\n     */\n    updateProfile = (data) => {\n        return Axios({\n            method : 'POST',\n            url : 'update_profile',\n            data : data\n        })\n    }\n    \n    /**\n     * Add new and unique user email\n     * \n     * @param {*} data \n     */\n    addNewMail = (data) => {\n        return Axios({\n            method : 'POST',\n            url : 'email',\n            data : data\n        });\n    }\n\n    /**\n     * Edit an existing user email\n     * \n     * @param {*} data \n     */\n    editMail = (data) => {\n        return Axios({\n            method : 'POST',\n            url : 'email/' + data.id,\n            data : data\n        });\n    }\n\n    /**\n     * Add new and unique user phone number\n     * \n     * @param {*} data \n     */\n    addNewPhone = (data) => {\n        return Axios({\n            method : 'POST',\n            url : 'phone',\n            data : data\n        });\n    }\n\n    /**\n     * Edit an existing phone number\n     * \n     * @param {*} data \n     */\n    editPhone = (data) => {\n        return Axios({\n            method : 'POST',\n            url : 'phone/' + data.id,\n            data : data\n        });\n    }\n\n    /**\n     * switch primary phone number\n     * \n     * @param {*} data \n     */\n    switchPrimaryPhone = (data) => {\n        return Axios({\n            method : 'POST',\n            url : 'switch_primary_phone',\n            data : {\n                \"phone\" : data.phone\n            }\n        });\n    }\n\n    /**\n     * switch primary email\n     * \n     * @param {*} data \n     */\n    switchPrimaryEmail = (data) => {\n        return Axios({\n            method : 'POST',\n            url : 'switch_primary_email',\n            data : {\n                \"email\" : data.email\n            }\n        });\n    }\n    \n    \n\n}\nexport default new ProfileService;"]}]}
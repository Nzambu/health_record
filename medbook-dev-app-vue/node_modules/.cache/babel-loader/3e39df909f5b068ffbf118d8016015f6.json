{"remainingRequest":"/var/www/html/1/medbook-dev-app-vue/node_modules/thread-loader/dist/cjs.js!/var/www/html/1/medbook-dev-app-vue/node_modules/babel-loader/lib/index.js!/var/www/html/1/medbook-dev-app-vue/node_modules/eslint-loader/index.js??ref--13-0!/var/www/html/1/medbook-dev-app-vue/src/store/AuthModule.js","dependencies":[{"path":"/var/www/html/1/medbook-dev-app-vue/src/store/AuthModule.js","mtime":1610634352036},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/cache-loader/dist/cjs.js","mtime":1610518510696},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/thread-loader/dist/cjs.js","mtime":1610518511736},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/babel-loader/lib/index.js","mtime":1610518510640},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/eslint-loader/index.js","mtime":1610518511248}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBBdXRoU2VydmljZSBmcm9tICcuLi9zZXJ2aWNlcy9BdXRoU2VydmljZSc7CnZhciBpbml0aWFsU3RhdGUgPSB7CiAgcHJvZmlsZTogbnVsbCwKICBsb2dnZWRJbjogbnVsbCwKICB0b2tlbjogbnVsbCwKICBhY2Nlc3NUb2tlbjogbnVsbAp9OwpleHBvcnQgdmFyIGF1dGggPSB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogaW5pdGlhbFN0YXRlLAogIGFjdGlvbnM6IHsKICAgIC8qKgogICAgICogTG9naW4gYSB1c2VyCiAgICAgKiAKICAgICAqIEBwYXJhbSB7Kn0gcGFyYW0wIAogICAgICogQHBhcmFtIHsqfSB1c2VyIAogICAgICovCiAgICBsb2dpbjogZnVuY3Rpb24gbG9naW4oX3JlZiwgdXNlcikgewogICAgICB2YXIgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgIHJldHVybiBBdXRoU2VydmljZS5sb2dpbih1c2VyKS50aGVuKGZ1bmN0aW9uIChhY2Nlc3NUb2tlbikgewogICAgICAgIGNvbW1pdCgnbG9naW5TdWNjZXNzJywgYWNjZXNzVG9rZW4uZGF0YSk7CiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShhY2Nlc3NUb2tlbik7CiAgICAgIH0sIGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgICBjb21taXQoJ2xvZ2luRmFpbHVyZScpOwogICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7CiAgICAgIH0pOwogICAgfSwKCiAgICAvKioKICAgICAqIFNlbmQgcmVzZXQgdXNlciBwYXNzd29yZCBlbWFpbAogICAgICogCiAgICAgKiBAcGFyYW0geyp9IHBhcmFtMCAKICAgICAqIEBwYXJhbSB7Kn0gZW1haWwgCiAgICAgKi8KICAgIHNlbmRSZXNldFBhc3N3b3JkRW1haWw6IGZ1bmN0aW9uIHNlbmRSZXNldFBhc3N3b3JkRW1haWwoX3JlZjIsIGVtYWlsKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgICAgIGNvbnNvbGUubG9nKGVtYWlsKTsKICAgICAgcmV0dXJuIEF1dGhTZXJ2aWNlLnNlbmRSZXNldFBhc3N3b3JkRW1haWwoZW1haWwpLnRoZW4oZnVuY3Rpb24gKGVtYWlsKSB7CiAgICAgICAgY29tbWl0KCcnKTsKICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGVtYWlsKTsKICAgICAgfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKICAgICAgfSk7CiAgICB9LAoKICAgIC8qKgogICAgICogR2V0IGF1dGhlbnRpY2F0ZWQgdXNlciBwcm9maWxlCiAgICAgKiAKICAgICAqIEBwYXJhbSB7Kn0gcGFyYW0wIAogICAgICovCiAgICBwcm9maWxlOiBmdW5jdGlvbiBwcm9maWxlKF9yZWYzKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmMy5jb21taXQ7CgogICAgICAvKioKICAgICAgICogSXQgdXNlcyBiZWFyZXIgdG9rZW4gdG8gZ2V0IGF1dGhlbnRpY2F0ZWQgdXNlcgogICAgICAgKi8KICAgICAgcmV0dXJuIEF1dGhTZXJ2aWNlLnByb2ZpbGUoKS50aGVuKGZ1bmN0aW9uICh1c2VyUHJvZmlsZSkgewogICAgICAgIHZhciBwcm9maWxlID0gdXNlclByb2ZpbGUuZGF0YTsKICAgICAgICBjb21taXQoJ3Byb2ZpbGVTdWNjZXNzJywgcHJvZmlsZSk7CiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShwcm9maWxlKTsKICAgICAgfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgIGNvbW1pdCgncHJvZmlsZUZhaWwnLCBlcnJvcik7CiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShlcnJvcik7CiAgICAgIH0pOwogICAgfSwKCiAgICAvKioKICAgICAqIFVwZGF0ZSB1c2VyIHByb2ZpbGUgZGF0YQogICAgICogCiAgICAgKiBAcGFyYW0geyp9IHBhcmFtMCAKICAgICAqIEBwYXJhbSB7Kn0gcHJvZmlsZSAKICAgICAqLwogICAgdXBkYXRlUHJvZmlsZTogZnVuY3Rpb24gdXBkYXRlUHJvZmlsZShfcmVmNCwgbmV3RGF0YSkgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjQuY29tbWl0OwoKICAgICAgLyoqCiAgICAgICAqIFVwZGF0ZSB1c2VyIHByb2ZpbGUKICAgICAgICovCiAgICAgIHJldHVybiBBdXRoU2VydmljZS51cGRhdGVQcm9maWxlKG5ld0RhdGEpLnRoZW4oZnVuY3Rpb24gKHByb2ZpbGUpIHsKICAgICAgICB2YXIgdXBkYXRlZFByb2ZpbGVEYXRhID0gcHJvZmlsZTsKICAgICAgICBjb21taXQoJ3VwZGF0ZVByb2ZpbGUnLCB1cGRhdGVkUHJvZmlsZURhdGEuZGF0YSk7CiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh1cGRhdGVkUHJvZmlsZURhdGEpOwogICAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICByZXR1cm4gZXJyb3I7CiAgICAgIH0pOwogICAgfSwKCiAgICAvKioKICAgICAqIExvdWcgb3V0IHRoZSB1c2VyCiAgICAgKiAKICAgICAqIEBwYXJhbSB7Kn0gcGFyYW0wIAogICAgICovCiAgICBsb2dvdXQ6IGZ1bmN0aW9uIGxvZ291dChfcmVmNSkgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjUuY29tbWl0OwogICAgICBBdXRoU2VydmljZS5sb2dvdXQoKTsKICAgICAgY29tbWl0KCdsb2dvdXQnKTsKICAgIH0KICB9LAogIG11dGF0aW9uczogewogICAgLyoqCiAgICAgKiBTZXQgbG9nZ2VpbiwgdG9rZW4gYW5kIGFjY2VzcyB0b2tlbgogICAgICogCiAgICAgKiBAcGFyYW0geyp9IHN0YXRlIAogICAgICogQHBhcmFtIHsqfSBhY2Nlc3NUb2tlbiAKICAgICAqLwogICAgbG9naW5TdWNjZXNzOiBmdW5jdGlvbiBsb2dpblN1Y2Nlc3Moc3RhdGUsIGFjY2Vzc1Rva2VuKSB7CiAgICAgIHN0YXRlLmxvZ2dlZEluID0gdHJ1ZTsKICAgICAgc3RhdGUudG9rZW4gPSBhY2Nlc3NUb2tlbi5hdHRyaWJ1dGVzLmFjY2Vzc190b2tlbjsKICAgICAgc3RhdGUuYWNjZXNzVG9rZW4gPSBhY2Nlc3NUb2tlbi5hdHRyaWJ1dGVzOwogICAgfSwKCiAgICAvKioKICAgICAqIEhhbmRsZSBsb2dpbiBmYWlsdXJlCiAgICAgKiAKICAgICAqIEBwYXJhbSB7Kn0gc3RhdGUgCiAgICAgKi8KICAgIGxvZ2luRmFpbHVyZTogZnVuY3Rpb24gbG9naW5GYWlsdXJlKHN0YXRlKSB7CiAgICAgIHN0YXRlLnN0YXR1cy5sb2dnZWRJbiA9IGZhbHNlOwogICAgICBzdGF0ZS51c2VyID0gbnVsbDsKICAgIH0sCgogICAgLyoqCiAgICAgKiBIYW5kbGUgbGFvZGVkIHVzZXIgcHJvZmlsZQogICAgICogQHBhcmFtIHsqfSBzdGF0ZSAKICAgICAqIEBwYXJhbSB7Kn0gcHJvZmlsZSAKICAgICAqLwogICAgcHJvZmlsZVN1Y2Nlc3M6IGZ1bmN0aW9uIHByb2ZpbGVTdWNjZXNzKHN0YXRlLCBwcm9maWxlKSB7CiAgICAgIHN0YXRlLnByb2ZpbGUgPSBwcm9maWxlOwogICAgfSwKCiAgICAvKioKICAgICAqIEhhbmRsZSB1cGRhdGUgdXNlciBwcm9maWxlCiAgICAgKiAKICAgICAqIEBwYXJhbSB7Kn0gc3RhdGUgCiAgICAgKiBAcGFyYW0geyp9IG5ld1Byb2ZpbGUgCiAgICAgKi8KICAgIHVwZGF0ZVByb2ZpbGU6IGZ1bmN0aW9uIHVwZGF0ZVByb2ZpbGUoc3RhdGUsIG5ld1Byb2ZpbGUpIHsKICAgICAgc3RhdGUucHJvZmlsZSA9IG5ld1Byb2ZpbGU7CiAgICB9LAoKICAgIC8qKgogICAgICogSGFuZGxlIGZhaWxlZCB0byBsb2FkIHByb2ZpbGUKICAgICAqLwogICAgcHJvZmlsZUZhaWw6IGZ1bmN0aW9uIHByb2ZpbGVGYWlsKHN0YXRlLCBlcnJvcikgewogICAgICBzdGF0ZS5wcm9maWxlRXJyb3IgPSBlcnJvcjsKICAgIH0sCgogICAgLyoqCiAgICAgKiBIYW5kbGUgbG9nb3V0CiAgICAgKiAKICAgICAqIEBwYXJhbSB7Kn0gc3RhdGUgCiAgICAgKi8KICAgIGxvZ291dDogZnVuY3Rpb24gbG9nb3V0KHN0YXRlKSB7CiAgICAgIHN0YXRlLmxvZ2dlZEluID0gZmFsc2U7CiAgICAgIHN0YXRlLnRva2VuID0gbnVsbDsKICAgICAgc3RhdGUuYWNjZXNzVG9rZW4gPSBudWxsOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/var/www/html/1/medbook-dev-app-vue/src/store/AuthModule.js"],"names":["AuthService","initialState","profile","loggedIn","token","accessToken","auth","namespaced","state","actions","login","user","commit","then","data","Promise","resolve","error","console","log","reject","sendResetPasswordEmail","email","userProfile","updateProfile","newData","updatedProfileData","logout","mutations","loginSuccess","attributes","access_token","loginFailure","status","profileSuccess","newProfile","profileFail","profileError"],"mappings":"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","sourcesContent":["import AuthService from '../services/AuthService';\nconst initialState = {\n    profile : null,\n    loggedIn : null,\n    token : null,\n    accessToken : null,\n}\nexport const auth = {\n    namespaced: true,\n    state: initialState,\n    actions: {\n\n        /**\n         * Login a user\n         * \n         * @param {*} param0 \n         * @param {*} user \n         */\n        login({ commit }, user) { \n            return AuthService.login(user).then(\n                accessToken => {\n                    commit('loginSuccess', accessToken.data);\n                    return Promise.resolve(accessToken);\n                },\n                error => {\n                    console.log(error)\n                    commit('loginFailure');\n                    return Promise.reject(error);\n                }\n            );\n        },\n\n        /**\n         * Send reset user password email\n         * \n         * @param {*} param0 \n         * @param {*} email \n         */\n        sendResetPasswordEmail({ commit }, email) {\n            console.log(email)\n            return AuthService.sendResetPasswordEmail(email).then(\n                email => {\n                    commit('');\n                    return Promise.resolve(email)\n                },\n                error => {\n                    return Promise.reject(error)\n                }\n            );\n        },\n        \n        /**\n         * Get authenticated user profile\n         * \n         * @param {*} param0 \n         */\n        profile({ commit }) {\n\n            /**\n             * It uses bearer token to get authenticated user\n             */\n            return AuthService.profile().then(\n                userProfile => {\n                    let profile = userProfile.data\n                    commit('profileSuccess', profile)\n                    return Promise.resolve(profile)\n                },\n                error => {\n                    console.log(error)\n                    commit('profileFail', error)\n                    return Promise.resolve(error)\n                }\n            );\n        },\n\n        /**\n         * Update user profile data\n         * \n         * @param {*} param0 \n         * @param {*} profile \n         */\n        updateProfile({ commit }, newData) {\n\n            /**\n             * Update user profile\n             */\n            return AuthService.updateProfile(newData)\n                .then(\n                profile => {\n                    let updatedProfileData = profile;\n                    commit('updateProfile', updatedProfileData.data);\n                    return Promise.resolve(updatedProfileData);\n                },\n                error => {\n                    return error\n                });\n        },\n\n        /**\n         * Loug out the user\n         * \n         * @param {*} param0 \n         */\n        logout({ commit }) {\n            AuthService.logout();\n            commit('logout');\n        },\n    },\n    mutations: {\n\n        /**\n         * Set loggein, token and access token\n         * \n         * @param {*} state \n         * @param {*} accessToken \n         */\n        loginSuccess(state, accessToken) {\n            state.loggedIn = true;\n            state.token = accessToken.attributes.access_token\n            state.accessToken = accessToken.attributes;\n        },\n\n        /**\n         * Handle login failure\n         * \n         * @param {*} state \n         */\n        loginFailure(state) {\n            state.status.loggedIn = false;\n            state.user = null;\n        },\n\n        /**\n         * Handle laoded user profile\n         * @param {*} state \n         * @param {*} profile \n         */\n        profileSuccess(state, profile) {\n            state.profile = profile\n        },\n\n        /**\n         * Handle update user profile\n         * \n         * @param {*} state \n         * @param {*} newProfile \n         */\n        updateProfile(state, newProfile) {\n            state.profile = newProfile\n        },\n\n        /**\n         * Handle failed to load profile\n         */\n        profileFail(state, error) {\n            state.profileError = error\n        },\n\n        /**\n         * Handle logout\n         * \n         * @param {*} state \n         */\n        logout(state) {\n            state.loggedIn = false;\n            state.token = null;\n            state.accessToken = null;\n        }\n    }\n}\n"]}]}
{"remainingRequest":"/var/www/html/1/medbook-dev-app-vue/node_modules/babel-loader/lib/index.js!/var/www/html/1/medbook-dev-app-vue/node_modules/eslint-loader/index.js??ref--13-0!/var/www/html/1/medbook-dev-app-vue/src/services/ProfileService.js","dependencies":[{"path":"/var/www/html/1/medbook-dev-app-vue/src/services/ProfileService.js","mtime":1610712177348},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/cache-loader/dist/cjs.js","mtime":1610518510696},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/babel-loader/lib/index.js","mtime":1610518510640},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/eslint-loader/index.js","mtime":1610518511248}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvdmFyL3d3dy9odG1sLzEvbWVkYm9vay1kZXYtYXBwLXZ1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIi92YXIvd3d3L2h0bWwvMS9tZWRib29rLWRldi1hcHAtdnVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiL3Zhci93d3cvaHRtbC8xL21lZGJvb2stZGV2LWFwcC12dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKaW1wb3J0IEF4aW9zIGZyb20gJy4vQXhpb3MnOwoKdmFyIFByb2ZpbGVTZXJ2aWNlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBQcm9maWxlU2VydmljZSgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBQcm9maWxlU2VydmljZSk7CgogICAgX2RlZmluZVByb3BlcnR5KHRoaXMsICJwcm9maWxlIiwgZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gQXhpb3MoewogICAgICAgIG1ldGhvZDogJ0dFVCcsCiAgICAgICAgdXJsOiAncHJvZmlsZScKICAgICAgfSk7CiAgICB9KTsKCiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgInVwZGF0ZVByb2ZpbGUiLCBmdW5jdGlvbiAoZGF0YSkgewogICAgICByZXR1cm4gQXhpb3MoewogICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgIHVybDogJ3VwZGF0ZV9wcm9maWxlJywKICAgICAgICBkYXRhOiBkYXRhCiAgICAgIH0pOwogICAgfSk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoUHJvZmlsZVNlcnZpY2UsIFt7CiAgICBrZXk6ICJhZGROZXdNYWlsIiwKCiAgICAvKioKICAgICAqIEFkZCBuZXcgYW5kIHVuaXF1ZSB1c2VyIGVtYWlsCiAgICAgKiAKICAgICAqIEBwYXJhbSB7Kn0gZGF0YSAKICAgICAqLwogICAgdmFsdWU6IGZ1bmN0aW9uIGFkZE5ld01haWwoZGF0YSkgewogICAgICByZXR1cm4gQXhpb3MoewogICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgIHVybDogJ2VtYWlsJywKICAgICAgICBkYXRhOiBkYXRhCiAgICAgIH0pOwogICAgfQogICAgLyoqCiAgICAgKiBFZGl0IGFuIGV4aXN0aW5nIHVzZXIgZW1haWwKICAgICAqIAogICAgICogQHBhcmFtIHsqfSBkYXRhIAogICAgICovCgogIH0sIHsKICAgIGtleTogImVkaXRNYWlsIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBlZGl0TWFpbChkYXRhKSB7CiAgICAgIHJldHVybiBBeGlvcyh7CiAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgdXJsOiAnZW1haWwvJyArIGRhdGEuaWQsCiAgICAgICAgZGF0YTogZGF0YQogICAgICB9KTsKICAgIH0KICAgIC8qKgogICAgICogQWRkIG5ldyBhbmQgdW5pcXVlIHVzZXIgcGhvbmUgbnVtYmVyCiAgICAgKiAKICAgICAqIEBwYXJhbSB7Kn0gZGF0YSAKICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJhZGROZXdQaG9uZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gYWRkTmV3UGhvbmUoZGF0YSkgewogICAgICByZXR1cm4gQXhpb3MoewogICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgIHVybDogJ3Bob25lJywKICAgICAgICBkYXRhOiBkYXRhCiAgICAgIH0pOwogICAgfQogICAgLyoqCiAgICAgKiBFZGl0IGFuIGV4aXN0aW5nIHBob25lIG51bWJlcgogICAgICogCiAgICAgKiBAcGFyYW0geyp9IGRhdGEgCiAgICAgKi8KCiAgfSwgewogICAga2V5OiAiZWRpdFBob25lIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBlZGl0UGhvbmUoZGF0YSkgewogICAgICByZXR1cm4gQXhpb3MoewogICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgIHVybDogJ3Bob25lLycgKyBkYXRhLmlkLAogICAgICAgIGRhdGE6IGRhdGEKICAgICAgfSk7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gUHJvZmlsZVNlcnZpY2U7Cn0oKTsKCmV4cG9ydCBkZWZhdWx0IG5ldyBQcm9maWxlU2VydmljZSgpOw=="},{"version":3,"sources":["/var/www/html/1/medbook-dev-app-vue/src/services/ProfileService.js"],"names":["Axios","ProfileService","method","url","data","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,SAAlB;;IACMC,c;;;;qCAKQ,YAAM;AACZ,aAAOD,KAAK,CAAC;AACTE,QAAAA,MAAM,EAAG,KADA;AAETC,QAAAA,GAAG,EAAG;AAFG,OAAD,CAAZ;AAIH,K;;2CAOe,UAACC,IAAD,EAAU;AACtB,aAAOJ,KAAK,CAAC;AACTE,QAAAA,MAAM,EAAG,MADA;AAETC,QAAAA,GAAG,EAAG,gBAFG;AAGTC,QAAAA,IAAI,EAAGA;AAHE,OAAD,CAAZ;AAKH,K;;;;;;AAED;AACJ;AACA;AACA;AACA;+BACeA,I,EAAM;AACb,aAAOJ,KAAK,CAAC;AACTE,QAAAA,MAAM,EAAG,MADA;AAETC,QAAAA,GAAG,EAAG,OAFG;AAGTC,QAAAA,IAAI,EAAGA;AAHE,OAAD,CAAZ;AAKH;AAED;AACJ;AACA;AACA;AACA;;;;6BACaA,I,EAAM;AACX,aAAOJ,KAAK,CAAC;AACTE,QAAAA,MAAM,EAAG,MADA;AAETC,QAAAA,GAAG,EAAG,WAAWC,IAAI,CAACC,EAFb;AAGTD,QAAAA,IAAI,EAAGA;AAHE,OAAD,CAAZ;AAKH;AAED;AACJ;AACA;AACA;AACA;;;;gCACgBA,I,EAAM;AACd,aAAOJ,KAAK,CAAC;AACTE,QAAAA,MAAM,EAAG,MADA;AAETC,QAAAA,GAAG,EAAG,OAFG;AAGTC,QAAAA,IAAI,EAAGA;AAHE,OAAD,CAAZ;AAKH;AAED;AACJ;AACA;AACA;AACA;;;;8BACcA,I,EAAM;AACZ,aAAOJ,KAAK,CAAC;AACTE,QAAAA,MAAM,EAAG,MADA;AAETC,QAAAA,GAAG,EAAG,WAAWC,IAAI,CAACC,EAFb;AAGTD,QAAAA,IAAI,EAAGA;AAHE,OAAD,CAAZ;AAKH;;;;;;AAIL,eAAe,IAAIH,cAAJ,EAAf","sourcesContent":["import Axios from './Axios';\nclass ProfileService {\n\n    /**\n     * Get authenticated user profile data\n     */\n    profile = () => {\n        return Axios({\n            method : 'GET',\n            url : 'profile'\n        })\n    }\n\n    /**\n     * Update user profile\n     * \n     * @param {*} data new data\n     */\n    updateProfile = (data) => {\n        return Axios({\n            method : 'POST',\n            url : 'update_profile',\n            data : data\n        })\n    }\n    \n    /**\n     * Add new and unique user email\n     * \n     * @param {*} data \n     */\n    addNewMail(data) {\n        return Axios({\n            method : 'POST',\n            url : 'email',\n            data : data\n        });\n    }\n\n    /**\n     * Edit an existing user email\n     * \n     * @param {*} data \n     */\n    editMail(data) {\n        return Axios({\n            method : 'POST',\n            url : 'email/' + data.id,\n            data : data\n        });\n    }\n\n    /**\n     * Add new and unique user phone number\n     * \n     * @param {*} data \n     */\n    addNewPhone(data) {\n        return Axios({\n            method : 'POST',\n            url : 'phone',\n            data : data\n        });\n    }\n\n    /**\n     * Edit an existing phone number\n     * \n     * @param {*} data \n     */\n    editPhone(data) {\n        return Axios({\n            method : 'POST',\n            url : 'phone/' + data.id,\n            data : data\n        });\n    }\n\n\n}\nexport default new ProfileService;"]}]}
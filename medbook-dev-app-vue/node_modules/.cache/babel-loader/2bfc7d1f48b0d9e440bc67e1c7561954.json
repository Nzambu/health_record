{"remainingRequest":"/var/www/html/zue/node_modules/babel-loader/lib/index.js!/var/www/html/zue/node_modules/eslint-loader/index.js??ref--13-0!/var/www/html/zue/src/store/PropertyModule.js","dependencies":[{"path":"/var/www/html/zue/src/store/PropertyModule.js","mtime":1608039334720},{"path":"/var/www/html/zue/node_modules/cache-loader/dist/cjs.js","mtime":1605767621944},{"path":"/var/www/html/zue/node_modules/babel-loader/lib/index.js","mtime":1605767621946},{"path":"/var/www/html/zue/node_modules/eslint-loader/index.js","mtime":1605767633055}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvdmFyL3d3dy9odG1sL3p1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBQcm9wZXJ0eVNlcnZpY2UgZnJvbSAnLi4vc2VydmljZXMvUHJvcGVydHlTZXJ2aWNlJzsKdmFyIGluaXRpYWxTdGF0ZSA9IHsKICBwcm9wZXJ0eUxpc3Q6IG51bGwsCiAgcHJvcGVydHlMaXN0RXJyb3I6IG51bGwKfTsKZXhwb3J0IHZhciBwcm9wZXJ0eURldGFpbHMgPSB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogaW5pdGlhbFN0YXRlLAogIGFjdGlvbnM6IHsKICAgIGNyZWF0ZU5ld1Byb3BlcnR5OiBmdW5jdGlvbiBjcmVhdGVOZXdQcm9wZXJ0eShfcmVmLCBwcm9wZXJ0eSkgewogICAgICB2YXIgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgIHJldHVybiBQcm9wZXJ0eVNlcnZpY2UubmV3UHJvcGVydHkocHJvcGVydHkpLnRoZW4oZnVuY3Rpb24gKHN1Y2Nlc3MpIHsKICAgICAgICB2YXIgZGF0YSA9IHN1Y2Nlc3MuZGF0YTsKICAgICAgICBjb25zb2xlLmxvZyhzdWNjZXNzKTsKICAgICAgICBjb21taXQoJ2FkZFByb3BlcnR5TGlzdCcsIGRhdGEpOwogICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoZGF0YSk7CiAgICAgIH0sIGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIHZhciBkYXRhID0gZXJyb3IucmVzcG9uc2U7CiAgICAgICAgY29uc29sZS5sb2coZGF0YSk7CiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGRhdGEpOwogICAgICB9KTsKICAgIH0sCiAgICB1cGRhdGVQcm9wZXJ0eTogZnVuY3Rpb24gdXBkYXRlUHJvcGVydHkoX3JlZjIsIHByb3BlcnR5SUQsIHByb3BlcnR5KSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgICAgIHJldHVybiBQcm9wZXJ0eVNlcnZpY2UudXBkYXRlUHJvcGVydHkocHJvcGVydHlJRCwgcHJvcGVydHkpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgdmFyIGRhdGEgPSByZXNwb25zZS5kYXRhOwogICAgICAgIGNvbW1pdCgndXBkYXRlUHJvcGVydHlMaXN0JywgZGF0YSk7CiAgICAgIH0pOwogICAgfSwKICAgIGRlbGV0ZVByb3BlcnR5OiBmdW5jdGlvbiBkZWxldGVQcm9wZXJ0eShfcmVmMywgcHJvcGVydHlJRCkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBjb21taXQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjMuY29tbWl0OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gUHJvcGVydHlTZXJ2aWNlLmRlbGV0ZVByb3BlcnR5KHByb3BlcnR5SUQpLnRoZW4oKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgY29tbWl0KCdyZW1vdmVQcm9wZXJ0eUxpc3QnLCBwcm9wZXJ0eUlEKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIHByb3BlcnR5TGlzdDogZnVuY3Rpb24gcHJvcGVydHlMaXN0KF9yZWY0LCBvd25lcklEKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciBjb21taXQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWY0LmNvbW1pdDsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCBQcm9wZXJ0eVNlcnZpY2UuZ2V0T3duZXJQcm9wZXJ0eUxpc3Qob3duZXJJRCkudGhlbihmdW5jdGlvbiAoc3VjY2VzcykgewogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhzdWNjZXNzKTsKICAgICAgICAgICAgICAgICAgY29tbWl0KCdwcm9wZXJ0eUxpc3RTdWNjZXNzJywgc3VjY2Vzcy5kYXRhKTsKICAgICAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShzdWNjZXNzKTsKICAgICAgICAgICAgICAgIH0sIGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgICAgICAgICAgICAgIGNvbW1pdCgncHJvcGVydHlMaXN0RmFpbCcsIGVycm9yKTsKICAgICAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKICAgICAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIHByb3BlcnR5TGlzdFN1Y2Nlc3M6IGZ1bmN0aW9uIHByb3BlcnR5TGlzdFN1Y2Nlc3Moc3RhdGUsIHN1Y2Nlc3MpIHsKICAgICAgc3RhdGUucHJvcGVydHlMaXN0ID0gc3VjY2VzczsKICAgIH0sCiAgICBwcm9wZXJ0eUxpc3RGYWlsOiBmdW5jdGlvbiBwcm9wZXJ0eUxpc3RGYWlsKHN0YXRlLCBlcnJvcikgewogICAgICBzdGF0ZS5wcm9wZXJ0eUxpc3RFcnJvciA9IGVycm9yOwogICAgfSwKICAgIHJlbW92ZVByb3BlcnR5TGlzdDogZnVuY3Rpb24gcmVtb3ZlUHJvcGVydHlMaXN0KHN0YXRlLCBwcm9wZXJ0eUlEKSB7CiAgICAgIHN0YXRlLnByb3BlcnR5TGlzdCA9IHN0YXRlLnByb3BlcnR5TGlzdC5maWx0ZXIoZnVuY3Rpb24gKHByb3BlcnR5KSB7CiAgICAgICAgcmV0dXJuIHByb3BlcnR5LmlkICE9PSBwcm9wZXJ0eUlEOwogICAgICB9KTsKICAgIH0sCiAgICB1cGRhdGVQcm9wZXJ0eUxpc3Q6IGZ1bmN0aW9uIHVwZGF0ZVByb3BlcnR5TGlzdChzdGF0ZSwgcHJvcGVydHkpIHsKICAgICAgdmFyIHByb3BlcnR5SW5kZXggPSBzdGF0ZS5wcm9wZXJ0eUxpc3QuZmluZEluZGV4KGZ1bmN0aW9uIChlYWNoUHJvcGVydHkpIHsKICAgICAgICByZXR1cm4gZWFjaFByb3BlcnR5LmlkID09PSBwcm9wZXJ0eS5pZDsKICAgICAgfSk7CgogICAgICBpZiAocHJvcGVydHlJbmRleCAhPT0gLTEpIHsKICAgICAgICBzdGF0ZS5wcm9wZXJ0eUxpc3Quc3BsaWNlKHByb3BlcnR5SW5kZXgsIDEsIHByb3BlcnR5KTsKICAgICAgfQogICAgfSwKICAgIGFkZFByb3BlcnR5TGlzdDogZnVuY3Rpb24gYWRkUHJvcGVydHlMaXN0KHN0YXRlLCBwcm9wZXJ0eSkgewogICAgICBzdGF0ZS5wcm9wZXJ0eUxpc3QudW5zaGlmdChwcm9wZXJ0eSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/var/www/html/zue/src/store/PropertyModule.js"],"names":["PropertyService","initialState","propertyList","propertyListError","propertyDetails","namespaced","state","actions","createNewProperty","property","commit","newProperty","then","success","data","console","log","Promise","resolve","error","response","reject","updateProperty","propertyID","deleteProperty","ownerID","getOwnerPropertyList","mutations","propertyListSuccess","propertyListFail","removePropertyList","filter","id","updatePropertyList","propertyIndex","findIndex","eachProperty","splice","addPropertyList","unshift"],"mappings":"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","sourcesContent":["import PropertyService from '../services/PropertyService';\nconst initialState = {\n    propertyList : null,\n    propertyListError : null\n}\nexport const propertyDetails = {\n    namespaced : true,\n    state : initialState,\n    actions : {\n        createNewProperty({commit},property) {\n            return PropertyService.newProperty(property).then(\n                success => {\n                    let data = success.data\n                    console.log(success)\n                    commit('addPropertyList', data);\n                    return Promise.resolve(data)\n                },\n                error => {\n                    let data = error.response\n                    console.log(data)\n                    return Promise.reject(data)\n                }\n            );\n        },\n        updateProperty({commit}, propertyID, property) {\n            return PropertyService.updateProperty(propertyID, property).then(\n                response => {\n                    let data = response.data\n                    commit('updatePropertyList', data)\n                }\n            );\n        },\n        async deleteProperty({commit}, propertyID) {\n            await PropertyService.deleteProperty(propertyID).then();\n            commit('removePropertyList', propertyID)\n        },\n        async propertyList({commit}, ownerID){\n            return PropertyService.getOwnerPropertyList(ownerID).then(\n                success => {\n                    console.log(success)\n                    commit('propertyListSuccess', success.data);\n                    return Promise.resolve(success);\n                },\n                error => {\n                    console.log(error)\n                    commit('propertyListFail', error);\n                    return Promise.reject(error);\n                }\n            )\n        },\n    },\n    mutations : {\n        propertyListSuccess(state, success) {\n            state.propertyList = success\n        },\n        propertyListFail(state, error) {\n            state.propertyListError = error\n        },\n        removePropertyList(state, propertyID) {\n            state.propertyList = state.propertyList.filter((property) => property.id !== propertyID)\n        },\n        updatePropertyList(state, property) {\n            let propertyIndex = state.propertyList.findIndex( eachProperty => eachProperty.id === property.id)\n            if(propertyIndex !== -1) {\n                state.propertyList.splice(propertyIndex, 1, property)\n            }\n        },\n        addPropertyList(state, property) {\n            state.propertyList.unshift(property)\n        }\n    }\n}"]}]}
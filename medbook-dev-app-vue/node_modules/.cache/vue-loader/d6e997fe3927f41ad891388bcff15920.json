{"remainingRequest":"/var/www/html/1/medbook-dev-app-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/1/medbook-dev-app-vue/src/auth/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/1/medbook-dev-app-vue/src/auth/Login.vue","mtime":1611390583884},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/cache-loader/dist/cjs.js","mtime":1610518510696},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/babel-loader/lib/index.js","mtime":1610518510640},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/cache-loader/dist/cjs.js","mtime":1610518510696},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/vue-loader/lib/index.js","mtime":1610518511764}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"Login.vue","sourceRoot":"src/auth","sourcesContent":["<template>\n    <v-container \n        class=\"blue\"\n        fluid\n        fill-height\n    >\n        <v-row>\n            <v-col \n                offset-xl=\"4\"\n                xl=\"4\"\n                offset-lg=\"4\"\n                lg=\"4\"  \n                offset-md=\"3\"\n                md=\"6\" \n                offset-sm=\"2\"   \n                sm=\"8\" \n                xs=\"12\"         \n            >\n                <v-card\n                    class=\"mx-15 mx-xs-0\"\n                >\n                    <div>\n                        <v-snackbar\n                            color=\"red\"\n                            top\n                            v-model=\"snackbar\"\n                            timeout=\"-1\"\n                            tag=\"div\"\n                        >\n                            <v-list-item two-line \n                                v-for=\"(error, index) in errors\"\n                                :key=\"index\"\n                            >\n                                <v-list-item-content>\n                                    <v-list-item-title v-text=\"error[0]\"></v-list-item-title>\n                                </v-list-item-content>\n                            </v-list-item>\n                        <template v-slot:action=\"{ attrs }\">\n                            <v-btn\n                            color=\"red\"\n                            text\n                            v-bind=\"attrs\"\n                            @click=\"snackbar = false\"\n                            >\n                                <v-icon class=\"white--text\">mdi-close</v-icon>\n                            </v-btn>\n                        </template>\n                    </v-snackbar>\n                    </div>\n                    <v-card-text class=\"pt-10\">\n                        <h1 class=\"text-center primary--text\">Authentication</h1>\n                    </v-card-text>                    \n                    <v-row class=\"px-10 pb-5\">\n                        <v-col lg=\"12\">\n                            <validation-observer\n                                ref=\"loginObserver\"\n                            >\n                                <v-form \n                                    v-if=\"showLogin\"\n                                >                                \n                                    <validation-provider\n                                        v-slot=\"{errors}\"\n                                        name=\"Email\"\n                                        rules=\"required\"\n                                    >\n                                        <v-text-field\n                                            v-model=\"user.email\"\n                                            :error-messages=\"errors\"\n                                            label=\"Email\"\n                                            required\n                                            outlined\n                                            filled\n                                        >\n                                            <v-icon\n                                                slot=\"append\"\n                                            >\n                                            mdi-email\n                                            </v-icon>\n                                        </v-text-field>\n                                    </validation-provider>\n                                    <validation-provider\n                                        v-slot=\"{errors}\"\n                                        name=\"Password\"\n                                        rules=\"required\"\n                                    >\n                                        <v-text-field\n                                            v-model=\"user.password\"\n                                            :error-messages=\"errors\"\n                                            label=\"Password\"\n                                            type=\"password\"\n                                            required\n                                            outlined\n                                            filled\n                                        >\n                                            <v-icon\n                                                slot=\"append\"\n                                            >\n                                            mdi-lock\n                                            </v-icon>\n                                        </v-text-field>\n                                    </validation-provider>\n                                    <v-row class=\"pt-5\">\n                                        <v-col lg=\"12\">\n                                            <v-btn block                                                \n                                                class=\"success text-capitalize\"\n                                                @click=\"handleLogin\"\n                                            >Login</v-btn>\n                                        </v-col>\n                                    </v-row>\n                                    <v-row \n                                        class=\"py-5\"\n                                    >\n                                        <v-col \n                                            lg=\"6\"\n                                            class=\"pt-0 text-left py-0\"\n                                        >\n                                            <v-btn\n                                                class=\"white--text text-capitalize\"\n                                                color=\"warning\"\n                                                x-small\n                                                @click=\"handleForgotPassword\"\n                                            >Forgot Password</v-btn>\n                                        </v-col> \n                                        <v-col \n                                            lg=\"6\"\n                                            class=\"pt-0 text-right py-0 pl-0\"\n                                        >\n                                            <v-btn\n                                                class=\"white--text text-capitalize\"\n                                                color=\"blue\"\n                                                x-small\n                                                @click=\"handleRegister\"\n                                            >Create Account</v-btn>\n                                        </v-col> \n                                    </v-row>\n                                </v-form>\n                            </validation-observer>\n                            <v-form v-if=\"showRegister\">\n                                <validation-observer\n                                    ref=\"registerObserver\"\n                                >\n                                    <validation-provider\n                                        v-slot=\"{errors}\"\n                                        name=\"First Name\"\n                                        rules=\"required\"\n                                    >\n                                        <v-text-field\n                                            v-model=\"user.firstName\"\n                                            :error-messages=\"errors\"\n                                            label=\"First Name\"\n                                            required\n                                        ></v-text-field>\n                                    </validation-provider>\n                                    <validation-provider\n                                        v-slot=\"{errors}\"\n                                        name=\"Last Name\"\n                                        rules=\"required\"\n                                    >\n                                        <v-text-field\n                                            v-model=\"user.lastName\"\n                                            :error-messages=\"errors\"\n                                            label=\"Last Name\"\n                                            required\n                                        ></v-text-field>\n                                    </validation-provider>\n                                    <validation-provider\n                                        v-slot=\"{errors}\"\n                                        name=\"Email\"\n                                        rules=\"required\"\n                                    >\n                                        <v-text-field\n                                            v-model=\"user.email\"\n                                            :error-messages=\"errors\"\n                                            label=\"Email\"\n                                            required\n                                        ></v-text-field>\n                                    </validation-provider>\n                                    <validation-provider\n                                        v-slot=\"{errors}\"\n                                        name=\"Password\"\n                                        rules=\"required\"\n                                    >\n                                        <v-text-field\n                                            v-model=\"user.password\"\n                                            :error-messages=\"errors\"\n                                            label=\"Password\"\n                                            required\n                                        ></v-text-field>\n                                    </validation-provider>\n                                    <!-- <v-row class=\"pt-5\">\n                                        <v-col lg=\"6\">\n                                            <v-btn block\n                                                class=\"grey text-capitalize\"\n                                                @click=\"handleCancelShow\"\n                                            >Cancel</v-btn>\n                                        </v-col>\n                                        <v-col lg=\"6\">\n                                            <v-btn block\n                                                class=\"success text-capitalize\"\n                                                @click=\"handleRegistration\"\n                                            >Register</v-btn>\n                                        </v-col>\n                                    </v-row> -->\n                                    <v-row class=\"pt-5\">                                            \n                                            <v-col \n                                                xl=\"12\"\n                                                lg=\"12\"\n                                                md=\"12\"\n                                                sm=\"12\"\n                                                xs=\"12\"\n                                            >\n                                                <v-btn block\n                                                    class=\"success text-capitalize\"\n                                                    @click=\"handleRegistration\"\n                                                >Register</v-btn>\n                                            </v-col>\n                                        </v-row>\n                                        <v-row>\n                                            <v-col \n                                                xl=\"12\"\n                                                lg=\"12\"\n                                                md=\"12\"\n                                                sm=\"12\"\n                                                xs=\"12\"\n                                            >\n                                                <v-btn\n                                                    class=\"grey white--text text-capitalize\"\n                                                    x-small\n                                                    @click=\"handleCancelShow\"\n                                                >Cancel</v-btn>\n                                            </v-col>\n                                        </v-row>\n                                </validation-observer>\n                            </v-form>\n                            <v-form v-if=\"showForgotPassword\">\n                                    <validation-observer\n                                        ref=\"forgotPasswordObserver\"\n                                        lazy-validation\n                                    >                                        \n                                        <validation-provider\n                                            v-slot=\"{errors}\"\n                                            name=\"Email\"\n                                            rules=\"required\"\n                                        >\n                                            <v-text-field\n                                                v-model=\"user.email\"\n                                                :error-messages=\"errors\"\n                                                label=\"Email\"\n                                                required\n                                                outlined\n                                                filled\n                                            >\n                                                <v-icon\n                                                    slot=\"append\"\n                                                >mdi-email</v-icon>\n                                            </v-text-field>\n                                        </validation-provider>                                        \n                                        <v-row class=\"pt-5\">                                            \n                                            <v-col \n                                                xl=\"12\"\n                                                lg=\"12\"\n                                                md=\"12\"\n                                                sm=\"12\"\n                                                xs=\"12\"\n                                            >\n                                                <v-btn block\n                                                    class=\"success text-capitalize\"\n                                                    @click=\"handleResetPassword\"\n                                                >Send Reset Email</v-btn>\n                                            </v-col>\n                                        </v-row>\n                                        <v-row>\n                                            <v-col \n                                                xl=\"12\"\n                                                lg=\"12\"\n                                                md=\"12\"\n                                                sm=\"12\"\n                                                xs=\"12\"\n                                            >\n                                                <v-btn\n                                                    class=\"grey white--text text-capitalize\"\n                                                    x-small\n                                                    @click=\"handleCancelShow\"\n                                                >Cancel</v-btn>\n                                            </v-col>\n                                        </v-row>\n                                    </validation-observer>\n                                </v-form>\n                        </v-col>\n                    </v-row>\n                </v-card>\n            </v-col>\n        </v-row>\n    </v-container>\n</template>\n<script>\nimport Auth from '../models/Auth';\nimport Axios from '../services/Axios';\nimport ForgotPasswordService from '../services/ForgotPasswordService';\nexport default {\n    name : 'Login',    \n    data() {\n        return {\n            user : new Auth('', '', '', ''),\n            showLogin : true,\n            showForgotPassword : false,\n            showRegister : false,\n            snackbar : false,\n            vertical : true,\n            errors : '',\n        }\n    },\n    methods : {        \n        /**\n         * Default show\n         */\n        handleCancelShow() {\n            this.showLogin = true;\n            this.showRegister = false;\n            this.showForgotPassword = false;\n        },\n\n        /**\n         * Show forgot password form\n         */\n        handleForgotPassword() {\n            this.showLogin = !this.showLogin;\n            this.showForgotPassword = !this.showForgotPassword\n        },\n\n        /**\n         * Show registeration form\n         */\n        handleRegister() {\n            this.showLogin = !this.showLogin;\n            this.showRegister = !this.showRegister\n        },\n\n                /**\n         * Authenticate user\n         */\n        handleLogin() {\n            this.$refs.loginObserver.validate().then(\n                isValid => {\n                    if(isValid === true) {\n                        this.$store.dispatch('auth/login', this.user)\n                        .then(\n                            (response) => {\n                            let data = response\n                            /**\n                             * Successfully logged in\n                             */\n                            if(response.data.attributes !== undefined) {\n                                let tokenBearer = response.data\n                                let token = tokenBearer.attributes.access_token\n                                if(token) {\n                                    // Store token in session storage\n                                    sessionStorage.setItem('token', JSON.stringify(token));\n                                    // Set the authorization bearer token\n                                    Axios.defaults.headers.common.Authorization = 'Bearer '+ token\n                                    // Redirect to the requested link or profile\n                                    let path = this.$route.query.from\n                                    if(path === '/') {\n                                        this.$router.push('/patient')\n                                    } else {\n                                        this.$router.push(path || '/patient')\n                                    }\n                                } \n                            } else {\n                                /**\n                                 * User does not exist or its invalid\n                                 */\n                                if(response.data.errors) {\n                                    let error = data.response.data.errors\n                                    return this.handleErrorsFromAPI(error)\n                                }\n                                \n                                /**\n                                 * Password is wrong\n                                 */\n                                if(response.data.error.code) {\n                                    let message = response.data.error.detail                    \n                                    let error =  []\n                                    error.push([message])\n                                    return this.handleErrorsFromAPI(error)\n                                }\n                            }\n                            },\n                            (failed) => {\n                               let error = failed.response.data.errors \n                                return this.handleErrorsFromAPI(error)\n                            }\n                        )\n                    }\n                }\n            );            \n        },\n\n        /**\n         * Authenticate user\n         */\n        TODOhandleLogin() {\n            this.$refs.loginObserver.validate().then(\n                isValid => {\n                    if(isValid === true){\n\n                        this.$store.dispatch('auth/login', this.user)\n                        .then(\n                            (response) => {\n                            let data = response\n\n                                /**\n                                 * TODO\n                                 * Handle password error\n                                 */\n                                if(response.data.error.status === 401) {\n                                    // let error = data.data.error.detail\n                                    let message = data.data.error.detail                    \n                                    let error =  []\n                                    error.push([message])\n                                    return this.handleErrorsFromAPI(error)\n                                }\n\n\n                                /**\n                                 * Successfully logged in\n                                 */\n                                if(response.data) {\n                                    let tokenBearer = response.data\n                                    let token = tokenBearer.attributes.access_token\n                                    if(token) {\n                                        // Store token in session storage\n                                        sessionStorage.setItem('token', JSON.stringify(token));\n                                        // Set the authorization bearer token\n                                        Axios.defaults.headers.common.Authorization = 'Bearer '+ token\n                                        // Redirect to the requested link or profile\n                                        let path = this.$route.query.from\n                                        if(path === '/') {\n                                            this.$router.push('/patient')\n                                        } else {\n                                            this.$router.push(path || '/patient')\n                                        }\n                                    }\n                                    // let tokenBearer = response.data\n                                    // let token = tokenBearer.attributes.access_token\n                                    // if(token) {\n                                    //     // Store token in session storage\n                                    //     sessionStorage.setItem('token', JSON.stringify(token));\n                                    //     // Set the authorization bearer token\n                                    //     Axios.defaults.headers.common.Authorization = 'Bearer '+ token\n                                    //     // Redirect to the requested link or profile\n                                    //     let path = this.$route.query.from\n                                    //     if(path === '/') {\n                                    //         this.$router.push('/patient')\n                                    //     } else {\n                                    //         this.$router.push(path || '/patient')\n                                    //     }\n                                    // } \n                                } else {\n\n                                    /**\n                                     * User does not exist or its invalid\n                                     */\n                                    if(response.response.data.errors) {\n                                        let error = data.response.data.errors\n                                        return this.handleErrorsFromAPI(error)\n                                    }\n                                    \n                                    /**\n                                     * Password is wrong\n                                     */\n                                    if(response.response.data.error.code) { \n                                        let message = data.response.data.error.detail                    \n                                        let error =  []\n                                        error.push([message])\n                                        return this.handleErrorsFromAPI(error)\n                                    }\n                                }\n                            },\n                            (fail) => {   \n                                console.log(fail)          \n                                let error = fail.data.errors \n                                return this.handleErrorsFromAPI(error)\n                            }\n                        );\n                     }\n                }                \n            );\n        },\n\n        /**\n         * Register new user\n         */\n        async handleRegistration() {\n            await this.$refs.registerObserver.validate().then(\n                passValidation => {\n                    if(passValidation === true)\n                    {\n                        console.log(passValidation)\n                    }\n                }\n            );\n        },\n\n        /**\n         * Send reset password email\n         */\n        handleResetPassword() {\n            this.$refs.forgotPasswordObserver.validate().then(\n                success => {\n                    if(success === true)\n                    {\n                        // this.$store.dispatch('auth/sendResetPasswordEmail', this.user)\n                        return ForgotPasswordService.sendResetPasswordEmail(this.user)\n                        .then(\n                            feedback => {\n                                let status = feedback.status\n                                if(status === 200)\n                                {\n                                    console.log(feedback)\n                                }\n                                if(status === 422) {\n                                    let errors = feedback.data.errors\n                                    return this.handleErrorsFromAPI(errors)\n                                }\n                            }\n                        )\n                    }\n                }\n            );\n        },\n\n        /**\n         * Render errors from the API\n         */\n        handleErrorsFromAPI(error)\n        {\n            this.errors = error\n            this.snackbar = true\n        }\n    }\n}\n</script>"]}]}
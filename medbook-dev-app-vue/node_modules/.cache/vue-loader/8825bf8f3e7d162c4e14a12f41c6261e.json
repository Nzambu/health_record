{"remainingRequest":"/var/www/html/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/vue/src/auth/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/vue/src/auth/Login.vue","mtime":1610397156572},{"path":"/var/www/html/vue/node_modules/cache-loader/dist/cjs.js","mtime":1608645174000},{"path":"/var/www/html/vue/node_modules/babel-loader/lib/index.js","mtime":1608645174000},{"path":"/var/www/html/vue/node_modules/cache-loader/dist/cjs.js","mtime":1608645174000},{"path":"/var/www/html/vue/node_modules/vue-loader/lib/index.js","mtime":1608645174000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBBdXRoIGZyb20gJy4uL21vZGVscy9BdXRoJzsKaW1wb3J0IEF4aW9zIGZyb20gJy4uL3NlcnZpY2VzL0F4aW9zJzsKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZSA6ICdMb2dpbicsICAgIAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICB1c2VyIDogbmV3IEF1dGgoJycsICcnLCAnJywgJycpLAogICAgICAgICAgICBzaG93TG9naW4gOiB0cnVlLAogICAgICAgICAgICBzaG93Rm9yZ290UGFzc3dvcmQgOiBmYWxzZSwKICAgICAgICAgICAgc2hvd1JlZ2lzdGVyIDogZmFsc2UsCiAgICAgICAgICAgIHNuYWNrYmFyIDogZmFsc2UsCiAgICAgICAgICAgIHZlcnRpY2FsIDogdHJ1ZSwKICAgICAgICAgICAgZXJyb3JzIDogJycsCiAgICAgICAgfQogICAgfSwKICAgIG1ldGhvZHMgOiB7ICAgICAgICAKICAgICAgICAvKioKICAgICAgICAgKiBEZWZhdWx0IHNob3cKICAgICAgICAgKi8KICAgICAgICBoYW5kbGVDYW5jZWxTaG93KCkgewogICAgICAgICAgICB0aGlzLnNob3dMb2dpbiA9IHRydWU7CiAgICAgICAgICAgIHRoaXMuc2hvd1JlZ2lzdGVyID0gZmFsc2U7CiAgICAgICAgICAgIHRoaXMuc2hvd0ZvcmdvdFBhc3N3b3JkID0gZmFsc2U7CiAgICAgICAgfSwKCiAgICAgICAgLyoqCiAgICAgICAgICogU2hvdyBmb3Jnb3QgcGFzc3dvcmQgZm9ybQogICAgICAgICAqLwogICAgICAgIGhhbmRsZUZvcmdvdFBhc3N3b3JkKCkgewogICAgICAgICAgICB0aGlzLnNob3dMb2dpbiA9ICF0aGlzLnNob3dMb2dpbjsKICAgICAgICAgICAgdGhpcy5zaG93Rm9yZ290UGFzc3dvcmQgPSAhdGhpcy5zaG93Rm9yZ290UGFzc3dvcmQKICAgICAgICB9LAoKICAgICAgICAvKioKICAgICAgICAgKiBTaG93IHJlZ2lzdGVyYXRpb24gZm9ybQogICAgICAgICAqLwogICAgICAgIGhhbmRsZVJlZ2lzdGVyKCkgewogICAgICAgICAgICB0aGlzLnNob3dMb2dpbiA9ICF0aGlzLnNob3dMb2dpbjsKICAgICAgICAgICAgdGhpcy5zaG93UmVnaXN0ZXIgPSAhdGhpcy5zaG93UmVnaXN0ZXIKICAgICAgICB9LAoKICAgICAgICAvKioKICAgICAgICAgKiBBdXRoZW50aWNhdGUgdXNlcgogICAgICAgICAqLwogICAgICAgIGFzeW5jIGhhbmRsZUxvZ2luKCkgewogICAgICAgICAgICBjb25zdCBpbnZhbGlkID0gYXdhaXQgdGhpcy4kcmVmcy5sb2dpbk9ic2VydmVyLnZhbGlkYXRlKCk7CiAgICAgICAgICAgIGlmKGludmFsaWQpIHsKICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCJrdWt1IGRhbmNlIikKICAgICAgICAgICAgfSAgCiAgICAgICAgICAgIAoKICAgICAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2F1dGgvbG9naW4nLCB0aGlzLnVzZXIpCiAgICAgICAgICAgIC50aGVuKAogICAgICAgICAgICAgICAgKHJlc3BvbnNlKSA9PiB7CiAgICAgICAgICAgICAgICBsZXQgZGF0YSA9IHJlc3BvbnNlCgogICAgICAgICAgICAgICAgLyoqCiAgICAgICAgICAgICAgICAgKiBTdWNjZXNzZnVsbHkgbG9nZ2VkIGluCiAgICAgICAgICAgICAgICAgKi8KICAgICAgICAgICAgICAgIGlmKHJlc3BvbnNlLmRhdGEpIHsKICAgICAgICAgICAgICAgICAgICBsZXQgdG9rZW5CZWFyZXIgPSByZXNwb25zZS5kYXRhCiAgICAgICAgICAgICAgICAgICAgbGV0IHRva2VuID0gdG9rZW5CZWFyZXIuYXR0cmlidXRlcy5hY2Nlc3NfdG9rZW4KICAgICAgICAgICAgICAgICAgICBpZih0b2tlbikgewogICAgICAgICAgICAgICAgICAgICAgICAvLyBTdG9yZSB0b2tlbiBpbiBzZXNzaW9uIHN0b3JhZ2UKICAgICAgICAgICAgICAgICAgICAgICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgndG9rZW4nLCBKU09OLnN0cmluZ2lmeSh0b2tlbikpOwogICAgICAgICAgICAgICAgICAgICAgICAvLyBTZXQgdGhlIGF1dGhvcml6YXRpb24gYmVhcmVyIHRva2VuCiAgICAgICAgICAgICAgICAgICAgICAgIEF4aW9zLmRlZmF1bHRzLmhlYWRlcnMuY29tbW9uLkF1dGhvcml6YXRpb24gPSAnQmVhcmVyICcrIHRva2VuCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFJlZGlyZWN0IHRvIHRoZSByZXF1ZXN0ZWQgbGluayBvciBwcm9maWxlCiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBwYXRoID0gdGhpcy4kcm91dGUucXVlcnkuZnJvbQogICAgICAgICAgICAgICAgICAgICAgICBpZihwYXRoID09PSAnLycpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvcHJvZmlsZScpCiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaChwYXRoIHx8ICcvcHJvZmlsZScpCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9IAogICAgICAgICAgICAgICAgfSBlbHNlIHsKCiAgICAgICAgICAgICAgICAgICAgLyoqCiAgICAgICAgICAgICAgICAgICAgICogVXNlciBkb2VzIG5vdCBleGlzdCBvciBpdHMgaW52YWxpZAogICAgICAgICAgICAgICAgICAgICAqLwogICAgICAgICAgICAgICAgICAgIGlmKHJlc3BvbnNlLnJlc3BvbnNlLmRhdGEuZXJyb3JzKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc25hY2tiYXIgPSB0cnVlOwogICAgICAgICAgICAgICAgICAgICAgICBsZXQgZXJyb3IgPSBkYXRhLnJlc3BvbnNlLmRhdGEuZXJyb3JzCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZXJyb3JzID0gZXJyb3I7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAvKioKICAgICAgICAgICAgICAgICAgICAgKiBQYXNzd29yZCBpcyB3cm9uZwogICAgICAgICAgICAgICAgICAgICAqLwogICAgICAgICAgICAgICAgICAgIGlmKHJlc3BvbnNlLnJlc3BvbnNlLmRhdGEuZXJyb3IuY29kZSkgewogICAgICAgICAgICAgICAgICAgICAgICBsZXQgbWVzc2FnZSA9IGRhdGEucmVzcG9uc2UuZGF0YS5lcnJvci5kZXRhaWwgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICBsZXQgZXJyb3IgPSAgW10KICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3IucHVzaChbbWVzc2FnZV0pCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZXJyb3JzID0gZXJyb3IKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zbmFja2JhciA9IHRydWUKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgKGVycm9yKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICkKICAgICAgICB9LAoKICAgICAgICAvKioKICAgICAgICAgKiBSZWdpc3RlciBuZXcgdXNlcgogICAgICAgICAqLwogICAgICAgIGFzeW5jIGhhbmRsZVJlZ2lzdHJhdGlvbigpIHsKICAgICAgICAgICAgY29uc3QgaW52YWxpZCA9IGF3YWl0IHRoaXMuJHJlZnMucmVnaXN0ZXJPYnNlcnZlci52YWxpZGF0ZSgpOwogICAgICAgICAgICBpZihpbnZhbGlkKSB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygpCiAgICAgICAgICAgIH0KCiAgICAgICAgfSwKCiAgICAgICAgLyoqCiAgICAgICAgICogU2VuZCByZXNldCBwYXNzd29yZCBlbWFpbAogICAgICAgICAqLwogICAgICAgIGFzeW5jIGhhbmRsZVJlc2V0UGFzc3dvcmQoKSB7CiAgICAgICAgICAgIGNvbnN0IGludmFsaWQgPSBhd2FpdCB0aGlzLiRyZWZzLmZvcmdvdFBhc3N3b3JkT2JzZXJ2ZXIudmFsaWRhdGUoKTsKICAgICAgICAgICAgaWYoaW52YWxpZCkgewogICAgICAgICAgICAgICAgY29uc29sZS5sb2coKQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/auth","sourcesContent":["<template>\n    <v-container \n        class=\"blue\"\n        fluid\n        fill-height\n    >\n        <v-row>\n            <v-col \n                offset-lg=\"4\"\n                lg=\"4\"\n            >\n                <v-card>\n                    <v-card-text class=\"pt-10\">\n                        <h1 class=\"text-center primary--text\">Authentication</h1>\n                    </v-card-text>\n                    <div class=\"pt-15\">\n                        <v-snackbar\n                            color=\"red\"\n                            top\n                            v-model=\"snackbar\"\n                            timeout=\"-1\"\n                            tag=\"div\"\n                        >\n                            <v-list-item two-line \n                                v-for=\"(error, index) in errors\"\n                                :key=\"index\"\n                            >\n                                <v-list-item-content>\n                                    <v-list-item-title v-text=\"error[0]\"></v-list-item-title>\n                                </v-list-item-content>\n                            </v-list-item>\n                        <template v-slot:action=\"{ attrs }\">\n                            <v-btn\n                            color=\"red\"\n                            text\n                            v-bind=\"attrs\"\n                            @click=\"snackbar = false\"\n                            >\n                                <v-icon class=\"white--text\">mdi-close</v-icon>\n                            </v-btn>\n                        </template>\n                    </v-snackbar>\n                    </div>\n                    <v-row class=\"px-10 pb-5\">\n                        <v-col lg=\"12\">\n                            <validation-observer\n                                ref=\"loginObserver\"\n                            >\n                                <v-form \n                                    v-if=\"showLogin\"\n                                >                                \n                                    <validation-provider\n                                        v-slot=\"{errors}\"\n                                        name=\"Email\"\n                                        rules=\"required\"\n                                    >\n                                        <v-text-field\n                                            v-model=\"user.email\"\n                                            :error-messages=\"errors\"\n                                            label=\"Email\"\n                                            required\n                                        ></v-text-field>\n                                    </validation-provider>\n                                    <validation-provider\n                                        v-slot=\"{errors}\"\n                                        name=\"Password\"\n                                        rules=\"required\"\n                                    >\n                                        <v-text-field\n                                            v-model=\"user.password\"\n                                            :error-messages=\"errors\"\n                                            label=\"Password\"\n                                            type=\"password\"\n                                            required\n                                        ></v-text-field>\n                                    </validation-provider>\n                                    <v-row class=\"pt-5\">\n                                        <v-col lg=\"12\">\n                                            <v-btn block                                                \n                                                class=\"success text-capitalize\"\n                                                @click=\"handleLogin\"\n                                            >Login</v-btn>\n                                        </v-col>\n                                    </v-row>\n                                    <v-row \n                                        class=\"py-5\"\n                                    >\n                                        <v-col \n                                            lg=\"6\"\n                                            class=\"pt-0\"\n                                        >\n                                            <p class=\"text-left py-0 pl-0\" @click=\"handleForgotPassword\"><small>Forgot password? <span class=\"primary--text\">Click here</span></small></p>\n                                        </v-col> \n                                        <v-col \n                                            lg=\"6\"\n                                            class=\"pt-0\"\n                                        >\n                                            <p class=\"text-right py-0 pl-0\" @click=\"handleRegister\"><small><span class=\"primary--text\">Register</span></small></p>\n                                        </v-col> \n                                    </v-row>\n                                </v-form>\n                            </validation-observer>\n                            <v-form v-if=\"showRegister\">\n                                <validation-observer\n                                    ref=\"registerObserver\"\n                                >\n                                    <validation-provider\n                                        v-slot=\"{errors}\"\n                                        name=\"First Name\"\n                                        rules=\"required\"\n                                    >\n                                        <v-text-field\n                                            v-model=\"user.firstName\"\n                                            :error-messages=\"errors\"\n                                            label=\"First Name\"\n                                            required\n                                        ></v-text-field>\n                                    </validation-provider>\n                                    <validation-provider\n                                        v-slot=\"{errors}\"\n                                        name=\"Last Name\"\n                                        rules=\"required\"\n                                    >\n                                        <v-text-field\n                                            v-model=\"user.lastName\"\n                                            :error-messages=\"errors\"\n                                            label=\"Last Name\"\n                                            required\n                                        ></v-text-field>\n                                    </validation-provider>\n                                    <validation-provider\n                                        v-slot=\"{errors}\"\n                                        name=\"Email\"\n                                        rules=\"required\"\n                                    >\n                                        <v-text-field\n                                            v-model=\"user.email\"\n                                            :error-messages=\"errors\"\n                                            label=\"Email\"\n                                            required\n                                        ></v-text-field>\n                                    </validation-provider>\n                                    <validation-provider\n                                        v-slot=\"{errors}\"\n                                        name=\"Password\"\n                                        rules=\"required\"\n                                    >\n                                        <v-text-field\n                                            v-model=\"user.password\"\n                                            :error-messages=\"errors\"\n                                            label=\"Password\"\n                                            required\n                                        ></v-text-field>\n                                    </validation-provider>\n                                    <v-row class=\"pt-5\">\n                                        <v-col lg=\"6\">\n                                            <v-btn block\n                                                class=\"grey text-capitalize\"\n                                                @click=\"handleCancelShow\"\n                                            >Cancel</v-btn>\n                                        </v-col>\n                                        <v-col lg=\"6\">\n                                            <v-btn block\n                                                class=\"success text-capitalize\"\n                                                @click=\"handleRegistration\"\n                                            >Register</v-btn>\n                                        </v-col>\n                                    </v-row>\n                                </validation-observer>\n                            </v-form>\n                            <v-form v-if=\"showForgotPassword\">\n                                    <validation-observer\n                                        ref=\"forgotPasswordObserver\"\n                                        lazy-validation\n                                    >                                        \n                                        <validation-provider\n                                            v-slot=\"{errors}\"\n                                            name=\"Email\"\n                                            rules=\"required\"\n                                        >\n                                            <v-text-field\n                                                v-model=\"user.email\"\n                                                :error-messages=\"errors\"\n                                                label=\"Email\"\n                                                required\n                                            ></v-text-field>\n                                        </validation-provider>                                        \n                                        <v-row class=\"pt-5\">\n                                            <v-col lg=\"6\">\n                                            <v-btn block\n                                                class=\"grey text-capitalize\"\n                                                @click=\"handleCancelShow\"\n                                            >Cancel</v-btn>\n                                        </v-col>\n                                            <v-col lg=\"6\">\n                                                <v-btn block\n                                                    class=\"success text-capitalize\"\n                                                    @click=\"handleResetPassword\"\n                                                >Send Reset Email</v-btn>\n                                            </v-col>\n                                        </v-row>\n                                    </validation-observer>\n                                </v-form>\n                        </v-col>\n                    </v-row>\n                </v-card>\n            </v-col>\n        </v-row>\n    </v-container>\n</template>\n<script>\nimport Auth from '../models/Auth';\nimport Axios from '../services/Axios';\nexport default {\n    name : 'Login',    \n    data() {\n        return {\n            user : new Auth('', '', '', ''),\n            showLogin : true,\n            showForgotPassword : false,\n            showRegister : false,\n            snackbar : false,\n            vertical : true,\n            errors : '',\n        }\n    },\n    methods : {        \n        /**\n         * Default show\n         */\n        handleCancelShow() {\n            this.showLogin = true;\n            this.showRegister = false;\n            this.showForgotPassword = false;\n        },\n\n        /**\n         * Show forgot password form\n         */\n        handleForgotPassword() {\n            this.showLogin = !this.showLogin;\n            this.showForgotPassword = !this.showForgotPassword\n        },\n\n        /**\n         * Show registeration form\n         */\n        handleRegister() {\n            this.showLogin = !this.showLogin;\n            this.showRegister = !this.showRegister\n        },\n\n        /**\n         * Authenticate user\n         */\n        async handleLogin() {\n            const invalid = await this.$refs.loginObserver.validate();\n            if(invalid) {\n                // console.log(\"kuku dance\")\n            }  \n            \n\n            this.$store.dispatch('auth/login', this.user)\n            .then(\n                (response) => {\n                let data = response\n\n                /**\n                 * Successfully logged in\n                 */\n                if(response.data) {\n                    let tokenBearer = response.data\n                    let token = tokenBearer.attributes.access_token\n                    if(token) {\n                        // Store token in session storage\n                        sessionStorage.setItem('token', JSON.stringify(token));\n                        // Set the authorization bearer token\n                        Axios.defaults.headers.common.Authorization = 'Bearer '+ token\n                        // Redirect to the requested link or profile\n                        let path = this.$route.query.from\n                        if(path === '/') {\n                            this.$router.push('/profile')\n                        } else {\n                            this.$router.push(path || '/profile')\n                        }\n                    } \n                } else {\n\n                    /**\n                     * User does not exist or its invalid\n                     */\n                    if(response.response.data.errors) {\n                        this.snackbar = true;\n                        let error = data.response.data.errors\n                        this.errors = error;\n                        console.log(error)\n                    }\n                    \n                    /**\n                     * Password is wrong\n                     */\n                    if(response.response.data.error.code) {\n                        let message = data.response.data.error.detail                    \n                        let error =  []\n                        error.push([message])\n                        this.errors = error\n                        this.snackbar = true\n                    }\n                }\n                },\n                (error) => {\n                    console.log(error)\n                }\n            )\n        },\n\n        /**\n         * Register new user\n         */\n        async handleRegistration() {\n            const invalid = await this.$refs.registerObserver.validate();\n            if(invalid) {\n                console.log()\n            }\n\n        },\n\n        /**\n         * Send reset password email\n         */\n        async handleResetPassword() {\n            const invalid = await this.$refs.forgotPasswordObserver.validate();\n            if(invalid) {\n                console.log()\n            }\n        }\n    }\n}\n</script>"]}]}
{"remainingRequest":"/var/www/html/1/medbook-dev-app-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/1/medbook-dev-app-vue/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/1/medbook-dev-app-vue/src/App.vue","mtime":1610974103392},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/cache-loader/dist/cjs.js","mtime":1610518510696},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/babel-loader/lib/index.js","mtime":1610518510640},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/cache-loader/dist/cjs.js","mtime":1610518510696},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/vue-loader/lib/index.js","mtime":1610518511764}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBBeGlvcyBmcm9tICcuL3NlcnZpY2VzL0F4aW9zJzsKLy8gaW1wb3J0IEhlbGxvV29ybGQgZnJvbSAnLi9jb21wb25lbnRzL0hlbGxvV29ybGQnOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdBcHAnLAoKICBjb21wb25lbnRzOiB7CiAgICAvLyBIZWxsb1dvcmxkLAogIH0sCgogIGRhdGE6ICgpID0+ICh7CiAgICAvLwogIH0pLAoKICBjcmVhdGVkICgpIHsKICAgIEF4aW9zLmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoCiAgICAgIHJlc3BvbnNlID0+IHsKICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSkKICAgICAgfSwKICAgICAgZXJyb3IgPT4gewogICAgICAgIGNvbnNvbGUubG9nKGVycm9yWzBdKQogICAgICAgICBpZihlcnJvci5zdGF0dXMgPT09IDQwMSkgewogICAgICAgICAgIGNvbnNvbGUubG9nKCJ0aGlzIGlzIGFuIGVycm9yIikKICAgICAgICAgfQogICAgfSk7CiAgfQp9Owo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <v-app>\n    <!-- <v-container fill-height fluid> -->\n      <router-view></router-view>\n    <!-- </v-container> -->\n  </v-app>\n\n</template>\n\n<script>\nimport Axios from './services/Axios';\n// import HelloWorld from './components/HelloWorld';\n\nexport default {\n  name: 'App',\n\n  components: {\n    // HelloWorld,\n  },\n\n  data: () => ({\n    //\n  }),\n\n  created () {\n    Axios.interceptors.response.use(\n      response => {\n        console.log(response)\n      },\n      error => {\n        console.log(error[0])\n         if(error.status === 401) {\n           console.log(\"this is an error\")\n         }\n    });\n  }\n};\n</script>\n"]}]}
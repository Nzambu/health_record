{"remainingRequest":"/var/www/html/zue/node_modules/babel-loader/lib/index.js!/var/www/html/zue/node_modules/eslint-loader/index.js??ref--13-0!/var/www/html/zue/src/services/AuthService.js","dependencies":[{"path":"/var/www/html/zue/src/services/AuthService.js","mtime":1608022804388},{"path":"/var/www/html/zue/node_modules/cache-loader/dist/cjs.js","mtime":1605767621944},{"path":"/var/www/html/zue/node_modules/babel-loader/lib/index.js","mtime":1605767621946},{"path":"/var/www/html/zue/node_modules/eslint-loader/index.js","mtime":1605767633055}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZSI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiL3Zhci93d3cvaHRtbC96dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvdmFyL3d3dy9odG1sL3p1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gIi92YXIvd3d3L2h0bWwvenVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CmltcG9ydCBBeGlvcyBmcm9tICcuL0F4aW9zJzsKCnZhciBBdXRoU2VydmljZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gQXV0aFNlcnZpY2UoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQXV0aFNlcnZpY2UpOwoKICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAibWUiLCBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBBeGlvcyh7CiAgICAgICAgbWV0aG9kOiAnR0VUJywKICAgICAgICB1cmw6ICdtZScKICAgICAgfSk7CiAgICB9KTsKICB9CgogIF9jcmVhdGVDbGFzcyhBdXRoU2VydmljZSwgW3sKICAgIGtleTogImxvZ2luIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBsb2dpbihkYXRhKSB7CiAgICAgIHJldHVybiBBeGlvcyh7CiAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgdXJsOiAnbG9naW4nLAogICAgICAgIGRhdGE6IGRhdGEKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICB2YXIgdXNlciA9IHJlc3BvbnNlLmRhdGE7CgogICAgICAgIGlmICh1c2VyICYmIHJlc3BvbnNlLmRhdGEuYWNjZXNzX3Rva2VuKSB7CiAgICAgICAgICAvLyBTdG9yZSB0b2tlbiBpbiBzZXNzaW9uIHN0b3JhZ2UKICAgICAgICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oJ3VzZXInLCBKU09OLnN0cmluZ2lmeShyZXNwb25zZS5kYXRhLmFjY2Vzc190b2tlbikpOyAvLyBTZXQgdGhlIGF1dGhvcml6YXRpb24gYmVhcmVyIHRva2VuCgogICAgICAgICAgQXhpb3MuZGVmYXVsdHMuaGVhZGVycy5jb21tb24uQXV0aG9yaXphdGlvbiA9ICdCZWFyZXIgJyArIHJlc3BvbnNlLmRhdGEuYWNjZXNzX3Rva2VuOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHVzZXI7CiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogImxvZ291dCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gbG9nb3V0KCkgewogICAgICAvLyBBeGlvcyh7CiAgICAgIC8vICAgICBtZXRob2Q6ICdHRVQnLAogICAgICAvLyAgICAgdXJsOiAnYXV0aC9sb2dvdXQnLAogICAgICAvLyB9KS50aGVuKAogICAgICAvLyAgICAgcmVzcG9uc2UgPT4gewogICAgICAvLyAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKQogICAgICAvLyAgICAgfQogICAgICAvLyApCiAgICAgIHNlc3Npb25TdG9yYWdlLnJlbW92ZUl0ZW0oJ3VzZXInKTsKICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoJy9sb2dpbicpOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIEF1dGhTZXJ2aWNlOwp9KCk7CgpleHBvcnQgZGVmYXVsdCBuZXcgQXV0aFNlcnZpY2UoKTs="},{"version":3,"sources":["/var/www/html/zue/src/services/AuthService.js"],"names":["Axios","AuthService","method","url","data","then","response","user","access_token","sessionStorage","setItem","JSON","stringify","defaults","headers","common","Authorization","removeItem","window","location","replace"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,SAAlB;;IACMC,W;;;;gCAmBG,YAAM;AACP,aAAOD,KAAK,CAAC;AACTE,QAAAA,MAAM,EAAG,KADA;AAETC,QAAAA,GAAG,EAAG;AAFG,OAAD,CAAZ;AAIH,K;;;;;0BAvBKC,I,EAAM;AACR,aAAOJ,KAAK,CAAC;AACTE,QAAAA,MAAM,EAAE,MADC;AAETC,QAAAA,GAAG,EAAE,OAFI;AAGTC,QAAAA,IAAI,EAAGA;AAHE,OAAD,CAAL,CAKNC,IALM,CAKD,UAACC,QAAD,EAAc;AAChB,YAAIC,IAAI,GAAGD,QAAQ,CAACF,IAApB;;AACA,YAAGG,IAAI,IAAID,QAAQ,CAACF,IAAT,CAAcI,YAAzB,EAAuC;AACnC;AACAC,UAAAA,cAAc,CAACC,OAAf,CAAuB,MAAvB,EAA+BC,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACF,IAAT,CAAcI,YAA7B,CAA/B,EAFmC,CAGnC;;AACAR,UAAAA,KAAK,CAACa,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8BC,aAA9B,GAA8C,YAAWV,QAAQ,CAACF,IAAT,CAAcI,YAAvE;AACH;;AACD,eAAOD,IAAP;AACH,OAdM,CAAP;AAeH;;;6BASQ;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAE,MAAAA,cAAc,CAACQ,UAAf,CAA0B,MAA1B;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,QAAxB;AACH;;;;;;AAEL,eAAe,IAAInB,WAAJ,EAAf","sourcesContent":["import Axios from './Axios'\nclass AuthService {\n    login(data) { \n        return Axios({\n            method: 'POST',\n            url: 'login',\n            data : data\n        })\n        .then((response) => {\n            let user = response.data\n            if(user && response.data.access_token) {\n                // Store token in session storage\n                sessionStorage.setItem('user', JSON.stringify(response.data.access_token));\n                // Set the authorization bearer token\n                Axios.defaults.headers.common.Authorization = 'Bearer '+ response.data.access_token\n            }            \n            return user\n        })\n    }\n\n    me = () => {\n        return Axios({\n            method : 'GET',\n            url : 'me'\n        })\n    }\n\n    logout() {\n        // Axios({\n        //     method: 'GET',\n        //     url: 'auth/logout',\n        // }).then(\n        //     response => {\n        //         console.log(response)\n        //     }\n        // )\n        sessionStorage.removeItem('user')\n        window.location.replace('/login')\n    }\n}\nexport default new AuthService;\n"]}]}
{"remainingRequest":"/var/www/html/app/node_modules/babel-loader/lib/index.js!/var/www/html/app/node_modules/eslint-loader/index.js??ref--13-0!/var/www/html/app/src/store/AuthModule.js","dependencies":[{"path":"/var/www/html/app/src/store/AuthModule.js","mtime":1605692911756},{"path":"/var/www/html/app/node_modules/cache-loader/dist/cjs.js","mtime":1605161485326},{"path":"/var/www/html/app/node_modules/babel-loader/lib/index.js","mtime":1605161483481},{"path":"/var/www/html/app/node_modules/eslint-loader/index.js","mtime":1605767633055}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBBdXRoU2VydmljZSBmcm9tICcuLi9zZXJ2aWNlcy9BdXRoU2VydmljZSc7CnZhciB1c2VyID0gSlNPTi5wYXJzZShzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCd1c2VyJykpOwp2YXIgaW5pdGlhbFN0YXRlID0gdXNlciA/IHsKICBzdGF0dXM6IHsKICAgIGxvZ2dlZEluOiB0cnVlCiAgfSwKICB1c2VyOiB1c2VyCn0gOiB7CiAgc3RhdHVzOiB7CiAgICBsb2dnZWRJbjogZmFsc2UKICB9LAogIHVzZXI6IG51bGwKfTsKZXhwb3J0IHZhciBhdXRoID0gewogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IGluaXRpYWxTdGF0ZSwKICBhY3Rpb25zOiB7CiAgICBsb2dpbjogZnVuY3Rpb24gbG9naW4oX3JlZiwgdXNlcikgewogICAgICB2YXIgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgIHJldHVybiBBdXRoU2VydmljZS5sb2dpbih1c2VyKS50aGVuKGZ1bmN0aW9uICh1c2VyKSB7CiAgICAgICAgY29tbWl0KCdsb2dpblN1Y2Nlc3MnLCB1c2VyKTsKICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHVzZXIpOwogICAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBjb21taXQoJ2xvZ2luRmFpbHVyZScpOwogICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7CiAgICAgIH0pOwogICAgfSwKICAgIGxvZ291dDogZnVuY3Rpb24gbG9nb3V0KF9yZWYyKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgICAgIEF1dGhTZXJ2aWNlLmxvZ291dCgpOwogICAgICBjb21taXQoJ2xvZ291dCcpOwogICAgfQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICBsb2dpblN1Y2Nlc3M6IGZ1bmN0aW9uIGxvZ2luU3VjY2VzcyhzdGF0ZSwgdXNlcikgewogICAgICBzdGF0ZS5zdGF0dXMubG9nZ2VkSW4gPSB0cnVlOwogICAgICBzdGF0ZS51c2VyID0gdXNlcjsKICAgIH0sCiAgICBsb2dpbkZhaWx1cmU6IGZ1bmN0aW9uIGxvZ2luRmFpbHVyZShzdGF0ZSkgewogICAgICBzdGF0ZS5zdGF0dXMubG9nZ2VkSW4gPSBmYWxzZTsKICAgICAgc3RhdGUudXNlciA9IG51bGw7CiAgICB9LAogICAgbG9nb3V0OiBmdW5jdGlvbiBsb2dvdXQoc3RhdGUpIHsKICAgICAgc3RhdGUuc3RhdHVzLmxvZ2dlZEluID0gZmFsc2U7CiAgICAgIHN0YXRlLnVzZXIgPSBudWxsOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/var/www/html/app/src/store/AuthModule.js"],"names":["AuthService","user","JSON","parse","sessionStorage","getItem","initialState","status","loggedIn","auth","namespaced","state","actions","login","commit","then","Promise","resolve","error","reject","logout","mutations","loginSuccess","loginFailure"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,yBAAxB;AAEA,IAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAX,CAAb;AACA,IAAMC,YAAY,GAAGL,IAAI,GACG;AACIM,EAAAA,MAAM,EACF;AACIC,IAAAA,QAAQ,EAAE;AADd,GAFR;AAKQP,EAAAA,IAAI,EAAJA;AALR,CADH,GASG;AACIM,EAAAA,MAAM,EACF;AACIC,IAAAA,QAAQ,EAAE;AADd,GAFR;AAKQP,EAAAA,IAAI,EAAE;AALd,CAT5B;AAgBA,OAAO,IAAMQ,IAAI,GAAG;AAChBC,EAAAA,UAAU,EAAE,IADI;AAEhBC,EAAAA,KAAK,EAAEL,YAFS;AAGhBM,EAAAA,OAAO,EAAE;AACLC,IAAAA,KADK,uBACaZ,IADb,EACmB;AAAA,UAAhBa,MAAgB,QAAhBA,MAAgB;AACpB,aAAOd,WAAW,CAACa,KAAZ,CAAkBZ,IAAlB,EAAwBc,IAAxB,CACH,UAAAd,IAAI,EAAI;AACJa,QAAAA,MAAM,CAAC,cAAD,EAAiBb,IAAjB,CAAN;AACA,eAAOe,OAAO,CAACC,OAAR,CAAgBhB,IAAhB,CAAP;AACH,OAJE,EAKH,UAAAiB,KAAK,EAAI;AACLJ,QAAAA,MAAM,CAAC,cAAD,CAAN;AACA,eAAOE,OAAO,CAACG,MAAR,CAAeD,KAAf,CAAP;AACH,OARE,CAAP;AAUH,KAZI;AAaLE,IAAAA,MAbK,yBAac;AAAA,UAAVN,MAAU,SAAVA,MAAU;AACfd,MAAAA,WAAW,CAACoB,MAAZ;AACAN,MAAAA,MAAM,CAAC,QAAD,CAAN;AACH;AAhBI,GAHO;AAqBhBO,EAAAA,SAAS,EAAE;AACPC,IAAAA,YADO,wBACMX,KADN,EACaV,IADb,EACmB;AACtBU,MAAAA,KAAK,CAACJ,MAAN,CAAaC,QAAb,GAAwB,IAAxB;AACAG,MAAAA,KAAK,CAACV,IAAN,GAAaA,IAAb;AACH,KAJM;AAKPsB,IAAAA,YALO,wBAKMZ,KALN,EAKa;AAChBA,MAAAA,KAAK,CAACJ,MAAN,CAAaC,QAAb,GAAwB,KAAxB;AACAG,MAAAA,KAAK,CAACV,IAAN,GAAa,IAAb;AACH,KARM;AASPmB,IAAAA,MATO,kBASAT,KATA,EASO;AACVA,MAAAA,KAAK,CAACJ,MAAN,CAAaC,QAAb,GAAwB,KAAxB;AACAG,MAAAA,KAAK,CAACV,IAAN,GAAa,IAAb;AACH;AAZM;AArBK,CAAb","sourcesContent":["import AuthService from '../services/AuthService';\n\nconst user = JSON.parse(sessionStorage.getItem('user'));\nconst initialState = user ? \n                            { \n                                status: \n                                    { \n                                        loggedIn: true \n                                    }, \n                                    user \n                                } \n                          :\n                            {   \n                                status: \n                                    { \n                                        loggedIn: false \n                                    }, \n                                    user: null \n                                };\nexport const auth = {\n    namespaced: true,\n    state: initialState,\n    actions: {\n        login({ commit }, user) {\n            return AuthService.login(user).then(\n                user => {\n                    commit('loginSuccess', user);\n                    return Promise.resolve(user);\n                },\n                error => {\n                    commit('loginFailure');\n                    return Promise.reject(error);\n                }\n            );\n        },\n        logout({ commit }) {\n            AuthService.logout();\n            commit('logout');\n        },\n    },\n    mutations: {\n        loginSuccess(state, user) {\n            state.status.loggedIn = true;\n            state.user = user;\n        },\n        loginFailure(state) {\n            state.status.loggedIn = false;\n            state.user = null;\n        },\n        logout(state) {\n            state.status.loggedIn = false;\n            state.user = null;\n        }\n    }\n}\n"]}]}
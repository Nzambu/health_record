{"remainingRequest":"/var/www/html/Submission-Dev-PatrickNzambu/medbook-dev-app-vue/node_modules/babel-loader/lib/index.js!/var/www/html/Submission-Dev-PatrickNzambu/medbook-dev-app-vue/node_modules/eslint-loader/index.js??ref--13-0!/var/www/html/Submission-Dev-PatrickNzambu/medbook-dev-app-vue/src/store/PatientModule.js","dependencies":[{"path":"/var/www/html/Submission-Dev-PatrickNzambu/medbook-dev-app-vue/src/store/PatientModule.js","mtime":1610480526172},{"path":"/var/www/html/Submission-Dev-PatrickNzambu/medbook-dev-app-vue/node_modules/cache-loader/dist/cjs.js","mtime":1608645174000},{"path":"/var/www/html/Submission-Dev-PatrickNzambu/medbook-dev-app-vue/node_modules/babel-loader/lib/index.js","mtime":1608645174000},{"path":"/var/www/html/Submission-Dev-PatrickNzambu/medbook-dev-app-vue/node_modules/eslint-loader/index.js","mtime":1608645174000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgUGF0aWVudFNlcnZpY2UgZnJvbSAnLi4vc2VydmljZXMvUGF0aWVudFNlcnZpY2UnOwp2YXIgaW5pdGlhbFN0YXRlID0gewogIGxpc3Q6IG51bGwsCiAgZXJyb3I6IG51bGwKfTsKZXhwb3J0IHZhciBwYXRpZW50ID0gewogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IGluaXRpYWxTdGF0ZSwKICBhY3Rpb25zOiB7CiAgICAvKioKICAgICAqIExpc3QgYWxsIHRoZSBwYXRpZW50cwogICAgICogCiAgICAgKiBAcGFyYW0geyp9IHBhcmFtKSBjb21taXQgdG8gdnVleAogICAgICovCiAgICBnZXRMaXN0OiBmdW5jdGlvbiBnZXRMaXN0KF9yZWYpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICByZXR1cm4gUGF0aWVudFNlcnZpY2UuZ2V0UGF0aWVudExpc3QoKS50aGVuKGZ1bmN0aW9uIChwYXRpZW50KSB7CiAgICAgICAgdmFyIGxpc3QgPSBwYXRpZW50LmRhdGE7CiAgICAgICAgY29tbWl0KCdsaXN0JywgbGlzdCk7CiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShsaXN0KTsKICAgICAgfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgIGNvbW1pdCgnZmFpbCcpOwogICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7CiAgICAgIH0pOwogICAgfSwKCiAgICAvKioKICAgICAqIFNhdmUgYSBuZXcgcGF0aWVudAogICAgICogQHBhcmFtIHsqfSBwYXJhbTAgY29tbWl0IHRvIHZ1ZXgKICAgICAqIEBwYXJhbSB7Kn0gcGF0aWVudCAKICAgICAqLwogICAgc2F2ZVBhdGllbnQ6IGZ1bmN0aW9uIHNhdmVQYXRpZW50KF9yZWYyLCBwYXRpZW50KSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgICAgIHJldHVybiBQYXRpZW50U2VydmljZS5zYXZlTmV3UGF0aWVudChwYXRpZW50KS50aGVuKGZ1bmN0aW9uIChwYXRpZW50KSB7CiAgICAgICAgdmFyIHJlY29yZCA9IHBhdGllbnQuZGF0YTsKICAgICAgICBjb21taXQoJ3NhdmUnLCByZWNvcmQpOwogICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUocmVjb3JkKTsKICAgICAgfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgY29tbWl0KCdmYWlsJyk7CiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKICAgICAgfSk7CiAgICB9LAoKICAgIC8qKgogICAgICogVXBkYXRlIHBhdGllbnQgcmVjb3JkCiAgICAgKiBAcGFyYW0geyp9IHBhcmFtMCBjb21taXQgdG8gdnVleAogICAgICogQHBhcmFtIHsqfSBwYXRpZW50IGRldGFpbHMgZm9yIHBhdGllbnQKICAgICAqLwogICAgdXBkYXRlUGF0aWVudDogZnVuY3Rpb24gdXBkYXRlUGF0aWVudChfcmVmMywgcGF0aWVudCkgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjMuY29tbWl0OwogICAgICByZXR1cm4gUGF0aWVudFNlcnZpY2UudXBkYXRlUGF0aWVudChwYXRpZW50KS50aGVuKGZ1bmN0aW9uIChwYXRpZW50KSB7CiAgICAgICAgdmFyIHJlY29yZCA9IHBhdGllbnQuZGF0YTsKICAgICAgICBjb21taXQoJ3VwZGF0ZScsIHJlY29yZCk7CiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShyZWNvcmQpOwogICAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBjb21taXQoJ2ZhaWwnKTsKICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpOwogICAgICB9KTsKICAgIH0sCgogICAgLyoqCiAgICAgKiBEZWxldGUgcGF0aWVudCByZWNvcmQKICAgICAqIEBwYXJhbSB7Kn0gcGFyYW0wIGNvbW1pdCB0byB2dWV4CiAgICAgKiBAcGFyYW0geyp9IHBhdGllbnRJRCAKICAgICAqLwogICAgZGVsZXRlUGF0aWVudDogZnVuY3Rpb24gZGVsZXRlUGF0aWVudChfcmVmNCwgcGF0aWVudElEKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmNC5jb21taXQ7CiAgICAgIHJldHVybiBQYXRpZW50U2VydmljZS5kZWxldGVQYXRpZW50KHBhdGllbnRJRCkudGhlbihmdW5jdGlvbiAocGF0aWVudCkgewogICAgICAgIHZhciByZWNvcmQgPSBwYXRpZW50LmRhdGE7CiAgICAgICAgY29tbWl0KCdkZWxldGUnLCByZWNvcmQpOwogICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUocmVjb3JkKTsKICAgICAgfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgY29tbWl0KCdmYWlsJyk7CiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIGxpc3Q6IGZ1bmN0aW9uIGxpc3Qoc3RhdGUsIHBhdGllbnRMaXN0KSB7CiAgICAgIHN0YXRlLmxpc3QgPSBwYXRpZW50TGlzdDsKICAgIH0sCiAgICBzYXZlOiBmdW5jdGlvbiBzYXZlKHN0YXRlLCBuZXdQYXRpZW50KSB7CiAgICAgIHN0YXRlLmxpc3QudW5zaGlmdChuZXdQYXRpZW50KTsKICAgIH0sCiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShzdGF0ZSwgdXBkYXRlZFBhdGllbnQpIHsKICAgICAgdmFyIHBhdGllbnRJbmRleCA9IHN0YXRlLmxpc3QuZmluZEluZGV4KGZ1bmN0aW9uIChwYXRpZW50KSB7CiAgICAgICAgcmV0dXJuIHBhdGllbnQuaWQgPT09IHVwZGF0ZWRQYXRpZW50LmlkOwogICAgICB9KTsKCiAgICAgIGlmIChwYXRpZW50SW5kZXggIT09IC0xKSB7CiAgICAgICAgc3RhdGUubGlzdC5zcGxpY2UocGF0aWVudEluZGV4LCAxLCB1cGRhdGVkUGF0aWVudCk7CiAgICAgIH0KICAgIH0sCiAgICBkZWxldGU6IGZ1bmN0aW9uIF9kZWxldGUoc3RhdGUsIHBhdGllbnRJRCkgewogICAgICBzdGF0ZS5saXN0ID0gc3RhdGUubGlzdC5maWx0ZXIoZnVuY3Rpb24gKHBhdGllbnRzKSB7CiAgICAgICAgcmV0dXJuIHBhdGllbnRzLmlkICE9PSBwYXRpZW50SUQ7CiAgICAgIH0pOwogICAgfSwKICAgIGZhaWw6IGZ1bmN0aW9uIGZhaWwoc3RhdGUsIGVycm9yKSB7CiAgICAgIHN0YXRlLmVycm9yID0gZXJyb3I7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/var/www/html/Submission-Dev-PatrickNzambu/medbook-dev-app-vue/src/store/PatientModule.js"],"names":["PatientService","initialState","list","error","patient","namespaced","state","actions","getList","commit","getPatientList","then","data","Promise","resolve","console","log","reject","savePatient","saveNewPatient","record","updatePatient","deletePatient","patientID","mutations","patientList","save","newPatient","unshift","update","updatedPatient","patientIndex","findIndex","id","splice","delete","filter","patients","fail"],"mappings":"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","sourcesContent":["import PatientService from '../services/PatientService';\n\nconst initialState = {\n    list : null,\n    error : null,\n}\nexport const patient = {\n    namespaced: true,\n    state: initialState,\n    actions: {\n        /**\n         * List all the patients\n         * \n         * @param {*} param) commit to vuex\n         */\n        getList({ commit }) { \n            return PatientService.getPatientList().then(\n                patient => {\n                    let list = patient.data\n                    commit('list', list);\n                    return Promise.resolve(list);\n                },\n                error => {\n                    console.log(error)\n                    commit('fail');\n                    return Promise.reject(error);\n                }\n            );\n        },\n\n        /**\n         * Save a new patient\n         * @param {*} param0 commit to vuex\n         * @param {*} patient \n         */\n        savePatient({ commit }, patient) {\n            return PatientService.saveNewPatient(patient).then(\n                patient => {\n                    let record = patient.data\n                    commit('save', record);\n                    return Promise.resolve(record)\n                },\n                error => {\n                    commit('fail');\n                    return Promise.reject(error);\n                }\n            );\n        },\n\n        /**\n         * Update patient record\n         * @param {*} param0 commit to vuex\n         * @param {*} patient details for patient\n         */\n        updatePatient({ commit }, patient) {\n            return PatientService.updatePatient(patient).then(\n                patient => {\n                    let record = patient.data\n                    commit('update', record);\n                    return Promise.resolve(record)\n                },\n                error => {\n                    commit('fail');\n                    return Promise.reject(error);\n                }\n            );\n        },\n\n        /**\n         * Delete patient record\n         * @param {*} param0 commit to vuex\n         * @param {*} patientID \n         */\n        deletePatient({ commit }, patientID) {\n            return PatientService.deletePatient(patientID).then(\n                patient => {\n                    let record = patient.data\n                    commit('delete', record);\n                    return Promise.resolve(record)\n                },\n                error => {\n                    commit('fail');\n                    return Promise.reject(error);\n                }\n            );\n        }\n    },\n    mutations: {\n        list(state, patientList) {\n            state.list = patientList\n        },\n        save(state, newPatient) {\n            state.list.unshift(newPatient)\n        },\n        update(state, updatedPatient) {\n            let patientIndex = state.list.findIndex( patient => patient.id === updatedPatient.id)\n            if(patientIndex !== -1) {\n                state.list.splice(patientIndex, 1, updatedPatient)\n            }\n        },\n        delete(state, patientID) {\n            state.list = state.list.filter((patients) => patients.id !== patientID)\n        },\n        fail(state, error) {\n            state.error = error\n        }\n    }\n}\n"]}]}
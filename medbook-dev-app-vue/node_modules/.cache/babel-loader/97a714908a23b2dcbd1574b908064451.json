{"remainingRequest":"/var/www/html/vue/node_modules/babel-loader/lib/index.js!/var/www/html/vue/node_modules/eslint-loader/index.js??ref--13-0!/var/www/html/vue/src/store/PropertyModule.js","dependencies":[{"path":"/var/www/html/vue/src/store/PropertyModule.js","mtime":1608645174000},{"path":"/var/www/html/vue/node_modules/cache-loader/dist/cjs.js","mtime":1608645174000},{"path":"/var/www/html/vue/node_modules/babel-loader/lib/index.js","mtime":1608645174000},{"path":"/var/www/html/vue/node_modules/eslint-loader/index.js","mtime":1608645174000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvdmFyL3d3dy9odG1sL3Z1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBQcm9wZXJ0eVNlcnZpY2UgZnJvbSAnLi4vc2VydmljZXMvUHJvcGVydHlTZXJ2aWNlJzsKdmFyIGluaXRpYWxTdGF0ZSA9IHsKICBwcm9wZXJ0eUxpc3Q6IG51bGwsCiAgc2VsZWN0ZWRQcm9wZXJ0eTogbnVsbCwKICBwcm9wZXJ0eUxpc3RFcnJvcjogbnVsbAp9OwpleHBvcnQgdmFyIHByb3BlcnR5RGV0YWlscyA9IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiBpbml0aWFsU3RhdGUsCiAgYWN0aW9uczogewogICAgY3JlYXRlTmV3UHJvcGVydHk6IGZ1bmN0aW9uIGNyZWF0ZU5ld1Byb3BlcnR5KF9yZWYsIHByb3BlcnR5KSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgcmV0dXJuIFByb3BlcnR5U2VydmljZS5uZXdQcm9wZXJ0eShwcm9wZXJ0eSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICB2YXIgcHJvcGVydHkgPSByZXNwb25zZS5kYXRhOwogICAgICAgIGNvbW1pdCgnYWRkUHJvcGVydHlMaXN0JywgcHJvcGVydHkpOwogICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUocHJvcGVydHkpOwogICAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICB2YXIgZGF0YSA9IGVycm9yLnJlc3BvbnNlOwogICAgICAgIGNvbnNvbGUubG9nKGRhdGEpOwogICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChkYXRhKTsKICAgICAgfSk7CiAgICB9LAogICAgdXBkYXRlUHJvcGVydHk6IGZ1bmN0aW9uIHVwZGF0ZVByb3BlcnR5KF9yZWYyLCBwcm9wZXJ0eUlELCBwcm9wZXJ0eSkgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICByZXR1cm4gUHJvcGVydHlTZXJ2aWNlLnVwZGF0ZVByb3BlcnR5KHByb3BlcnR5SUQsIHByb3BlcnR5KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIHZhciBkYXRhID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICBjb21taXQoJ3VwZGF0ZVByb3BlcnR5TGlzdCcsIGRhdGEpOwogICAgICB9KTsKICAgIH0sCiAgICBkZWxldGVQcm9wZXJ0eTogZnVuY3Rpb24gZGVsZXRlUHJvcGVydHkoX3JlZjMsIHByb3BlcnR5SUQpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgY29tbWl0OwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYzLmNvbW1pdDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIFByb3BlcnR5U2VydmljZS5kZWxldGVQcm9wZXJ0eShwcm9wZXJ0eUlEKS50aGVuKCk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIGNvbW1pdCgncmVtb3ZlUHJvcGVydHlMaXN0JywgcHJvcGVydHlJRCk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBwcm9wZXJ0eUxpc3Q6IGZ1bmN0aW9uIHByb3BlcnR5TGlzdChfcmVmNCwgb3duZXJJRCkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgY29tbWl0OwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb21taXQgPSBfcmVmNC5jb21taXQ7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgUHJvcGVydHlTZXJ2aWNlLmdldE93bmVyUHJvcGVydHlMaXN0KG93bmVySUQpLnRoZW4oZnVuY3Rpb24gKHN1Y2Nlc3MpIHsKICAgICAgICAgICAgICAgICAgY29tbWl0KCdwcm9wZXJ0eUxpc3RTdWNjZXNzJywgc3VjY2Vzcy5kYXRhKTsKICAgICAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShzdWNjZXNzKTsKICAgICAgICAgICAgICAgIH0sIGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgICAgICAgICAgICAgIGNvbW1pdCgncHJvcGVydHlMaXN0RmFpbCcsIGVycm9yKTsKICAgICAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKICAgICAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgc2VsZWN0ZWRQcm9wZXJ0eTogZnVuY3Rpb24gc2VsZWN0ZWRQcm9wZXJ0eShfcmVmNSwgcHJvcGVydHkpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHZhciBjb21taXQsIGRhdGE7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWY1LmNvbW1pdDsKICAgICAgICAgICAgICAgIGRhdGEgPSBwcm9wZXJ0eSAhPT0gbnVsbCAmJiBwcm9wZXJ0eSAhPT0gdm9pZCAwID8gcHJvcGVydHkgOiBfdGhpcy4kc3RvcmUuc3RhdGUucHJvcGVydHlEZXRhaWxzLnByb3BlcnR5TGlzdFswXTsKICAgICAgICAgICAgICAgIGNvbW1pdCgnc2VsZWN0ZWRQcm9wZXJ0eScsIGRhdGEpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMpOwogICAgICB9KSkoKTsKICAgIH0KICB9LAogIG11dGF0aW9uczogewogICAgc2VsZWN0ZWRQcm9wZXJ0eTogZnVuY3Rpb24gc2VsZWN0ZWRQcm9wZXJ0eShzdGF0ZSwgcHJvcGVydHkpIHsKICAgICAgc3RhdGUuc2VsZWN0ZWRQcm9wZXJ0eSA9IHByb3BlcnR5OwogICAgfSwKICAgIHByb3BlcnR5TGlzdFN1Y2Nlc3M6IGZ1bmN0aW9uIHByb3BlcnR5TGlzdFN1Y2Nlc3Moc3RhdGUsIHN1Y2Nlc3MpIHsKICAgICAgc3RhdGUucHJvcGVydHlMaXN0ID0gc3VjY2VzczsKICAgIH0sCiAgICBwcm9wZXJ0eUxpc3RGYWlsOiBmdW5jdGlvbiBwcm9wZXJ0eUxpc3RGYWlsKHN0YXRlLCBlcnJvcikgewogICAgICBzdGF0ZS5wcm9wZXJ0eUxpc3RFcnJvciA9IGVycm9yOwogICAgfSwKICAgIHJlbW92ZVByb3BlcnR5TGlzdDogZnVuY3Rpb24gcmVtb3ZlUHJvcGVydHlMaXN0KHN0YXRlLCBwcm9wZXJ0eUlEKSB7CiAgICAgIHN0YXRlLnByb3BlcnR5TGlzdCA9IHN0YXRlLnByb3BlcnR5TGlzdC5maWx0ZXIoZnVuY3Rpb24gKHByb3BlcnR5KSB7CiAgICAgICAgcmV0dXJuIHByb3BlcnR5LmlkICE9PSBwcm9wZXJ0eUlEOwogICAgICB9KTsKICAgIH0sCiAgICB1cGRhdGVQcm9wZXJ0eUxpc3Q6IGZ1bmN0aW9uIHVwZGF0ZVByb3BlcnR5TGlzdChzdGF0ZSwgcHJvcGVydHkpIHsKICAgICAgdmFyIHByb3BlcnR5SW5kZXggPSBzdGF0ZS5wcm9wZXJ0eUxpc3QuZmluZEluZGV4KGZ1bmN0aW9uIChlYWNoUHJvcGVydHkpIHsKICAgICAgICByZXR1cm4gZWFjaFByb3BlcnR5LmlkID09PSBwcm9wZXJ0eS5pZDsKICAgICAgfSk7CgogICAgICBpZiAocHJvcGVydHlJbmRleCAhPT0gLTEpIHsKICAgICAgICBzdGF0ZS5wcm9wZXJ0eUxpc3Quc3BsaWNlKHByb3BlcnR5SW5kZXgsIDEsIHByb3BlcnR5KTsKICAgICAgfQogICAgfSwKICAgIGFkZFByb3BlcnR5TGlzdDogZnVuY3Rpb24gYWRkUHJvcGVydHlMaXN0KHN0YXRlLCBwcm9wZXJ0eSkgewogICAgICBzdGF0ZS5wcm9wZXJ0eUxpc3QudW5zaGlmdChwcm9wZXJ0eSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/var/www/html/vue/src/store/PropertyModule.js"],"names":["PropertyService","initialState","propertyList","selectedProperty","propertyListError","propertyDetails","namespaced","state","actions","createNewProperty","property","commit","newProperty","then","response","data","Promise","resolve","error","console","log","reject","updateProperty","propertyID","deleteProperty","ownerID","getOwnerPropertyList","success","$store","mutations","propertyListSuccess","propertyListFail","removePropertyList","filter","id","updatePropertyList","propertyIndex","findIndex","eachProperty","splice","addPropertyList","unshift"],"mappings":"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","sourcesContent":["import PropertyService from '../services/PropertyService';\nconst initialState = {\n    propertyList : null,\n    selectedProperty : null,\n    propertyListError : null\n}\nexport const propertyDetails = {\n    namespaced : true,\n    state : initialState,\n    actions : {\n        createNewProperty({commit},property) {\n            return PropertyService.newProperty(property).then(\n                response => {\n                    let property = response.data\n                    commit('addPropertyList', property);\n                    return Promise.resolve(property)\n                },\n                error => {\n                    let data = error.response\n                    console.log(data)\n                    return Promise.reject(data)\n                }\n            );\n        },\n        updateProperty({commit}, propertyID, property) {\n            return PropertyService.updateProperty(propertyID, property).then(\n                response => {\n                    let data = response.data\n                    commit('updatePropertyList', data)\n                }\n            );\n        },\n        async deleteProperty({commit}, propertyID) {\n            await PropertyService.deleteProperty(propertyID).then();\n            commit('removePropertyList', propertyID)\n        },\n        async propertyList({commit}, ownerID){\n            return PropertyService.getOwnerPropertyList(ownerID).then(\n                success => {\n                    commit('propertyListSuccess', success.data);\n                    return Promise.resolve(success);\n                },\n                error => {\n                    console.log(error)\n                    commit('propertyListFail', error);\n                    return Promise.reject(error);\n                }\n            )\n        },\n        async selectedProperty({commit}, property) {\n            let data = property ?? this.$store.state.propertyDetails.propertyList[0]\n            commit('selectedProperty', data)\n        }\n    },\n    mutations : {\n        selectedProperty(state, property) {\n            state.selectedProperty = property\n        },\n        propertyListSuccess(state, success) {\n            state.propertyList = success\n        },\n        propertyListFail(state, error) {\n            state.propertyListError = error\n        },\n        removePropertyList(state, propertyID) {\n            state.propertyList = state.propertyList.filter((property) => property.id !== propertyID)\n        },\n        updatePropertyList(state, property) {\n            let propertyIndex = state.propertyList.findIndex( eachProperty => eachProperty.id === property.id)\n            if(propertyIndex !== -1) {\n                state.propertyList.splice(propertyIndex, 1, property)\n            }\n        },\n        addPropertyList(state, property) {\n            state.propertyList.unshift(property)\n        }\n    }\n}"]}]}
{"remainingRequest":"/var/www/html/1/medbook-dev-app-vue/node_modules/thread-loader/dist/cjs.js!/var/www/html/1/medbook-dev-app-vue/node_modules/babel-loader/lib/index.js!/var/www/html/1/medbook-dev-app-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/html/1/medbook-dev-app-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/1/medbook-dev-app-vue/src/auth/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/1/medbook-dev-app-vue/src/auth/Login.vue","mtime":1610958572048},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/cache-loader/dist/cjs.js","mtime":1610518510696},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/thread-loader/dist/cjs.js","mtime":1610518511736},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/babel-loader/lib/index.js","mtime":1610518510640},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/cache-loader/dist/cjs.js","mtime":1610518510696},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/vue-loader/lib/index.js","mtime":1610518511764}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL3Zhci93d3cvaHRtbC8xL21lZGJvb2stZGV2LWFwcC12dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgQXV0aCBmcm9tICcuLi9tb2RlbHMvQXV0aCc7CmltcG9ydCBBeGlvcyBmcm9tICcuLi9zZXJ2aWNlcy9BeGlvcyc7CmltcG9ydCBGb3Jnb3RQYXNzd29yZFNlcnZpY2UgZnJvbSAnLi4vc2VydmljZXMvRm9yZ290UGFzc3dvcmRTZXJ2aWNlJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdMb2dpbicsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHVzZXI6IG5ldyBBdXRoKCcnLCAnJywgJycsICcnKSwKICAgICAgc2hvd0xvZ2luOiB0cnVlLAogICAgICBzaG93Rm9yZ290UGFzc3dvcmQ6IGZhbHNlLAogICAgICBzaG93UmVnaXN0ZXI6IGZhbHNlLAogICAgICBzbmFja2JhcjogZmFsc2UsCiAgICAgIHZlcnRpY2FsOiB0cnVlLAogICAgICBlcnJvcnM6ICcnCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgLyoqCiAgICAgKiBEZWZhdWx0IHNob3cKICAgICAqLwogICAgaGFuZGxlQ2FuY2VsU2hvdzogZnVuY3Rpb24gaGFuZGxlQ2FuY2VsU2hvdygpIHsKICAgICAgdGhpcy5zaG93TG9naW4gPSB0cnVlOwogICAgICB0aGlzLnNob3dSZWdpc3RlciA9IGZhbHNlOwogICAgICB0aGlzLnNob3dGb3Jnb3RQYXNzd29yZCA9IGZhbHNlOwogICAgfSwKCiAgICAvKioKICAgICAqIFNob3cgZm9yZ290IHBhc3N3b3JkIGZvcm0KICAgICAqLwogICAgaGFuZGxlRm9yZ290UGFzc3dvcmQ6IGZ1bmN0aW9uIGhhbmRsZUZvcmdvdFBhc3N3b3JkKCkgewogICAgICB0aGlzLnNob3dMb2dpbiA9ICF0aGlzLnNob3dMb2dpbjsKICAgICAgdGhpcy5zaG93Rm9yZ290UGFzc3dvcmQgPSAhdGhpcy5zaG93Rm9yZ290UGFzc3dvcmQ7CiAgICB9LAoKICAgIC8qKgogICAgICogU2hvdyByZWdpc3RlcmF0aW9uIGZvcm0KICAgICAqLwogICAgaGFuZGxlUmVnaXN0ZXI6IGZ1bmN0aW9uIGhhbmRsZVJlZ2lzdGVyKCkgewogICAgICB0aGlzLnNob3dMb2dpbiA9ICF0aGlzLnNob3dMb2dpbjsKICAgICAgdGhpcy5zaG93UmVnaXN0ZXIgPSAhdGhpcy5zaG93UmVnaXN0ZXI7CiAgICB9LAoKICAgIC8qKgogICAgICogQXV0aGVudGljYXRlIHVzZXIKICAgICAqLwogICAgaGFuZGxlTG9naW46IGZ1bmN0aW9uIGhhbmRsZUxvZ2luKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy4kcmVmcy5sb2dpbk9ic2VydmVyLnZhbGlkYXRlKCkudGhlbihmdW5jdGlvbiAoaXNWYWxpZCkgewogICAgICAgIGlmIChpc1ZhbGlkID09PSB0cnVlKSB7CiAgICAgICAgICBfdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2F1dGgvbG9naW4nLCBfdGhpcy51c2VyKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICB2YXIgZGF0YSA9IHJlc3BvbnNlOwogICAgICAgICAgICAvKioKICAgICAgICAgICAgICogU3VjY2Vzc2Z1bGx5IGxvZ2dlZCBpbgogICAgICAgICAgICAgKi8KCiAgICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhKSB7CiAgICAgICAgICAgICAgdmFyIHRva2VuQmVhcmVyID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICAgICAgICB2YXIgdG9rZW4gPSB0b2tlbkJlYXJlci5hdHRyaWJ1dGVzLmFjY2Vzc190b2tlbjsKCiAgICAgICAgICAgICAgaWYgKHRva2VuKSB7CiAgICAgICAgICAgICAgICAvLyBTdG9yZSB0b2tlbiBpbiBzZXNzaW9uIHN0b3JhZ2UKICAgICAgICAgICAgICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oJ3Rva2VuJywgSlNPTi5zdHJpbmdpZnkodG9rZW4pKTsgLy8gU2V0IHRoZSBhdXRob3JpemF0aW9uIGJlYXJlciB0b2tlbgoKICAgICAgICAgICAgICAgIEF4aW9zLmRlZmF1bHRzLmhlYWRlcnMuY29tbW9uLkF1dGhvcml6YXRpb24gPSAnQmVhcmVyICcgKyB0b2tlbjsgLy8gUmVkaXJlY3QgdG8gdGhlIHJlcXVlc3RlZCBsaW5rIG9yIHByb2ZpbGUKCiAgICAgICAgICAgICAgICB2YXIgcGF0aCA9IF90aGlzLiRyb3V0ZS5xdWVyeS5mcm9tOwoKICAgICAgICAgICAgICAgIGlmIChwYXRoID09PSAnLycpIHsKICAgICAgICAgICAgICAgICAgX3RoaXMuJHJvdXRlci5wdXNoKCcvcGF0aWVudCcpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgX3RoaXMuJHJvdXRlci5wdXNoKHBhdGggfHwgJy9wYXRpZW50Jyk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIC8qKgogICAgICAgICAgICAgICAqIFVzZXIgZG9lcyBub3QgZXhpc3Qgb3IgaXRzIGludmFsaWQKICAgICAgICAgICAgICAgKi8KICAgICAgICAgICAgICBpZiAocmVzcG9uc2UucmVzcG9uc2UuZGF0YS5lcnJvcnMpIHsKICAgICAgICAgICAgICAgIHZhciBlcnJvciA9IGRhdGEucmVzcG9uc2UuZGF0YS5lcnJvcnM7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuaGFuZGxlRXJyb3JzRnJvbUFQSShlcnJvcik7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIC8qKgogICAgICAgICAgICAgICAqIFBhc3N3b3JkIGlzIHdyb25nCiAgICAgICAgICAgICAgICovCgoKICAgICAgICAgICAgICBpZiAocmVzcG9uc2UucmVzcG9uc2UuZGF0YS5lcnJvci5jb2RlKSB7CiAgICAgICAgICAgICAgICB2YXIgbWVzc2FnZSA9IGRhdGEucmVzcG9uc2UuZGF0YS5lcnJvci5kZXRhaWw7CiAgICAgICAgICAgICAgICB2YXIgX2Vycm9yID0gW107CgogICAgICAgICAgICAgICAgX2Vycm9yLnB1c2goW21lc3NhZ2VdKTsKCiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuaGFuZGxlRXJyb3JzRnJvbUFQSShfZXJyb3IpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfSwgZnVuY3Rpb24gKGZhaWxlZCkgewogICAgICAgICAgICB2YXIgbWVzc2FnZSA9IGZhaWxlZC5tZXNzYWdlczsKICAgICAgICAgICAgdmFyIGVycm9yID0gW107CiAgICAgICAgICAgIGVycm9yLnB1c2goW21lc3NhZ2VdKTsKICAgICAgICAgICAgcmV0dXJuIF90aGlzLmhhbmRsZUVycm9yc0Zyb21BUEkoZXJyb3IpOwogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCgogICAgLyoqCiAgICAgKiBSZWdpc3RlciBuZXcgdXNlcgogICAgICovCiAgICBoYW5kbGVSZWdpc3RyYXRpb246IGZ1bmN0aW9uIGhhbmRsZVJlZ2lzdHJhdGlvbigpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMi4kcmVmcy5yZWdpc3Rlck9ic2VydmVyLnZhbGlkYXRlKCkudGhlbihmdW5jdGlvbiAocGFzc1ZhbGlkYXRpb24pIHsKICAgICAgICAgICAgICAgICAgaWYgKHBhc3NWYWxpZGF0aW9uID09PSB0cnVlKSB7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocGFzc1ZhbGlkYXRpb24pOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKCiAgICAvKioKICAgICAqIFNlbmQgcmVzZXQgcGFzc3dvcmQgZW1haWwKICAgICAqLwogICAgaGFuZGxlUmVzZXRQYXNzd29yZDogZnVuY3Rpb24gaGFuZGxlUmVzZXRQYXNzd29yZCgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB0aGlzLiRyZWZzLmZvcmdvdFBhc3N3b3JkT2JzZXJ2ZXIudmFsaWRhdGUoKS50aGVuKGZ1bmN0aW9uIChzdWNjZXNzKSB7CiAgICAgICAgaWYgKHN1Y2Nlc3MgPT09IHRydWUpIHsKICAgICAgICAgIC8vIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdhdXRoL3NlbmRSZXNldFBhc3N3b3JkRW1haWwnLCB0aGlzLnVzZXIpCiAgICAgICAgICByZXR1cm4gRm9yZ290UGFzc3dvcmRTZXJ2aWNlLnNlbmRSZXNldFBhc3N3b3JkRW1haWwoX3RoaXMzLnVzZXIpLnRoZW4oZnVuY3Rpb24gKGZlZWRiYWNrKSB7CiAgICAgICAgICAgIHZhciBzdGF0dXMgPSBmZWVkYmFjay5zdGF0dXM7CgogICAgICAgICAgICBpZiAoc3RhdHVzID09PSAyMDApIHsKICAgICAgICAgICAgICBjb25zb2xlLmxvZyhmZWVkYmFjayk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChzdGF0dXMgPT09IDQyMikgewogICAgICAgICAgICAgIHZhciBlcnJvcnMgPSBmZWVkYmFjay5kYXRhLmVycm9yczsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXMzLmhhbmRsZUVycm9yc0Zyb21BUEkoZXJyb3JzKTsKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCgogICAgLyoqCiAgICAgKiBSZW5kZXIgZXJyb3JzIGZyb20gdGhlIEFQSQogICAgICovCiAgICBoYW5kbGVFcnJvcnNGcm9tQVBJOiBmdW5jdGlvbiBoYW5kbGVFcnJvcnNGcm9tQVBJKGVycm9yKSB7CiAgICAgIHRoaXMuZXJyb3JzID0gZXJyb3I7CiAgICAgIHRoaXMuc25hY2tiYXIgPSB0cnVlOwogICAgfQogIH0KfTs="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <v-container \n        class=\"blue\"\n        fluid\n        fill-height\n    >\n        <v-row>\n            <v-col \n                offset-xl=\"4\"\n                xl=\"4\"\n                offset-lg=\"4\"\n                lg=\"4\"  \n                offset-md=\"3\"\n                md=\"6\" \n                offset-sm=\"2\"   \n                sm=\"8\" \n                xs=\"12\"         \n            >\n                <v-card\n                    class=\"mx-15 mx-xs-0\"\n                >\n                    <div>\n                        <v-snackbar\n                            color=\"red\"\n                            top\n                            v-model=\"snackbar\"\n                            timeout=\"-1\"\n                            tag=\"div\"\n                        >\n                            <v-list-item two-line \n                                v-for=\"(error, index) in errors\"\n                                :key=\"index\"\n                            >\n                                <v-list-item-content>\n                                    <v-list-item-title v-text=\"error[0]\"></v-list-item-title>\n                                </v-list-item-content>\n                            </v-list-item>\n                        <template v-slot:action=\"{ attrs }\">\n                            <v-btn\n                            color=\"red\"\n                            text\n                            v-bind=\"attrs\"\n                            @click=\"snackbar = false\"\n                            >\n                                <v-icon class=\"white--text\">mdi-close</v-icon>\n                            </v-btn>\n                        </template>\n                    </v-snackbar>\n                    </div>\n                    <v-card-text class=\"pt-10\">\n                        <h1 class=\"text-center primary--text\">Authentication</h1>\n                    </v-card-text>                    \n                    <v-row class=\"px-10 pb-5\">\n                        <v-col lg=\"12\">\n                            <validation-observer\n                                ref=\"loginObserver\"\n                            >\n                                <v-form \n                                    v-if=\"showLogin\"\n                                >                                \n                                    <validation-provider\n                                        v-slot=\"{errors}\"\n                                        name=\"Email\"\n                                        rules=\"required\"\n                                    >\n                                        <v-text-field\n                                            v-model=\"user.email\"\n                                            :error-messages=\"errors\"\n                                            label=\"Email\"\n                                            required\n                                        ></v-text-field>\n                                    </validation-provider>\n                                    <validation-provider\n                                        v-slot=\"{errors}\"\n                                        name=\"Password\"\n                                        rules=\"required\"\n                                    >\n                                        <v-text-field\n                                            v-model=\"user.password\"\n                                            :error-messages=\"errors\"\n                                            label=\"Password\"\n                                            type=\"password\"\n                                            required\n                                        ></v-text-field>\n                                    </validation-provider>\n                                    <v-row class=\"pt-5\">\n                                        <v-col lg=\"12\">\n                                            <v-btn block                                                \n                                                class=\"success text-capitalize\"\n                                                @click=\"handleLogin\"\n                                            >Login</v-btn>\n                                        </v-col>\n                                    </v-row>\n                                    <v-row \n                                        class=\"py-5\"\n                                    >\n                                        <v-col \n                                            lg=\"6\"\n                                            class=\"pt-0\"\n                                        >\n                                            <p class=\"text-left py-0 pl-0\" @click=\"handleForgotPassword\"><small>Forgot password? <span class=\"primary--text\">Click here</span></small></p>\n                                        </v-col> \n                                        <v-col \n                                            lg=\"6\"\n                                            class=\"pt-0\"\n                                        >\n                                            <p class=\"text-right py-0 pl-0\" @click=\"handleRegister\"><small><span class=\"primary--text\">Register</span></small></p>\n                                        </v-col> \n                                    </v-row>\n                                </v-form>\n                            </validation-observer>\n                            <v-form v-if=\"showRegister\">\n                                <validation-observer\n                                    ref=\"registerObserver\"\n                                >\n                                    <validation-provider\n                                        v-slot=\"{errors}\"\n                                        name=\"First Name\"\n                                        rules=\"required\"\n                                    >\n                                        <v-text-field\n                                            v-model=\"user.firstName\"\n                                            :error-messages=\"errors\"\n                                            label=\"First Name\"\n                                            required\n                                        ></v-text-field>\n                                    </validation-provider>\n                                    <validation-provider\n                                        v-slot=\"{errors}\"\n                                        name=\"Last Name\"\n                                        rules=\"required\"\n                                    >\n                                        <v-text-field\n                                            v-model=\"user.lastName\"\n                                            :error-messages=\"errors\"\n                                            label=\"Last Name\"\n                                            required\n                                        ></v-text-field>\n                                    </validation-provider>\n                                    <validation-provider\n                                        v-slot=\"{errors}\"\n                                        name=\"Email\"\n                                        rules=\"required\"\n                                    >\n                                        <v-text-field\n                                            v-model=\"user.email\"\n                                            :error-messages=\"errors\"\n                                            label=\"Email\"\n                                            required\n                                        ></v-text-field>\n                                    </validation-provider>\n                                    <validation-provider\n                                        v-slot=\"{errors}\"\n                                        name=\"Password\"\n                                        rules=\"required\"\n                                    >\n                                        <v-text-field\n                                            v-model=\"user.password\"\n                                            :error-messages=\"errors\"\n                                            label=\"Password\"\n                                            required\n                                        ></v-text-field>\n                                    </validation-provider>\n                                    <v-row class=\"pt-5\">\n                                        <v-col lg=\"6\">\n                                            <v-btn block\n                                                class=\"grey text-capitalize\"\n                                                @click=\"handleCancelShow\"\n                                            >Cancel</v-btn>\n                                        </v-col>\n                                        <v-col lg=\"6\">\n                                            <v-btn block\n                                                class=\"success text-capitalize\"\n                                                @click=\"handleRegistration\"\n                                            >Register</v-btn>\n                                        </v-col>\n                                    </v-row>\n                                </validation-observer>\n                            </v-form>\n                            <v-form v-if=\"showForgotPassword\">\n                                    <validation-observer\n                                        ref=\"forgotPasswordObserver\"\n                                        lazy-validation\n                                    >                                        \n                                        <validation-provider\n                                            v-slot=\"{errors}\"\n                                            name=\"Email\"\n                                            rules=\"required\"\n                                        >\n                                            <v-text-field\n                                                v-model=\"user.email\"\n                                                :error-messages=\"errors\"\n                                                label=\"Email\"\n                                                required\n                                            ></v-text-field>\n                                        </validation-provider>                                        \n                                        <v-row class=\"pt-5\">\n                                            <v-col lg=\"6\">\n                                            <v-btn block\n                                                class=\"grey text-capitalize\"\n                                                @click=\"handleCancelShow\"\n                                            >Cancel</v-btn>\n                                        </v-col>\n                                            <v-col lg=\"6\">\n                                                <v-btn block\n                                                    class=\"success text-capitalize\"\n                                                    @click=\"handleResetPassword\"\n                                                >Send Reset Email</v-btn>\n                                            </v-col>\n                                        </v-row>\n                                    </validation-observer>\n                                </v-form>\n                        </v-col>\n                    </v-row>\n                </v-card>\n            </v-col>\n        </v-row>\n    </v-container>\n</template>\n<script>\nimport Auth from '../models/Auth';\nimport Axios from '../services/Axios';\nimport ForgotPasswordService from '../services/ForgotPasswordService';\nexport default {\n    name : 'Login',    \n    data() {\n        return {\n            user : new Auth('', '', '', ''),\n            showLogin : true,\n            showForgotPassword : false,\n            showRegister : false,\n            snackbar : false,\n            vertical : true,\n            errors : '',\n        }\n    },\n    methods : {        \n        /**\n         * Default show\n         */\n        handleCancelShow() {\n            this.showLogin = true;\n            this.showRegister = false;\n            this.showForgotPassword = false;\n        },\n\n        /**\n         * Show forgot password form\n         */\n        handleForgotPassword() {\n            this.showLogin = !this.showLogin;\n            this.showForgotPassword = !this.showForgotPassword\n        },\n\n        /**\n         * Show registeration form\n         */\n        handleRegister() {\n            this.showLogin = !this.showLogin;\n            this.showRegister = !this.showRegister\n        },\n\n        /**\n         * Authenticate user\n         */\n        handleLogin() {\n            this.$refs.loginObserver.validate().then(\n                isValid => {\n                    if(isValid === true){\n\n                        this.$store.dispatch('auth/login', this.user)\n                        .then(\n                            (response) => {\n                            let data = response\n                                \n                                /**\n                                 * Successfully logged in\n                                 */\n                                if(response.data) {\n                                    let tokenBearer = response.data\n                                    let token = tokenBearer.attributes.access_token\n                                    if(token) {\n                                        // Store token in session storage\n                                        sessionStorage.setItem('token', JSON.stringify(token));\n                                        // Set the authorization bearer token\n                                        Axios.defaults.headers.common.Authorization = 'Bearer '+ token\n                                        // Redirect to the requested link or profile\n                                        let path = this.$route.query.from\n                                        if(path === '/') {\n                                            this.$router.push('/patient')\n                                        } else {\n                                            this.$router.push(path || '/patient')\n                                        }\n                                    } \n                                } else {\n                                    \n                                    /**\n                                     * User does not exist or its invalid\n                                     */\n                                    if(response.response.data.errors) {\n                                        let error = data.response.data.errors\n                                        return this.handleErrorsFromAPI(error)\n                                    }\n                                    \n                                    /**\n                                     * Password is wrong\n                                     */\n                                    if(response.response.data.error.code) { \n                                        let message = data.response.data.error.detail                    \n                                        let error =  []\n                                        error.push([message])\n                                        return this.handleErrorsFromAPI(error)\n                                    }\n                                }\n                            },\n                            (failed) => {\n                                let message = failed.messages                  \n                                let error =  []\n                                error.push([message])\n                                return this.handleErrorsFromAPI(error)\n                            }\n                        );\n                     }\n                }                \n            );\n        },\n\n        /**\n         * Register new user\n         */\n        async handleRegistration() {\n            await this.$refs.registerObserver.validate().then(\n                passValidation => {\n                    if(passValidation === true)\n                    {\n                        console.log(passValidation)\n                    }\n                }\n            );\n        },\n\n        /**\n         * Send reset password email\n         */\n        handleResetPassword() {\n            this.$refs.forgotPasswordObserver.validate().then(\n                success => {\n                    if(success === true)\n                    {\n                        // this.$store.dispatch('auth/sendResetPasswordEmail', this.user)\n                        return ForgotPasswordService.sendResetPasswordEmail(this.user)\n                        .then(\n                            feedback => {\n                                let status = feedback.status\n                                if(status === 200)\n                                {\n                                    console.log(feedback)\n                                }\n                                if(status === 422) {\n                                    let errors = feedback.data.errors\n                                    return this.handleErrorsFromAPI(errors)\n                                }\n                            }\n                        )\n                    }\n                }\n            );\n        },\n\n        /**\n         * Render errors from the API\n         */\n        handleErrorsFromAPI(error)\n        {\n            this.errors = error\n            this.snackbar = true\n        }\n    }\n}\n</script>"],"sourceRoot":"src/auth"}]}
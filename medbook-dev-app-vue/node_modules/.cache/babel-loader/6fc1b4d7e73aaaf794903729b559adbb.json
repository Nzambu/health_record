{"remainingRequest":"/var/www/html/1/medbook-dev-app-vue/node_modules/babel-loader/lib/index.js!/var/www/html/1/medbook-dev-app-vue/node_modules/eslint-loader/index.js??ref--13-0!/var/www/html/1/medbook-dev-app-vue/src/store/ProfileModule.js","dependencies":[{"path":"/var/www/html/1/medbook-dev-app-vue/src/store/ProfileModule.js","mtime":1611062743064},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/cache-loader/dist/cjs.js","mtime":1610518510696},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/babel-loader/lib/index.js","mtime":1610518510640},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/eslint-loader/index.js","mtime":1610518511248}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/var/www/html/1/medbook-dev-app-vue/src/store/ProfileModule.js"],"names":["ProfileService","initialState","profile","emails","phones","password","namespaced","state","actions","commit","then","userProfile","data","Promise","resolve","error","console","log","updateProfile","newData","updatedProfileData","addMail","mail","addNewMail","feedback","email","fail","editMail","addPhone","phone","addNewPhone","phoneNumber","editPhone","switchPrimaryEmail","switchPrimaryPhone","mutations","profileSuccess","relationships","newProfile","push","updatedEmail","mailList","mailIndex","findIndex","id","splice","updatedPhone","phoneList","phoneIndex","switchPhone","switchEmail","profileFail","profileError"],"mappings":"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","sourcesContent":["import ProfileService from '../services/ProfileService';\nconst initialState = {\n    profile : [],\n    emails : [],\n    phones : [],\n    password : [],\n}\nexport const profile = {\n    namespaced: true,\n    state: initialState,\n    actions: {\n        \n        /**\n         * Get authenticated user profile\n         * \n         * @param {*} param0 \n         */\n        profile({ commit }) {\n\n            /**\n             * It uses bearer token to get authenticated user\n             */\n            return ProfileService.profile().then(\n                userProfile => {\n                    let profile = userProfile.data\n                    commit('profileSuccess', profile)\n                    return Promise.resolve(profile)\n                },\n                error => {\n                    console.log(error)\n                    commit('profileFail', error)\n                    return Promise.resolve(error)\n                }\n            );\n        },\n\n        /**\n         * Update user profile data\n         * \n         * @param {*} param0 \n         * @param {*} profile \n         */\n        updateProfile({ commit }, newData) {\n\n            /**\n             * Update user profile\n             */\n            return ProfileService.updateProfile(newData)\n                .then(\n                profile => {\n                    let updatedProfileData = profile;\n                    commit('updateProfile', updatedProfileData.data);\n                    return Promise.resolve(updatedProfileData);\n                },\n                error => {\n                    return error\n                });\n        },\n\n        /**\n         * Add user email\n         * \n         * @param {*} param0 \n         * @param {*} mail \n         */\n        addMail({ commit }, mail) {\n\n            /**\n             * Add user email\n             */\n            return ProfileService.addNewMail(mail)\n            .then(\n                feedback => {\n                    let email = feedback\n                    console.log(email.data)\n                    commit('addMail', email.data)\n                    return Promise.resolve(email)\n                },\n                fail => {\n                    return fail\n                }\n            );\n        },\n\n        /**\n         * Edit user email\n         * \n         * @param {*} param0 \n         * @param {*} mail \n         */\n        editMail({ commit }, mail) {\n\n            /**\n             * Edit user email\n             */\n            return ProfileService.editMail(mail)\n            .then(\n                feedback => {\n                    let email = feedback\n                    commit('editMail', email.data)\n                    return Promise.resolve(email)\n                },\n                fail => {\n                    return fail\n                }\n            );\n        },\n\n        /**\n         * Add user phone number\n         * \n         * @param {*} param0 \n         * @param {*} mail \n         */\n        addPhone({ commit }, phone) {\n\n            /**\n             * Add user phone\n             */\n            return ProfileService.addNewPhone(phone)\n            .then(\n                feedback => {\n                    let phoneNumber = feedback\n                    commit('addPhone', phoneNumber.data)\n                    return Promise.resolve(phoneNumber)\n                },\n                fail => {\n                    return fail\n                }\n            );\n        },\n\n        /**\n         * Edit user phone number \n         * \n         * @param {*} param0 \n         * @param {*} mail \n         */\n        editPhone({ commit }, phone) {\n\n            /**\n             * Edit user phone\n             */\n            return ProfileService.editPhone(phone)\n            .then(\n                feedback => {\n                    console.log(feedback)\n                    let phoneNumber = feedback\n                    commit('editPhone', feedback.data)\n                    return Promise.resolve(phoneNumber)\n                },\n                fail => {\n                    return fail\n                }\n            );\n        },\n\n        /**\n         * Switch Primary email\n         * \n         * @param {*} param0 \n         * @param {*} email \n         */\n        switchPrimaryEmail({ commit }, data) {\n            \n            /**\n             * Switch emails\n             */\n            return ProfileService.switchPrimaryEmail(data)\n            .then(\n                feedback => {\n                    console.log(feedback)\n                    commit('switchEmail', feedback.data)\n                    return Promise.resolve(feedback)\n                },\n                fail => {\n                    return fail\n                }\n            )\n        },\n\n        switchPrimaryPhone({ commit }, data) {\n\n            /**\n             * Switch primary phone\n             */\n            return ProfileService.switchPrimaryPhone(data)\n            .then(\n                feedback => {\n                    console.log(feedback)\n                    // let phoneNumber = feedback\n                    commit('switchPhone', feedback.data)\n                    return Promise.resolve(feedback.data)\n                },\n                fail => {\n                    console.log(fail)\n                    return fail\n                }\n            )\n        },\n    },\n    mutations: {\n\n        /**\n         * Handle laoded user profile\n         * \n         * @param {*} state \n         * @param {*} profile \n         */\n        profileSuccess(state, profile) {\n            state.profile = profile\n            state.emails = profile.relationships.email[0]\n            state.phones = profile.relationships.phone[0]\n            state.password = profile.relationships.password[0]\n        },\n\n        /**\n         * Handle update user profile\n         * \n         * @param {*} state \n         * @param {*} newProfile \n         */\n        updateProfile(state, newProfile) {\n            state.profile = newProfile\n            state.emails = newProfile.relationships.email[0]\n            state.phones = newProfile.relationships.phone[0]\n            state.password = newProfile.relationships.password[0]\n        },\n\n        /**\n         * Handle add user email\n         * \n         * @param {*} state \n         * @param {*} email \n         */\n        addMail(state, email) {\n            state.emails.push(email)\n        },\n\n        /**\n         * Handle edit user email\n         * \n         * @param {*} state \n         * @param {*} newEmail \n         */\n        editMail(state, updatedEmail) {\n            let mailList = state.emails\n            let mailIndex = mailList.findIndex( mail => mail.id === updatedEmail.id)\n            if(mailIndex !== -1) {\n                mailList.splice(mailIndex, 1, updatedEmail)\n            }\n        },\n\n        /**\n         * Handle add user phone\n         * \n         * @param {*} state \n         * @param {*} phone \n         */\n        addPhone(state, phone) {\n            state.phones.push(phone)\n        },\n\n        /**\n         * Handle edit user phone\n         * \n         * @param {*} state \n         * @param {*} newPhone \n         */\n        editPhone(state, updatedPhone) {\n            let phoneList = state.phones\n            let phoneIndex = phoneList.findIndex( mail => mail.id === updatedPhone.id)\n            if(phoneIndex !== -1) {\n                phoneList.splice(phoneIndex, 1, updatedPhone)\n            }\n        },\n\n        /**\n         * Switch primary phone number \n         * \n         * @param {*} state \n         * @param {*} data \n         */\n        switchPhone(state, data) {\n            state.phones = data\n        },\n\n        /**\n         * Switch primary email\n         * \n         * @param {*} state \n         * @param {*} data \n         */\n        switchEmail(state, data) {\n            state.emails = data\n        },\n\n        /**\n         * Handle failed to load profile\n         */\n        profileFail(state, error) {\n            state.profileError = error\n        },\n    }\n}"]}]}
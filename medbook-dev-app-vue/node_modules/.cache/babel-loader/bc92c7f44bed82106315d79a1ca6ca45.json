{"remainingRequest":"/var/www/html/1/medbook-dev-app-vue/node_modules/babel-loader/lib/index.js!/var/www/html/1/medbook-dev-app-vue/node_modules/eslint-loader/index.js??ref--13-0!/var/www/html/1/medbook-dev-app-vue/src/services/Axios.js","dependencies":[{"path":"/var/www/html/1/medbook-dev-app-vue/src/services/Axios.js","mtime":1610972128916},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/cache-loader/dist/cjs.js","mtime":1610518510696},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/babel-loader/lib/index.js","mtime":1610518510640},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/eslint-loader/index.js","mtime":1610518511248}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsgLy8gaW1wb3J0IFByb21wdCBmcm9tICdwYXNzd29yZC1wcm9tcHQnOwoKaW1wb3J0IEF1dGhTZXJ2aWNlIGZyb20gJy4vQXV0aFNlcnZpY2UnOwp2YXIgYWNjZXNzX3Rva2VuID0gc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgndG9rZW4nKTsKdmFyIHRva2VuID0gYWNjZXNzX3Rva2VuID8gSlNPTi5wYXJzZShhY2Nlc3NfdG9rZW4pIDogbnVsbDsgLy8gdmFyIGJlYXJlclRva2VuID0gYWNjZXNzX3Rva2VuID8gZGF0YS50b2tlbi5hY2Nlc3NfdG9rZW4gOiBudWxsCgp2YXIgQXhpb3MgPSBheGlvcy5jcmVhdGUoewogIGJhc2VVUkw6ICdodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpLycsCiAgLy8gYmFzZVVSTCA6ICdodHRwOi8vYmFja2VuZC5udmMtaW52b2ljZS5jb20vJywKICAvLyB0aW1lb3V0IDogMTAwMCwKICBoZWFkZXJzOiB7CiAgICBjb21tb246IHsKICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgJ0NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgJ0F1dGhvcml6YXRpb24nOiAnQmVhcmVyICcgKyB0b2tlbgogICAgfQogIH0KfSk7IC8vIEF4aW9zLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZSgoKSA9PiB7Ci8vIH0pCgpBeGlvcy5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKGZ1bmN0aW9uIChyZXNwb25zZSkgewogIC8vIGNvbnNvbGUubG9nKCJyZXNwb25zZSAiICsgcmVzcG9uc2Uuc3RhdHVzKQogIHJldHVybiByZXNwb25zZTsKfSwgZnVuY3Rpb24gKGVycm9ycykgewogIHZhciBlcnJvciA9IGVycm9ycy5yZXNwb25zZTsKCiAgaWYgKGVycm9yLnN0YXR1cyA9PT0gNDAxKSB7CiAgICAvLyBjb25zdCBwYXNzd29yZCA9IHByb21wdCgnRW50ZXIgeW91ciBwYXNzd29yZCB0byBjb250aW51ZScpCiAgICB2YXIgUHJvbXB0ID0gcmVxdWlyZSgnLi4nKTsKCiAgICB2YXIgcHJvbXB0ID0gbmV3IFByb21wdCh7CiAgICAgIHR5cGU6ICdwYXNzd29yZCcsCiAgICAgIG1lc3NhZ2U6ICdFbnRlciB5b3VyIHBhc3N3b3JkIHBsZWFzZScsCiAgICAgIG5hbWU6ICdwYXNzd29yZCcKICAgIH0pOwogICAgcHJvbXB0LnJ1bigpLnRoZW4oZnVuY3Rpb24gKGFuc3dlcnMpIHsKICAgICAgY29uc29sZS5sb2coYW5zd2Vycyk7CiAgICB9KTsgLy8gbGV0IHByb21wdCA9IHJlcXVpcmUoJ3Bhc3N3b3JkLXByb21wdCcpCgogICAgdmFyIHBhc3N3b3JkID0gJ3Bhc3N3b3JkJzsKICAgIHZhciB2dWV4RGF0YSA9IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ3Z1ZXgnKTsKICAgIHZhciBkYXRhID0gSlNPTi5wYXJzZSh2dWV4RGF0YSk7CiAgICB2YXIgZW1haWwgPSBkYXRhLnByb2ZpbGUucHJvZmlsZS5hdHRyaWJ1dGVzLmVtYWlsOyAvLyBsZXQgY3JlZGVudGlhbCA9IFtdOwoKICAgIHZhciBjcmVkZW50aWFsID0gewogICAgICAiZW1haWwiOiBlbWFpbCwKICAgICAgJ3Bhc3N3b3JkJzogcGFzc3dvcmQKICAgIH07IC8vIGNvbnNvbGUubG9nKGNyZWRlbnRpYWwpCiAgICAvLyBBeGlvcyh7CiAgICAvLyAgICAgbWV0aG9kIDogJ1BPU1QnLAogICAgLy8gICAgIHVybCA6ICcvbG9naW4nLAogICAgLy8gfSkKCiAgICBBdXRoU2VydmljZS5sb2dpbihjcmVkZW50aWFsKS50aGVuKGZ1bmN0aW9uIChmZWVkKSB7CiAgICAgIGNvbnNvbGUubG9nKGZlZWQpOwogICAgfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgIH0pOwogICAgLyoqCiAgICAgKiB1bmF1dGhvcml6ZWQgdXNlciBpcyBsb2dnZWQgb3V0IGFuZCByZWRpcmVjdGVkIHRvIHRoZSBzYW1lIHBhZ2UgdXBvbiBsb2dpbgogICAgICogCiAgICAgKiBDbGVhciBleHBpcmVkIHRva2VuCiAgICAgKi8KICAgIC8vIHNlc3Npb25TdG9yYWdlLnJlbW92ZUl0ZW0oJ3Rva2VuJykKICAgIC8vIEdldCBjdXJyZW50IHBhdGhuYW1lCiAgICAvLyBsZXQgcmVkaXJlY3RUbyA9IHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZQogICAgLy8gUmVkaXJlY3QgdG8gdGhlIHBhdGhuYW1lCiAgICAvLyBzZWxmLmxvY2F0aW9uID0gcmVkaXJlY3RUbwogIH0KCiAgcmV0dXJuIGVycm9yOyAvLyBpZiAoZXJyb3IucmVzcG9uc2UgJiYgZXJyb3IucmVzcG9uc2UuZGF0YSkgewogIC8vYWRkIHlvdXIgY29kZQogIC8vICAgYWxlcnQoImVycm9yIDoiICsgZXJyb3IucmVzcG9uc2UuZGF0YSk7CiAgLy8gPERpYWxvZy8+CiAgLy8gIGNvbnNvbGUubG9nKGVycm9yLnJlc3BvbnNlLmRhdGEpCiAgLy8gIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvci5yZXNwb25zZS5kYXRhKTsKICAvLyB9CiAgLy8gcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yLm1lc3NhZ2UpOwp9KTsKZXhwb3J0IGRlZmF1bHQgQXhpb3M7"},{"version":3,"sources":["/var/www/html/1/medbook-dev-app-vue/src/services/Axios.js"],"names":["axios","AuthService","access_token","sessionStorage","getItem","token","JSON","parse","Axios","create","baseURL","headers","common","interceptors","response","use","errors","error","status","Prompt","require","prompt","type","message","name","run","then","answers","console","log","password","vuexData","data","email","profile","attributes","credential","login","feed"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACI,IAAMC,YAAY,GAAGC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAArB;AACA,IAAIC,KAAK,GAAGH,YAAY,GAAGI,IAAI,CAACC,KAAL,CAAWL,YAAX,CAAH,GAA8B,IAAtD,C,CACA;;AAGA,IAAMM,KAAK,GAAGR,KAAK,CAACS,MAAN,CAAa;AACvBC,EAAAA,OAAO,EAAE,4BADc;AAEvB;AACA;AACAC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,MAAM,EAAG;AAChB,gBAAW,kBADK;AAEhB,sBAAiB,kBAFD;AAGhB,uBAAkB,YAAWP;AAHb;AAAX;AAJc,CAAb,CAAd,C,CAaA;AAEA;;AAIAG,KAAK,CAACK,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgC,UAACD,QAAD,EAAc;AAC1C;AACA,SAAOA,QAAP;AACH,CAHD,EAGG,UAACE,MAAD,EAAY;AACX,MAAIC,KAAK,GAAGD,MAAM,CAACF,QAAnB;;AACA,MAAGG,KAAK,CAACC,MAAN,KAAiB,GAApB,EAAyB;AACrB;AAEZ,QAAIC,MAAM,GAAGC,OAAO,CAAC,IAAD,CAApB;;AACA,QAAIC,MAAM,GAAG,IAAIF,MAAJ,CAAW;AACtBG,MAAAA,IAAI,EAAE,UADgB;AAEtBC,MAAAA,OAAO,EAAE,4BAFa;AAGtBC,MAAAA,IAAI,EAAE;AAHgB,KAAX,CAAb;AAMAH,IAAAA,MAAM,CAACI,GAAP,GACGC,IADH,CACQ,UAASC,OAAT,EAAkB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACD,KAHH,EAViC,CAerB;;AACA,QAAIG,QAAQ,GAAG,UAAf;AAGA,QAAMC,QAAQ,GAAG5B,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAjB;AACA,QAAI4B,IAAI,GAAG1B,IAAI,CAACC,KAAL,CAAWwB,QAAX,CAAX;AACA,QAAIE,KAAK,GAAGD,IAAI,CAACE,OAAL,CAAaA,OAAb,CAAqBC,UAArB,CAAgCF,KAA5C,CArBqB,CAsBrB;;AACA,QAAIG,UAAU,GAAG;AACb,eAAUH,KADG;AAEb,kBAAaH;AAFA,KAAjB,CAvBqB,CA2BrB;AAEA;AACA;AACA;AAEA;;AACA7B,IAAAA,WAAW,CAACoC,KAAZ,CAAkBD,UAAlB,EAA8BV,IAA9B,CACI,UAAAY,IAAI,EAAI;AACJV,MAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;AACH,KAHL,EAII,UAAArB,KAAK,EAAI;AACLW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACH,KANL;AAQA;AACZ;AACA;AACA;AACA;AACY;AAEA;AACA;AAEA;AACA;AAEH;;AACD,SAAOA,KAAP,CA1DW,CA2DX;AACK;AACD;AACA;AACA;AACA;AACJ;AACA;AACH,CAtED;AAuEJ,eAAeT,KAAf","sourcesContent":["import axios from 'axios'\n// import Prompt from 'password-prompt';\nimport AuthService from './AuthService';\n    const access_token = sessionStorage.getItem('token');\n    let token = access_token ? JSON.parse(access_token) : null\n    // var bearerToken = access_token ? data.token.access_token : null\n\n\n    const Axios = axios.create({\n        baseURL: 'http://localhost:8000/api/',\n        // baseURL : 'http://backend.nvc-invoice.com/',\n        // timeout : 1000,\n        headers: { common : {\n            'Accept' : 'application/json',\n            'Content-type' : 'application/json',\n            'Authorization' : 'Bearer '+ token\n        }}\n    });\n    \n\n\n    // Axios.interceptors.request.use(() => {\n\n    // })\n\n\n\n    Axios.interceptors.response.use((response) => {\n        // console.log(\"response \" + response.status)\n        return response;\n    }, (errors) => {\n        let error = errors.response\n        if(error.status === 401) {\n            // const password = prompt('Enter your password to continue')\n            \nvar Prompt = require('..');\nvar prompt = new Prompt({\n  type: 'password',\n  message: 'Enter your password please',\n  name: 'password'\n});\n \nprompt.run()\n  .then(function(answers) {\n    console.log(answers)\n  });\n    \n            // let prompt = require('password-prompt')\n            let password = 'password';\n\n\n            const vuexData = sessionStorage.getItem('vuex')\n            let data = JSON.parse(vuexData)\n            let email = data.profile.profile.attributes.email\n            // let credential = [];\n            let credential = {\n                \"email\" : email,\n                'password' : password\n            }\n            // console.log(credential)\n\n            // Axios({\n            //     method : 'POST',\n            //     url : '/login',\n\n            // })\n            AuthService.login(credential).then(\n                feed => {\n                    console.log(feed)\n                },\n                error => {\n                    console.log(error)\n                }\n            )\n            /**\n             * unauthorized user is logged out and redirected to the same page upon login\n             * \n             * Clear expired token\n             */\n            // sessionStorage.removeItem('token')\n\n            // Get current pathname\n            // let redirectTo = window.location.pathname\n\n            // Redirect to the pathname\n            // self.location = redirectTo\n            \n        }\n        return error\n        // if (error.response && error.response.data) {\n             //add your code\n            //   alert(\"error :\" + error.response.data);\n            // <Dialog/>\n            //  console.log(error.response.data)\n            //  return Promise.reject(error.response.data);\n        // }\n        // return Promise.reject(error.message);\n    });\nexport default Axios;"]}]}
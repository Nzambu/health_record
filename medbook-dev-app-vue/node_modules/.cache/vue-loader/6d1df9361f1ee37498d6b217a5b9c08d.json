{"remainingRequest":"/var/www/html/1/medbook-dev-app-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/1/medbook-dev-app-vue/src/views/Patient.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/1/medbook-dev-app-vue/src/views/Patient.vue","mtime":1610540128896},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/cache-loader/dist/cjs.js","mtime":1610518510696},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/babel-loader/lib/index.js","mtime":1610518510640},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/cache-loader/dist/cjs.js","mtime":1610518510696},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/vue-loader/lib/index.js","mtime":1610518511764}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgUGF0aWVudCBmcm9tICcuLi9tb2RlbHMvUGF0aWVudCc7CmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JwppbXBvcnQgeyBmb3JtYXQsIHBhcnNlSVNPIH0gZnJvbSAnZGF0ZS1mbnMnCgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lIDogJ1BhdGllbnQnLAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBwYXRpZW50IDogbmV3IFBhdGllbnQoKSwKICAgICAgICAgICAgc2hvd1BhdGllbnRzIDogdHJ1ZSwKICAgICAgICAgICAgc2VhcmNoUGF0aWVudCA6ICcnLAogICAgICAgICAgICB0YWJsZUhlYWRlcnMgOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgdGV4dDogJ05hbWUnLAogICAgICAgICAgICAgICAgICAgIGFsaWduOiAnc3RhcnQnLAogICAgICAgICAgICAgICAgICAgIHNvcnRhYmxlOiBmYWxzZSwKICAgICAgICAgICAgICAgICAgICB2YWx1ZTogJ2F0dHJpYnV0ZXMubmFtZScsCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIHRleHQ6ICdEYXRlIE9mIEJpcnRoJywKICAgICAgICAgICAgICAgICAgICBhbGlnbjogJ2xlZnQnLAogICAgICAgICAgICAgICAgICAgIHZhbHVlOiAnYXR0cmlidXRlcy5kb2InLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICB0ZXh0OiAnR2VuZGVyJywKICAgICAgICAgICAgICAgICAgICBhbGlnbjogJ2xlZnQnLAogICAgICAgICAgICAgICAgICAgIHZhbHVlOiAncmVsYXRpb25zaGlwcy5nZW5kZXJbMF0uYXR0cmlidXRlcy5zZXgnLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICB0ZXh0OiAnVHlwZSBPZiBTZXJ2aWNlJywKICAgICAgICAgICAgICAgICAgICBhbGlnbjogJ2xlZnQnLAogICAgICAgICAgICAgICAgICAgIHZhbHVlOiAncmVsYXRpb25zaGlwcy5zZXJ2aWNlWzBdLmF0dHJpYnV0ZXMuc2VydmljZScsCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIHRleHQ6ICdHZW5lcmFsIENvbW1lbnRzJywKICAgICAgICAgICAgICAgICAgICBhbGlnbjogJ2xlZnQnLAogICAgICAgICAgICAgICAgICAgIHZhbHVlOiAnYXR0cmlidXRlcy5jb21tZW50cycsCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICBdLAogICAgICAgICAgICBkYXRlOiBmb3JtYXQocGFyc2VJU08obmV3IERhdGUoKS50b0lTT1N0cmluZygpKSwgJ3l5eXktTU0tZGQnKSwKICAgICAgICAgICAgbWVudTE6IGZhbHNlLAogICAgICAgICAgICBtZW51MjogZmFsc2UsCiAgICAgICAgfSAgICAKICAgIH0sCiAgICBjb21wdXRlZCA6IHsKICAgICAgICAvKioKICAgICAgICAgKiBTZXJ2aWNlIGxpc3QKICAgICAgICAgKi8KICAgICAgICBzZXJ2aWNlTGlzdCgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLnBhdGllbnQuc2VydmljZSA/PyBudWxsCiAgICAgICAgfSwKCiAgICAgICAgLyoqCiAgICAgICAgICogR2VuZGVyIExpc3QKICAgICAgICAgKi8KICAgICAgICBnZW5kZXJMaXN0KCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUucGF0aWVudC5nZW5kZXIgPz8gbnVsbAogICAgICAgIH0sCgogICAgICAgIC8qKgogICAgICAgICAqIFBhdGllbnQgTGlzdAogICAgICAgICAqLwogICAgICAgIHBhdGllbnRMaXN0KCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUucGF0aWVudC5saXN0ID8/IG51bGwKICAgICAgICB9LAoKICAgICAgICAvKioKICAgICAgICAgKiBQcm9jZXNzIHRoZSBkYXRlcwogICAgICAgICAqLwogICAgICAgIGNvbXB1dGVkRGF0ZUZvcm1hdHRlZE1vbWVudGpzICgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGF0ZSA/IG1vbWVudCh0aGlzLmRhdGUpLmZvcm1hdCgnZGRkZCwgTU1NTSBEbyBZWVlZJykgOiAnJwogICAgICAgIH0sCiAgICAgICAgY29tcHV0ZWREYXRlRm9ybWF0dGVkRGF0ZWZucyAoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLmRhdGUgPyBmb3JtYXQodGhpcy5kYXRlLCAnRUVFRSwgTU1NTSBkbyB5eXl5JykgOiAnJwogICAgICAgIH0sCiAgICB9LAogICAgY3JlYXRlZCgpIHsKICAgICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgICAgIHRoaXMubG9hZFBhdGllbnRMaXN0KCk7CiAgICAgICAgICAgIHRoaXMubG9hZEdlbmRlcigpOwogICAgICAgICAgICB0aGlzLmxvYWRTZXJ2aWNlKCk7CiAgICAgICAgfSk7CiAgICB9LAogICAgbWV0aG9kcyA6IHsKICAgICAgICAvKioKICAgICAgICAgKiBUb2dnbGUgc2hvdyBhbmQgYWRkIHBhdGllbnRzCiAgICAgICAgICovCiAgICAgICAgdG9nZ2xlQWRkUGF0aWVudCgpCiAgICAgICAgewogICAgICAgICAgICB0aGlzLnNob3dQYXRpZW50cyA9ICF0aGlzLnNob3dQYXRpZW50cwogICAgICAgIH0sCgogICAgICAgIC8qKgogICAgICAgICAqIFNhdmUgbmV3IHBhdGllbnQKICAgICAgICAgKi8KICAgICAgICBhc3luYyBoYW5kbGVTYXZlTmV3UGF0aWVudCgpCiAgICAgICAgewogICAgICAgICAgICAvLyBWYWxpZGF0ZSBhbGwgdGhlIGZpZWxkcwogICAgICAgICAgICBhd2FpdCB0aGlzLiRyZWZzLnBhdGllbnRPYnNlcnZlci52YWxpZGF0ZSgpLnRoZW4oCiAgICAgICAgICAgICAgICBzdWNjZXNzID0+IHsKICAgICAgICAgICAgICAgICAgICAvLyB2YWxpZGF0aW9uIHJldHVybnMgdHJ1ZQogICAgICAgICAgICAgICAgICAgIGlmKHN1Y2Nlc3MgPT09IHRydWUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgLy8gc2V0IHBhdGllbnQgZGF0ZSBvZiBiaXJ0aAogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBhdGllbnQuZG9iID0gdGhpcy5kYXRlOwogICAgICAgICAgICAgICAgICAgICAgICAvLyBwYXNzIGRhdGEgdG8gcGF0aWVudCBtb2R1bGUKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3BhdGllbnQvc2F2ZVBhdGllbnQnLCB0aGlzLnBhdGllbnQpLnRoZW4oCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdSZWNvcmQgPT4gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBkYXRhID0gbmV3UmVjb3JkCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICk7CiAgICAgICAgICAgIHRoaXMuc2hvd1BhdGllbnRzID0gIXRoaXMuc2hvd1BhdGllbnRzCiAgICAgICAgfSwKCiAgICAgICAgLyoqCiAgICAgICAgICogTG9hZCBhbGwgcGF0aWVudHMKICAgICAgICAgKi8KICAgICAgICBhc3luYyBsb2FkUGF0aWVudExpc3QoKQogICAgICAgIHsKICAgICAgICAgICAgYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3BhdGllbnQvZ2V0TGlzdCcpLnRoZW4oCiAgICAgICAgICAgICAgICByZWNvcmRzID0+IHsKICAgICAgICAgICAgICAgICAgICBpZihyZWNvcmRzKQogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlY29yZHMKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICkKICAgICAgICB9LAoKICAgICAgICAvKioKICAgICAgICAgKiBMb2FkIGdlbmRlcgogICAgICAgICAqLwogICAgICAgIGxvYWRHZW5kZXIoKQogICAgICAgIHsKICAgICAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3BhdGllbnQvZ2VuZGVyTGlzdCcpCiAgICAgICAgfSwKCiAgICAgICAgLyoqCiAgICAgICAgICogTG9hZCBzZXJ2aWNlCiAgICAgICAgICovCiAgICAgICAgbG9hZFNlcnZpY2UoKQogICAgICAgIHsKICAgICAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3BhdGllbnQvc2VydmljZUxpc3QnKQogICAgICAgIH0sCiAgICAgICAgCiAgICAgICAgLyoqCiAgICAgICAgICogU2V0IHBhdGllbnQgZ2VuZGVyCiAgICAgICAgICovCiAgICAgICAgc2V0R2VuZGVyKHNleCkgCiAgICAgICAgewogICAgICAgICAgICB0aGlzLnBhdGllbnQuZ2VuZGVyX2lkID0gc2V4Lml0ZW0KICAgICAgICB9LAoKICAgICAgICAvKioKICAgICAgICAgKiBTZXQgcGF0aWVudCBzZXJ2aWNlCiAgICAgICAgICovCiAgICAgICAgc2V0U2VydmljZShzZXJ2aWNlKQogICAgICAgIHsKICAgICAgICAgICAgdGhpcy5wYXRpZW50LnNlcnZpY2VfaWQgPSBzZXJ2aWNlLmlkCiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["Patient.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"Patient.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <v-container>\n        <v-card>\n            <v-card-title class=\"px-10 py-0\">\n                <v-row>\n                <v-col lg=\"3\">\n                <v-list-item two-line>\n                    <v-list-item-content>\n                        <v-list-item-title>Patient Health Records</v-list-item-title>\n                    </v-list-item-content>\n                </v-list-item>\n                </v-col>\n                <v-col lg=\"7\">\n                    <v-text-field\n                        v-model=\"searchPatient\"\n                        append-icon=\"mdi-magnify\"\n                        label=\"Search\"\n                        single-line\n                        hide-details\n                    ></v-text-field>\n                </v-col>\n                <v-col lg=\"2\">\n                    <v-row>\n                    <v-spacer></v-spacer>            \n                    <v-tooltip bottom>\n                    <template v-slot:activator=\"{ on, attrs }\">\n                        <v-btn\n                        class=\"blue white--text text-capitalize\"\n                        @click=\"toggleAddPatient\"\n                        v-bind=\"attrs\"\n                        v-on=\"on\"\n                        >Patient\n                        <v-icon v-if=\"showPatients\"\n                            class=\"white--text\"                \n                        >mdi-plus</v-icon>\n                        <v-icon v-if=\"!showPatients\"\n                            class=\"white--text\"                \n                        >mdi-close</v-icon>\n                        </v-btn>\n                    </template>\n                    <span>Add Patient</span>\n                    </v-tooltip> \n                    </v-row>            \n                </v-col>\n                </v-row>\n            </v-card-title>\n            <v-divider></v-divider>\n            <v-row class=\"py-10 px-10\">\n                <v-col v-if=\"showPatients\">\n                    <v-data-table\n                        :headers=\"tableHeaders\"\n                        :items=\"patientList\"\n                        :search=\"searchPatient\"\n                        :items-per-page=\"10\"\n                        class=\"elevation-1\"\n                    >\n                        <!-- <v-pagination\n                            v-model=\"page\"\n                            :length=\"pageCount\"\n                        ></v-pagination> -->\n                    </v-data-table>\n                </v-col>\n                <v-col v-if=\"!showPatients\"\n                    offset-lg=\"3\"\n                    lg=\"6\"\n                    offset-md=\"3\"\n                    md=\"6\"\n                >\n\n                <!-- Patient registration form -->\n\n                    <validation-observer\n                        ref=\"patientObserver\"\n                    >\n                        <v-form>              \n                            <validation-provider\n                            v-slot=\"{errors}\"\n                            name=\"Name\"\n                            rules=\"required\"\n                            >\n                            <v-text-field\n                                v-model=\"patient.name\"\n                                :error-messages=\"errors\"\n                                label=\"Name\"\n                                type=\"text\"\n                                required\n                            ></v-text-field>\n                            </validation-provider>\n                            <v-menu\n                                v-model=\"menu1\"\n                                :close-on-content-click=\"false\"\n                                max-width=\"290\"\n                            >\n                                <template v-slot:activator=\"{ on, attrs }\">\n                                    <validation-provider\n                                        v-slot=\"{errors}\"\n                                        name=\"Date of Birth\"\n                                        rules=\"required\"\n                                    >\n                                        <v-text-field\n                                            :value=\"computedDateFormattedMomentjs\"\n                                            :error-messages=\"errors\"\n                                            clearable\n                                            label=\"Date Of Birth\"\n                                            readonly\n                                            v-bind=\"attrs\"\n                                            v-on=\"on\"\n                                            @click:clear=\"date = null\"\n                                        ></v-text-field>\n                                    </validation-provider>\n                                </template>\n                                <v-date-picker\n                                    v-model=\"date\"\n                                    @change=\"menu1 = false\"\n                                ></v-date-picker>\n                            </v-menu>\n                            <validation-provider\n                            v-slot=\"{errors}\"\n                            name=\"Gender\"\n                            rules=\"required\"\n                            >\n                            <v-select\n                                v-model=\"patient.gender_id\"\n                                :error-messages=\"errors\"\n                                :items=\"genderList\"\n                                item-text=\"attributes.sex\"\n                                item-value=\"id\"\n                                label=\"Gender\"\n                                persistent-hint                    \n                                single-line\n                            ></v-select>\n                            </validation-provider>\n                            <validation-provider\n                            v-slot=\"{errors}\"\n                            name=\"Type Of Service\"\n                            rules=\"required\"\n                            >\n                            <v-select\n                                v-model=\"patient.service_id\"\n                                :error-messages=\"errors\"\n                                :items=\"serviceList\"\n                                item-text=\"attributes.service\"\n                                item-value=\"id\"\n                                label=\"Type of Service\"\n                                persistent-hint\n                                single-line\n                            ></v-select>\n                            </validation-provider>\n                            <validation-provider\n                            v-slot=\"{errors}\"\n                            name=\"General Comments\"\n                            rules=\"required\" \n                            >\n                                <v-textarea\n                                    v-model=\"patient.comments\"\n                                    :error-messages=\"errors\"\n                                    name=\"General Comments\"\n                                    label=\"General Comments\"\n                                    value=\"\"\n                                    hint=\"\"\n                                    ></v-textarea>\n                            </validation-provider>\n                            <v-row class=\"pt-5\">\n                            <v-col lg=\"12\">\n                                <v-btn \n                                    block \n                                    class=\"success text-capitalize\"\n                                    @click=\"handleSaveNewPatient\"                                    \n                                >Save Patient</v-btn>\n                            </v-col>\n                            </v-row>              \n                        </v-form>\n                    </validation-observer>\n\n                    <!-- End of patient registration form -->\n\n                </v-col>\n            </v-row>\n        </v-card>\n    </v-container>\n</template>\n<script>\n\nimport Patient from '../models/Patient';\nimport moment from 'moment'\nimport { format, parseISO } from 'date-fns'\n\nexport default {\n    name : 'Patient',\n    data() {\n        return {\n            patient : new Patient(),\n            showPatients : true,\n            searchPatient : '',\n            tableHeaders : [\n                {\n                    text: 'Name',\n                    align: 'start',\n                    sortable: false,\n                    value: 'attributes.name',\n                },\n                {\n                    text: 'Date Of Birth',\n                    align: 'left',\n                    value: 'attributes.dob',\n                },\n                {\n                    text: 'Gender',\n                    align: 'left',\n                    value: 'relationships.gender[0].attributes.sex',\n                },\n                {\n                    text: 'Type Of Service',\n                    align: 'left',\n                    value: 'relationships.service[0].attributes.service',\n                },\n                {\n                    text: 'General Comments',\n                    align: 'left',\n                    value: 'attributes.comments',\n                },\n            ],\n            date: format(parseISO(new Date().toISOString()), 'yyyy-MM-dd'),\n            menu1: false,\n            menu2: false,\n        }    \n    },\n    computed : {\n        /**\n         * Service list\n         */\n        serviceList() {\n            return this.$store.state.patient.service ?? null\n        },\n\n        /**\n         * Gender List\n         */\n        genderList() {\n            return this.$store.state.patient.gender ?? null\n        },\n\n        /**\n         * Patient List\n         */\n        patientList() {\n            return this.$store.state.patient.list ?? null\n        },\n\n        /**\n         * Process the dates\n         */\n        computedDateFormattedMomentjs () {\n            return this.date ? moment(this.date).format('dddd, MMMM Do YYYY') : ''\n        },\n        computedDateFormattedDatefns () {\n            return this.date ? format(this.date, 'EEEE, MMMM do yyyy') : ''\n        },\n    },\n    created() {\n        this.$nextTick(() => {\n            this.loadPatientList();\n            this.loadGender();\n            this.loadService();\n        });\n    },\n    methods : {\n        /**\n         * Toggle show and add patients\n         */\n        toggleAddPatient()\n        {\n            this.showPatients = !this.showPatients\n        },\n\n        /**\n         * Save new patient\n         */\n        async handleSaveNewPatient()\n        {\n            // Validate all the fields\n            await this.$refs.patientObserver.validate().then(\n                success => {\n                    // validation returns true\n                    if(success === true) {\n                        // set patient date of birth\n                        this.patient.dob = this.date;\n                        // pass data to patient module\n                        this.$store.dispatch('patient/savePatient', this.patient).then(\n                            newRecord => {\n                                let data = newRecord\n                                console.log(data)\n                            }\n                        );\n                    }\n                }\n            );\n            this.showPatients = !this.showPatients\n        },\n\n        /**\n         * Load all patients\n         */\n        async loadPatientList()\n        {\n            await this.$store.dispatch('patient/getList').then(\n                records => {\n                    if(records)\n                    {\n                        return records\n                    }\n                }\n            )\n        },\n\n        /**\n         * Load gender\n         */\n        loadGender()\n        {\n            this.$store.dispatch('patient/genderList')\n        },\n\n        /**\n         * Load service\n         */\n        loadService()\n        {\n            this.$store.dispatch('patient/serviceList')\n        },\n        \n        /**\n         * Set patient gender\n         */\n        setGender(sex) \n        {\n            this.patient.gender_id = sex.item\n        },\n\n        /**\n         * Set patient service\n         */\n        setService(service)\n        {\n            this.patient.service_id = service.id\n        }\n    }\n}\n</script>"]}]}
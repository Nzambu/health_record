{"remainingRequest":"/var/www/html/app/node_modules/babel-loader/lib/index.js!/var/www/html/app/node_modules/eslint-loader/index.js??ref--13-0!/var/www/html/app/src/services/AuthService.js","dependencies":[{"path":"/var/www/html/app/src/services/AuthService.js","mtime":1605875734724},{"path":"/var/www/html/app/node_modules/cache-loader/dist/cjs.js","mtime":1605767621944},{"path":"/var/www/html/app/node_modules/babel-loader/lib/index.js","mtime":1605767621946},{"path":"/var/www/html/app/node_modules/eslint-loader/index.js","mtime":1605767633055}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZSI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiL3Zhci93d3cvaHRtbC9hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvdmFyL3d3dy9odG1sL2FwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgQXhpb3MgZnJvbSAnLi9BeGlvcyc7Cgp2YXIgQXV0aFNlcnZpY2UgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIEF1dGhTZXJ2aWNlKCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEF1dGhTZXJ2aWNlKTsKICB9CgogIF9jcmVhdGVDbGFzcyhBdXRoU2VydmljZSwgW3sKICAgIGtleTogImxvZ2luIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBsb2dpbihkYXRhKSB7CiAgICAgIHJldHVybiBBeGlvcyh7CiAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgdXJsOiAnYXV0aC9sb2dpbicsCiAgICAgICAgZGF0YTogZGF0YQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIHZhciB1c2VyID0gcmVzcG9uc2UuZGF0YS5kYXRhOwoKICAgICAgICBpZiAodXNlci50b2tlbi5hY2Nlc3NfdG9rZW4pIHsKICAgICAgICAgIC8vIFN0b3JlIHRva2VuIGluIHNlc3Npb24gc3RvcmFnZQogICAgICAgICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgndXNlcicsIEpTT04uc3RyaW5naWZ5KHVzZXIpKTsgLy8gU2V0IHRoZSBhdXRob3JpemF0aW9uIGJlYXJlciB0b2tlbgoKICAgICAgICAgIEF4aW9zLmRlZmF1bHRzLmhlYWRlcnMuY29tbW9uLkF1dGhvcml6YXRpb24gPSAnQmVhcmVyICcgKyB1c2VyLnRva2VuLmFjY2Vzc190b2tlbjsKICAgICAgICB9CgogICAgICAgIHJldHVybiB1c2VyOwogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJsb2dvdXQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGxvZ291dCgpIHsKICAgICAgLy8gQXhpb3MoewogICAgICAvLyAgICAgbWV0aG9kOiAnR0VUJywKICAgICAgLy8gICAgIHVybDogJ2F1dGgvbG9nb3V0JywKICAgICAgLy8gfSkudGhlbigKICAgICAgLy8gICAgIHJlc3BvbnNlID0+IHsKICAgICAgLy8gICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSkKICAgICAgLy8gICAgIH0KICAgICAgLy8gKQogICAgICBzZXNzaW9uU3RvcmFnZS5yZW1vdmVJdGVtKCd1c2VyJyk7CiAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKCcvbG9naW4nKTsKICAgIH0KICB9XSk7CgogIHJldHVybiBBdXRoU2VydmljZTsKfSgpOwoKZXhwb3J0IGRlZmF1bHQgbmV3IEF1dGhTZXJ2aWNlKCk7"},{"version":3,"sources":["/var/www/html/app/src/services/AuthService.js"],"names":["Axios","AuthService","data","method","url","then","response","user","token","access_token","sessionStorage","setItem","JSON","stringify","defaults","headers","common","Authorization","removeItem","window","location","replace"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,SAAlB;;IACMC,W;;;;;;;0BACIC,I,EAAM;AACR,aAAOF,KAAK,CAAC;AACTG,QAAAA,MAAM,EAAE,MADC;AAETC,QAAAA,GAAG,EAAE,YAFI;AAGTF,QAAAA,IAAI,EAAGA;AAHE,OAAD,CAAL,CAKNG,IALM,CAKD,UAACC,QAAD,EAAc;AAChB,YAAIC,IAAI,GAAGD,QAAQ,CAACJ,IAAT,CAAcA,IAAzB;;AACA,YAAGK,IAAI,CAACC,KAAL,CAAWC,YAAd,EAA4B;AACxB;AACAC,UAAAA,cAAc,CAACC,OAAf,CAAuB,MAAvB,EAA+BC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAA/B,EAFwB,CAGxB;;AACAP,UAAAA,KAAK,CAACc,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8BC,aAA9B,GAA8C,YAAWV,IAAI,CAACC,KAAL,CAAWC,YAApE;AACH;;AACD,eAAOF,IAAP;AACH,OAdM,CAAP;AAeH;;;6BAEQ;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAG,MAAAA,cAAc,CAACQ,UAAf,CAA0B,MAA1B;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,QAAxB;AACH;;;;;;AAEL,eAAe,IAAIpB,WAAJ,EAAf","sourcesContent":["import Axios from './Axios'\nclass AuthService {\n    login(data) {\n        return Axios({\n            method: 'POST',\n            url: 'auth/login',\n            data : data\n        })\n        .then((response) => {\n            let user = response.data.data\n            if(user.token.access_token) {\n                // Store token in session storage\n                sessionStorage.setItem('user', JSON.stringify(user));\n                // Set the authorization bearer token\n                Axios.defaults.headers.common.Authorization = 'Bearer '+ user.token.access_token\n            }\n            return user\n        })\n    }\n\n    logout() {\n        // Axios({\n        //     method: 'GET',\n        //     url: 'auth/logout',\n        // }).then(\n        //     response => {\n        //         console.log(response)\n        //     }\n        // )\n        sessionStorage.removeItem('user')\n        window.location.replace('/login')\n    }\n}\nexport default new AuthService;\n"]}]}
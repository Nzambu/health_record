{"remainingRequest":"/var/www/html/1/medbook-dev-app-vue/node_modules/thread-loader/dist/cjs.js!/var/www/html/1/medbook-dev-app-vue/node_modules/babel-loader/lib/index.js!/var/www/html/1/medbook-dev-app-vue/node_modules/eslint-loader/index.js??ref--13-0!/var/www/html/1/medbook-dev-app-vue/src/services/Axios.js","dependencies":[{"path":"/var/www/html/1/medbook-dev-app-vue/src/services/Axios.js","mtime":1610975338642},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/cache-loader/dist/cjs.js","mtime":1610518510696},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/thread-loader/dist/cjs.js","mtime":1610518511736},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/babel-loader/lib/index.js","mtime":1610518510640},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/eslint-loader/index.js","mtime":1610518511248}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsgLy8gaW1wb3J0IFByb21wdCBmcm9tICdwYXNzd29yZC1wcm9tcHQnOwovLyBpbXBvcnQgQXV0aFNlcnZpY2UgZnJvbSAnLi9BdXRoU2VydmljZSc7Cgp2YXIgYWNjZXNzX3Rva2VuID0gc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgndG9rZW4nKTsKdmFyIHRva2VuID0gYWNjZXNzX3Rva2VuID8gSlNPTi5wYXJzZShhY2Nlc3NfdG9rZW4pIDogbnVsbDsgLy8gdmFyIGJlYXJlclRva2VuID0gYWNjZXNzX3Rva2VuID8gZGF0YS50b2tlbi5hY2Nlc3NfdG9rZW4gOiBudWxsCgp2YXIgQXhpb3MgPSBheGlvcy5jcmVhdGUoewogIGJhc2VVUkw6ICdodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpLycsCiAgLy8gYmFzZVVSTCA6ICdodHRwOi8vYmFja2VuZC5udmMtaW52b2ljZS5jb20vJywKICAvLyB0aW1lb3V0IDogMTAwMCwKICBoZWFkZXJzOiB7CiAgICBjb21tb246IHsKICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgJ0NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgJ0F1dGhvcml6YXRpb24nOiAnQmVhcmVyICcgKyB0b2tlbgogICAgfQogIH0KfSk7IC8vIEF4aW9zLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZSgoKSA9PiB7Ci8vIH0pCi8vICogQXhpb3MuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLnVzZSgocmVzcG9uc2UpID0+IHsKLy8gY29uc29sZS5sb2coInJlc3BvbnNlICIgKyByZXNwb25zZS5zdGF0dXMpCi8vICogcmV0dXJuIHJlc3BvbnNlOwovLyAgKiB9LCAoZXJyb3JzKSA9PiB7Ci8vICAqICAgbGV0IGVycm9yID0gZXJyb3JzLnJlc3BvbnNlCi8vICogICAgaWYoZXJyb3Iuc3RhdHVzID09PSA0MDEpIHsKLy8gY29uc3QgcGFzc3dvcmQgPSBwcm9tcHQoJ0VudGVyIHlvdXIgcGFzc3dvcmQgdG8gY29udGludWUnKQovLyBsZXQgcHJvbXB0ID0gcmVxdWlyZSgncGFzc3dvcmQtcHJvbXB0JykKLy8gbGV0IHBhc3N3b3JkID0gJ3Bhc3N3b3JkJzsKLy8gY29uc3QgdnVleERhdGEgPSBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCd2dWV4JykKLy8gbGV0IGRhdGEgPSBKU09OLnBhcnNlKHZ1ZXhEYXRhKQovLyBsZXQgZW1haWwgPSBkYXRhLnByb2ZpbGUucHJvZmlsZS5hdHRyaWJ1dGVzLmVtYWlsCi8vIGxldCBjcmVkZW50aWFsID0gW107Ci8vIGxldCBjcmVkZW50aWFsID0gewovLyAgICAgImVtYWlsIiA6IGVtYWlsLAovLyAgICAgJ3Bhc3N3b3JkJyA6IHBhc3N3b3JkCi8vIH0KLy8gY29uc29sZS5sb2coY3JlZGVudGlhbCkKLy8gQXhpb3MoewovLyAgICAgbWV0aG9kIDogJ1BPU1QnLAovLyAgICAgdXJsIDogJy9sb2dpbicsCi8vIH0pCi8vIEF1dGhTZXJ2aWNlLmxvZ2luKGNyZWRlbnRpYWwpLnRoZW4oCi8vICAgICBmZWVkID0+IHsKLy8gICAgICAgICBjb25zb2xlLmxvZyhmZWVkKQovLyAgICAgfSwKLy8gICAgIGVycm9yID0+IHsKLy8gICAgICAgICBjb25zb2xlLmxvZyhlcnJvcikKLy8gICAgIH0KLy8gKQoKLyoqCiAqIHVuYXV0aG9yaXplZCB1c2VyIGlzIGxvZ2dlZCBvdXQgYW5kIHJlZGlyZWN0ZWQgdG8gdGhlIHNhbWUgcGFnZSB1cG9uIGxvZ2luCiAqIAogKiBDbGVhciBleHBpcmVkIHRva2VuCiAqLwovLyBzZXNzaW9uU3RvcmFnZS5yZW1vdmVJdGVtKCd0b2tlbicpCi8vIEdldCBjdXJyZW50IHBhdGhuYW1lCi8vIGxldCByZWRpcmVjdFRvID0gd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lCi8vIFJlZGlyZWN0IHRvIHRoZSBwYXRobmFtZQovLyBzZWxmLmxvY2F0aW9uID0gcmVkaXJlY3RUbwovLyAqIH0KLy8gKiByZXR1cm4gZXJyb3IKLy8gaWYgKGVycm9yLnJlc3BvbnNlICYmIGVycm9yLnJlc3BvbnNlLmRhdGEpIHsKLy9hZGQgeW91ciBjb2RlCi8vICAgYWxlcnQoImVycm9yIDoiICsgZXJyb3IucmVzcG9uc2UuZGF0YSk7Ci8vIDxEaWFsb2cvPgovLyAgY29uc29sZS5sb2coZXJyb3IucmVzcG9uc2UuZGF0YSkKLy8gIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvci5yZXNwb25zZS5kYXRhKTsKLy8gfQovLyByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IubWVzc2FnZSk7Ci8vICogfSk7CgpleHBvcnQgZGVmYXVsdCBBeGlvczs="},{"version":3,"sources":["/var/www/html/1/medbook-dev-app-vue/src/services/Axios.js"],"names":["axios","access_token","sessionStorage","getItem","token","JSON","parse","Axios","create","baseURL","headers","common"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACI,IAAMC,YAAY,GAAGC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAArB;AACA,IAAIC,KAAK,GAAGH,YAAY,GAAGI,IAAI,CAACC,KAAL,CAAWL,YAAX,CAAH,GAA8B,IAAtD,C,CACA;;AAGA,IAAMM,KAAK,GAAGP,KAAK,CAACQ,MAAN,CAAa;AACvBC,EAAAA,OAAO,EAAE,4BADc;AAEvB;AACA;AACAC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,MAAM,EAAG;AAChB,gBAAW,kBADK;AAEhB,sBAAiB,kBAFD;AAGhB,uBAAkB,YAAWP;AAHb;AAAX;AAJc,CAAb,CAAd,C,CAaA;AAEA;AAIA;AACI;AACH;AACD;AACA;AACA;AACQ;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACZ;AACA;AACA;AACA;AACY;AAEA;AACA;AAEA;AACA;AAEJ;AACA;AACA;AACK;AACD;AACA;AACA;AACA;AACJ;AACA;AACL;;AACH,eAAeG,KAAf","sourcesContent":["import axios from 'axios'\n// import Prompt from 'password-prompt';\n// import AuthService from './AuthService';\n    const access_token = sessionStorage.getItem('token');\n    let token = access_token ? JSON.parse(access_token) : null\n    // var bearerToken = access_token ? data.token.access_token : null\n\n\n    const Axios = axios.create({\n        baseURL: 'http://localhost:8000/api/',\n        // baseURL : 'http://backend.nvc-invoice.com/',\n        // timeout : 1000,\n        headers: { common : {\n            'Accept' : 'application/json',\n            'Content-type' : 'application/json',\n            'Authorization' : 'Bearer '+ token\n        }}\n    });\n    \n\n\n    // Axios.interceptors.request.use(() => {\n\n    // })\n\n\n\n    // * Axios.interceptors.response.use((response) => {\n        // console.log(\"response \" + response.status)\n     // * return response;\n    //  * }, (errors) => {\n    //  *   let error = errors.response\n    // *    if(error.status === 401) {\n            // const password = prompt('Enter your password to continue')\n    \n            // let prompt = require('password-prompt')\n            // let password = 'password';\n\n\n            // const vuexData = sessionStorage.getItem('vuex')\n            // let data = JSON.parse(vuexData)\n            // let email = data.profile.profile.attributes.email\n            // let credential = [];\n            // let credential = {\n            //     \"email\" : email,\n            //     'password' : password\n            // }\n            // console.log(credential)\n\n            // Axios({\n            //     method : 'POST',\n            //     url : '/login',\n\n            // })\n            // AuthService.login(credential).then(\n            //     feed => {\n            //         console.log(feed)\n            //     },\n            //     error => {\n            //         console.log(error)\n            //     }\n            // )\n            /**\n             * unauthorized user is logged out and redirected to the same page upon login\n             * \n             * Clear expired token\n             */\n            // sessionStorage.removeItem('token')\n\n            // Get current pathname\n            // let redirectTo = window.location.pathname\n\n            // Redirect to the pathname\n            // self.location = redirectTo\n            \n        // * }\n        // * return error\n        // if (error.response && error.response.data) {\n             //add your code\n            //   alert(\"error :\" + error.response.data);\n            // <Dialog/>\n            //  console.log(error.response.data)\n            //  return Promise.reject(error.response.data);\n        // }\n        // return Promise.reject(error.message);\n   // * });\nexport default Axios;"]}]}
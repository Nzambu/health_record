{"remainingRequest":"/var/www/html/1/medbook-dev-app-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/1/medbook-dev-app-vue/src/auth/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/1/medbook-dev-app-vue/src/auth/Login.vue","mtime":1610626454628},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/cache-loader/dist/cjs.js","mtime":1610518510696},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/babel-loader/lib/index.js","mtime":1610518510640},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/cache-loader/dist/cjs.js","mtime":1610518510696},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/vue-loader/lib/index.js","mtime":1610518511764}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBBdXRoIGZyb20gJy4uL21vZGVscy9BdXRoJzsKaW1wb3J0IEF4aW9zIGZyb20gJy4uL3NlcnZpY2VzL0F4aW9zJzsKaW1wb3J0IEZvcmdvdFBhc3N3b3JkU2VydmljZSBmcm9tICcuLi9zZXJ2aWNlcy9Gb3Jnb3RQYXNzd29yZFNlcnZpY2UnOwpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lIDogJ0xvZ2luJywgICAgCiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIHVzZXIgOiBuZXcgQXV0aCgnJywgJycsICcnLCAnJyksCiAgICAgICAgICAgIHNob3dMb2dpbiA6IHRydWUsCiAgICAgICAgICAgIHNob3dGb3Jnb3RQYXNzd29yZCA6IGZhbHNlLAogICAgICAgICAgICBzaG93UmVnaXN0ZXIgOiBmYWxzZSwKICAgICAgICAgICAgc25hY2tiYXIgOiBmYWxzZSwKICAgICAgICAgICAgdmVydGljYWwgOiB0cnVlLAogICAgICAgICAgICBlcnJvcnMgOiAnJywKICAgICAgICB9CiAgICB9LAogICAgbWV0aG9kcyA6IHsgICAgICAgIAogICAgICAgIC8qKgogICAgICAgICAqIERlZmF1bHQgc2hvdwogICAgICAgICAqLwogICAgICAgIGhhbmRsZUNhbmNlbFNob3coKSB7CiAgICAgICAgICAgIHRoaXMuc2hvd0xvZ2luID0gdHJ1ZTsKICAgICAgICAgICAgdGhpcy5zaG93UmVnaXN0ZXIgPSBmYWxzZTsKICAgICAgICAgICAgdGhpcy5zaG93Rm9yZ290UGFzc3dvcmQgPSBmYWxzZTsKICAgICAgICB9LAoKICAgICAgICAvKioKICAgICAgICAgKiBTaG93IGZvcmdvdCBwYXNzd29yZCBmb3JtCiAgICAgICAgICovCiAgICAgICAgaGFuZGxlRm9yZ290UGFzc3dvcmQoKSB7CiAgICAgICAgICAgIHRoaXMuc2hvd0xvZ2luID0gIXRoaXMuc2hvd0xvZ2luOwogICAgICAgICAgICB0aGlzLnNob3dGb3Jnb3RQYXNzd29yZCA9ICF0aGlzLnNob3dGb3Jnb3RQYXNzd29yZAogICAgICAgIH0sCgogICAgICAgIC8qKgogICAgICAgICAqIFNob3cgcmVnaXN0ZXJhdGlvbiBmb3JtCiAgICAgICAgICovCiAgICAgICAgaGFuZGxlUmVnaXN0ZXIoKSB7CiAgICAgICAgICAgIHRoaXMuc2hvd0xvZ2luID0gIXRoaXMuc2hvd0xvZ2luOwogICAgICAgICAgICB0aGlzLnNob3dSZWdpc3RlciA9ICF0aGlzLnNob3dSZWdpc3RlcgogICAgICAgIH0sCgogICAgICAgIC8qKgogICAgICAgICAqIEF1dGhlbnRpY2F0ZSB1c2VyCiAgICAgICAgICovCiAgICAgICAgYXN5bmMgaGFuZGxlTG9naW4oKSB7CiAgICAgICAgICAgIGNvbnN0IGludmFsaWQgPSBhd2FpdCB0aGlzLiRyZWZzLmxvZ2luT2JzZXJ2ZXIudmFsaWRhdGUoKTsKICAgICAgICAgICAgaWYoaW52YWxpZCkgewogICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coImt1a3UgZGFuY2UiKQogICAgICAgICAgICB9ICAKICAgICAgICAgICAgCgogICAgICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnYXV0aC9sb2dpbicsIHRoaXMudXNlcikKICAgICAgICAgICAgLnRoZW4oCiAgICAgICAgICAgICAgICAocmVzcG9uc2UpID0+IHsKICAgICAgICAgICAgICAgIGxldCBkYXRhID0gcmVzcG9uc2UKCiAgICAgICAgICAgICAgICAvKioKICAgICAgICAgICAgICAgICAqIFN1Y2Nlc3NmdWxseSBsb2dnZWQgaW4KICAgICAgICAgICAgICAgICAqLwogICAgICAgICAgICAgICAgaWYocmVzcG9uc2UuZGF0YSkgewogICAgICAgICAgICAgICAgICAgIGxldCB0b2tlbkJlYXJlciA9IHJlc3BvbnNlLmRhdGEKICAgICAgICAgICAgICAgICAgICBsZXQgdG9rZW4gPSB0b2tlbkJlYXJlci5hdHRyaWJ1dGVzLmFjY2Vzc190b2tlbgogICAgICAgICAgICAgICAgICAgIGlmKHRva2VuKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFN0b3JlIHRva2VuIGluIHNlc3Npb24gc3RvcmFnZQogICAgICAgICAgICAgICAgICAgICAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKCd0b2tlbicsIEpTT04uc3RyaW5naWZ5KHRva2VuKSk7CiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFNldCB0aGUgYXV0aG9yaXphdGlvbiBiZWFyZXIgdG9rZW4KICAgICAgICAgICAgICAgICAgICAgICAgQXhpb3MuZGVmYXVsdHMuaGVhZGVycy5jb21tb24uQXV0aG9yaXphdGlvbiA9ICdCZWFyZXIgJysgdG9rZW4KICAgICAgICAgICAgICAgICAgICAgICAgLy8gUmVkaXJlY3QgdG8gdGhlIHJlcXVlc3RlZCBsaW5rIG9yIHByb2ZpbGUKICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHBhdGggPSB0aGlzLiRyb3V0ZS5xdWVyeS5mcm9tCiAgICAgICAgICAgICAgICAgICAgICAgIGlmKHBhdGggPT09ICcvJykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goJy9wYXRpZW50JykKICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHBhdGggfHwgJy9wYXRpZW50JykKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0gCiAgICAgICAgICAgICAgICB9IGVsc2UgewoKICAgICAgICAgICAgICAgICAgICAvKioKICAgICAgICAgICAgICAgICAgICAgKiBVc2VyIGRvZXMgbm90IGV4aXN0IG9yIGl0cyBpbnZhbGlkCiAgICAgICAgICAgICAgICAgICAgICovCiAgICAgICAgICAgICAgICAgICAgaWYocmVzcG9uc2UucmVzcG9uc2UuZGF0YS5lcnJvcnMpIHsKICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGVycm9yID0gZGF0YS5yZXNwb25zZS5kYXRhLmVycm9ycwogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5oYW5kbGVFcnJvcnNGcm9tQVBJKGVycm9yKQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAvKioKICAgICAgICAgICAgICAgICAgICAgKiBQYXNzd29yZCBpcyB3cm9uZwogICAgICAgICAgICAgICAgICAgICAqLwogICAgICAgICAgICAgICAgICAgIGlmKHJlc3BvbnNlLnJlc3BvbnNlLmRhdGEuZXJyb3IuY29kZSkgewogICAgICAgICAgICAgICAgICAgICAgICBsZXQgbWVzc2FnZSA9IGRhdGEucmVzcG9uc2UuZGF0YS5lcnJvci5kZXRhaWwgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICBsZXQgZXJyb3IgPSAgW10KICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3IucHVzaChbbWVzc2FnZV0pCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmhhbmRsZUVycm9yc0Zyb21BUEkoZXJyb3IpCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIChmYWlsZWQpID0+IHsKICAgICAgICAgICAgICAgICAgICBsZXQgbWVzc2FnZSA9IGZhaWxlZC5tZXNzYWdlcyAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIGxldCBlcnJvciA9ICBbXQogICAgICAgICAgICAgICAgICAgIGVycm9yLnB1c2goW21lc3NhZ2VdKQogICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmhhbmRsZUVycm9yc0Zyb21BUEkoZXJyb3IpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICkKICAgICAgICB9LAoKICAgICAgICAvKioKICAgICAgICAgKiBSZWdpc3RlciBuZXcgdXNlcgogICAgICAgICAqLwogICAgICAgIGFzeW5jIGhhbmRsZVJlZ2lzdHJhdGlvbigpIHsKICAgICAgICAgICAgYXdhaXQgdGhpcy4kcmVmcy5yZWdpc3Rlck9ic2VydmVyLnZhbGlkYXRlKCkudGhlbigKICAgICAgICAgICAgICAgIHBhc3NWYWxpZGF0aW9uID0+IHsKICAgICAgICAgICAgICAgICAgICBpZihwYXNzVmFsaWRhdGlvbiA9PT0gdHJ1ZSkKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHBhc3NWYWxpZGF0aW9uKQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKTsKICAgICAgICB9LAoKICAgICAgICAvKioKICAgICAgICAgKiBTZW5kIHJlc2V0IHBhc3N3b3JkIGVtYWlsCiAgICAgICAgICovCiAgICAgICAgaGFuZGxlUmVzZXRQYXNzd29yZCgpIHsKICAgICAgICAgICAgdGhpcy4kcmVmcy5mb3Jnb3RQYXNzd29yZE9ic2VydmVyLnZhbGlkYXRlKCkudGhlbigKICAgICAgICAgICAgICAgIHN1Y2Nlc3MgPT4gewogICAgICAgICAgICAgICAgICAgIGlmKHN1Y2Nlc3MgPT09IHRydWUpCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAvLyB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnYXV0aC9zZW5kUmVzZXRQYXNzd29yZEVtYWlsJywgdGhpcy51c2VyKQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gRm9yZ290UGFzc3dvcmRTZXJ2aWNlLnNlbmRSZXNldFBhc3N3b3JkRW1haWwodGhpcy51c2VyKQogICAgICAgICAgICAgICAgICAgICAgICAudGhlbigKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZlZWRiYWNrID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgc3RhdHVzID0gZmVlZGJhY2suc3RhdHVzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYoc3RhdHVzID09PSAyMDApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhmZWVkYmFjaykKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYoc3RhdHVzID09PSA0MjIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGVycm9ycyA9IGZlZWRiYWNrLmRhdGEuZXJyb3JzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmhhbmRsZUVycm9yc0Zyb21BUEkoZXJyb3JzKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKTsKICAgICAgICB9LAoKICAgICAgICAvKioKICAgICAgICAgKiBSZW5kZXIgZXJyb3JzIGZyb20gdGhlIEFQSQogICAgICAgICAqLwogICAgICAgIGhhbmRsZUVycm9yc0Zyb21BUEkoZXJyb3IpCiAgICAgICAgewogICAgICAgICAgICB0aGlzLmVycm9ycyA9IGVycm9yCiAgICAgICAgICAgIHRoaXMuc25hY2tiYXIgPSB0cnVlCiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"Login.vue","sourceRoot":"src/auth","sourcesContent":["<template>\n    <v-container \n        class=\"blue\"\n        fluid\n        fill-height\n    >\n        <v-row>\n            <v-col \n                offset-lg=\"4\"\n                lg=\"4\"\n            >\n                <v-card>\n                    <v-card-text class=\"pt-10\">\n                        <h1 class=\"text-center primary--text\">Authentication</h1>\n                    </v-card-text>\n                    <div class=\"pt-15\">\n                        <v-snackbar\n                            color=\"red\"\n                            top\n                            v-model=\"snackbar\"\n                            timeout=\"-1\"\n                            tag=\"div\"\n                        >\n                            <v-list-item two-line \n                                v-for=\"(error, index) in errors\"\n                                :key=\"index\"\n                            >\n                                <v-list-item-content>\n                                    <v-list-item-title v-text=\"error[0]\"></v-list-item-title>\n                                </v-list-item-content>\n                            </v-list-item>\n                        <template v-slot:action=\"{ attrs }\">\n                            <v-btn\n                            color=\"red\"\n                            text\n                            v-bind=\"attrs\"\n                            @click=\"snackbar = false\"\n                            >\n                                <v-icon class=\"white--text\">mdi-close</v-icon>\n                            </v-btn>\n                        </template>\n                    </v-snackbar>\n                    </div>\n                    <v-row class=\"px-10 pb-5\">\n                        <v-col lg=\"12\">\n                            <validation-observer\n                                ref=\"loginObserver\"\n                            >\n                                <v-form \n                                    v-if=\"showLogin\"\n                                >                                \n                                    <validation-provider\n                                        v-slot=\"{errors}\"\n                                        name=\"Email\"\n                                        rules=\"required\"\n                                    >\n                                        <v-text-field\n                                            v-model=\"user.email\"\n                                            :error-messages=\"errors\"\n                                            label=\"Email\"\n                                            required\n                                        ></v-text-field>\n                                    </validation-provider>\n                                    <validation-provider\n                                        v-slot=\"{errors}\"\n                                        name=\"Password\"\n                                        rules=\"required\"\n                                    >\n                                        <v-text-field\n                                            v-model=\"user.password\"\n                                            :error-messages=\"errors\"\n                                            label=\"Password\"\n                                            type=\"password\"\n                                            required\n                                        ></v-text-field>\n                                    </validation-provider>\n                                    <v-row class=\"pt-5\">\n                                        <v-col lg=\"12\">\n                                            <v-btn block                                                \n                                                class=\"success text-capitalize\"\n                                                @click=\"handleLogin\"\n                                            >Login</v-btn>\n                                        </v-col>\n                                    </v-row>\n                                    <v-row \n                                        class=\"py-5\"\n                                    >\n                                        <v-col \n                                            lg=\"6\"\n                                            class=\"pt-0\"\n                                        >\n                                            <p class=\"text-left py-0 pl-0\" @click=\"handleForgotPassword\"><small>Forgot password? <span class=\"primary--text\">Click here</span></small></p>\n                                        </v-col> \n                                        <v-col \n                                            lg=\"6\"\n                                            class=\"pt-0\"\n                                        >\n                                            <p class=\"text-right py-0 pl-0\" @click=\"handleRegister\"><small><span class=\"primary--text\">Register</span></small></p>\n                                        </v-col> \n                                    </v-row>\n                                </v-form>\n                            </validation-observer>\n                            <v-form v-if=\"showRegister\">\n                                <validation-observer\n                                    ref=\"registerObserver\"\n                                >\n                                    <validation-provider\n                                        v-slot=\"{errors}\"\n                                        name=\"First Name\"\n                                        rules=\"required\"\n                                    >\n                                        <v-text-field\n                                            v-model=\"user.firstName\"\n                                            :error-messages=\"errors\"\n                                            label=\"First Name\"\n                                            required\n                                        ></v-text-field>\n                                    </validation-provider>\n                                    <validation-provider\n                                        v-slot=\"{errors}\"\n                                        name=\"Last Name\"\n                                        rules=\"required\"\n                                    >\n                                        <v-text-field\n                                            v-model=\"user.lastName\"\n                                            :error-messages=\"errors\"\n                                            label=\"Last Name\"\n                                            required\n                                        ></v-text-field>\n                                    </validation-provider>\n                                    <validation-provider\n                                        v-slot=\"{errors}\"\n                                        name=\"Email\"\n                                        rules=\"required\"\n                                    >\n                                        <v-text-field\n                                            v-model=\"user.email\"\n                                            :error-messages=\"errors\"\n                                            label=\"Email\"\n                                            required\n                                        ></v-text-field>\n                                    </validation-provider>\n                                    <validation-provider\n                                        v-slot=\"{errors}\"\n                                        name=\"Password\"\n                                        rules=\"required\"\n                                    >\n                                        <v-text-field\n                                            v-model=\"user.password\"\n                                            :error-messages=\"errors\"\n                                            label=\"Password\"\n                                            required\n                                        ></v-text-field>\n                                    </validation-provider>\n                                    <v-row class=\"pt-5\">\n                                        <v-col lg=\"6\">\n                                            <v-btn block\n                                                class=\"grey text-capitalize\"\n                                                @click=\"handleCancelShow\"\n                                            >Cancel</v-btn>\n                                        </v-col>\n                                        <v-col lg=\"6\">\n                                            <v-btn block\n                                                class=\"success text-capitalize\"\n                                                @click=\"handleRegistration\"\n                                            >Register</v-btn>\n                                        </v-col>\n                                    </v-row>\n                                </validation-observer>\n                            </v-form>\n                            <v-form v-if=\"showForgotPassword\">\n                                    <validation-observer\n                                        ref=\"forgotPasswordObserver\"\n                                        lazy-validation\n                                    >                                        \n                                        <validation-provider\n                                            v-slot=\"{errors}\"\n                                            name=\"Email\"\n                                            rules=\"required\"\n                                        >\n                                            <v-text-field\n                                                v-model=\"user.email\"\n                                                :error-messages=\"errors\"\n                                                label=\"Email\"\n                                                required\n                                            ></v-text-field>\n                                        </validation-provider>                                        \n                                        <v-row class=\"pt-5\">\n                                            <v-col lg=\"6\">\n                                            <v-btn block\n                                                class=\"grey text-capitalize\"\n                                                @click=\"handleCancelShow\"\n                                            >Cancel</v-btn>\n                                        </v-col>\n                                            <v-col lg=\"6\">\n                                                <v-btn block\n                                                    class=\"success text-capitalize\"\n                                                    @click=\"handleResetPassword\"\n                                                >Send Reset Email</v-btn>\n                                            </v-col>\n                                        </v-row>\n                                    </validation-observer>\n                                </v-form>\n                        </v-col>\n                    </v-row>\n                </v-card>\n            </v-col>\n        </v-row>\n    </v-container>\n</template>\n<script>\nimport Auth from '../models/Auth';\nimport Axios from '../services/Axios';\nimport ForgotPasswordService from '../services/ForgotPasswordService';\nexport default {\n    name : 'Login',    \n    data() {\n        return {\n            user : new Auth('', '', '', ''),\n            showLogin : true,\n            showForgotPassword : false,\n            showRegister : false,\n            snackbar : false,\n            vertical : true,\n            errors : '',\n        }\n    },\n    methods : {        \n        /**\n         * Default show\n         */\n        handleCancelShow() {\n            this.showLogin = true;\n            this.showRegister = false;\n            this.showForgotPassword = false;\n        },\n\n        /**\n         * Show forgot password form\n         */\n        handleForgotPassword() {\n            this.showLogin = !this.showLogin;\n            this.showForgotPassword = !this.showForgotPassword\n        },\n\n        /**\n         * Show registeration form\n         */\n        handleRegister() {\n            this.showLogin = !this.showLogin;\n            this.showRegister = !this.showRegister\n        },\n\n        /**\n         * Authenticate user\n         */\n        async handleLogin() {\n            const invalid = await this.$refs.loginObserver.validate();\n            if(invalid) {\n                // console.log(\"kuku dance\")\n            }  \n            \n\n            this.$store.dispatch('auth/login', this.user)\n            .then(\n                (response) => {\n                let data = response\n\n                /**\n                 * Successfully logged in\n                 */\n                if(response.data) {\n                    let tokenBearer = response.data\n                    let token = tokenBearer.attributes.access_token\n                    if(token) {\n                        // Store token in session storage\n                        sessionStorage.setItem('token', JSON.stringify(token));\n                        // Set the authorization bearer token\n                        Axios.defaults.headers.common.Authorization = 'Bearer '+ token\n                        // Redirect to the requested link or profile\n                        let path = this.$route.query.from\n                        if(path === '/') {\n                            this.$router.push('/patient')\n                        } else {\n                            this.$router.push(path || '/patient')\n                        }\n                    } \n                } else {\n\n                    /**\n                     * User does not exist or its invalid\n                     */\n                    if(response.response.data.errors) {\n                        let error = data.response.data.errors\n                        return this.handleErrorsFromAPI(error)\n                    }\n                    \n                    /**\n                     * Password is wrong\n                     */\n                    if(response.response.data.error.code) {\n                        let message = data.response.data.error.detail                    \n                        let error =  []\n                        error.push([message])\n                        return this.handleErrorsFromAPI(error)\n                    }\n                }\n                },\n                (failed) => {\n                    let message = failed.messages                  \n                    let error =  []\n                    error.push([message])\n                    return this.handleErrorsFromAPI(error)\n                }\n            )\n        },\n\n        /**\n         * Register new user\n         */\n        async handleRegistration() {\n            await this.$refs.registerObserver.validate().then(\n                passValidation => {\n                    if(passValidation === true)\n                    {\n                        console.log(passValidation)\n                    }\n                }\n            );\n        },\n\n        /**\n         * Send reset password email\n         */\n        handleResetPassword() {\n            this.$refs.forgotPasswordObserver.validate().then(\n                success => {\n                    if(success === true)\n                    {\n                        // this.$store.dispatch('auth/sendResetPasswordEmail', this.user)\n                        return ForgotPasswordService.sendResetPasswordEmail(this.user)\n                        .then(\n                            feedback => {\n                                let status = feedback.status\n                                if(status === 200)\n                                {\n                                    console.log(feedback)\n                                }\n                                if(status === 422) {\n                                    let errors = feedback.data.errors\n                                    return this.handleErrorsFromAPI(errors)\n                                }\n                            }\n                        )\n                    }\n                }\n            );\n        },\n\n        /**\n         * Render errors from the API\n         */\n        handleErrorsFromAPI(error)\n        {\n            this.errors = error\n            this.snackbar = true\n        }\n    }\n}\n</script>"]}]}
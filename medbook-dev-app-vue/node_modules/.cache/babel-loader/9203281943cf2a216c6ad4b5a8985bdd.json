{"remainingRequest":"/var/www/html/1/medbook-dev-app-vue/node_modules/babel-loader/lib/index.js!/var/www/html/1/medbook-dev-app-vue/node_modules/eslint-loader/index.js??ref--13-0!/var/www/html/1/medbook-dev-app-vue/src/store/AuthModule.js","dependencies":[{"path":"/var/www/html/1/medbook-dev-app-vue/src/store/AuthModule.js","mtime":1611307024596},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/cache-loader/dist/cjs.js","mtime":1610518510696},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/babel-loader/lib/index.js","mtime":1610518510640},{"path":"/var/www/html/1/medbook-dev-app-vue/node_modules/eslint-loader/index.js","mtime":1610518511248}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBBdXRoU2VydmljZSBmcm9tICcuLi9zZXJ2aWNlcy9BdXRoU2VydmljZSc7CnZhciBpbml0aWFsU3RhdGUgPSB7CiAgcHJvZmlsZTogbnVsbCwKICBsb2dnZWRJbjogbnVsbCwKICB0b2tlbjogbnVsbCwKICBhY2Nlc3NUb2tlbjogbnVsbAp9OwpleHBvcnQgdmFyIGF1dGggPSB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogaW5pdGlhbFN0YXRlLAogIGFjdGlvbnM6IHsKICAgIC8qKgogICAgICogTG9naW4gYSB1c2VyCiAgICAgKiAKICAgICAqIEBwYXJhbSB7Kn0gcGFyYW0wIAogICAgICogQHBhcmFtIHsqfSB1c2VyIAogICAgICovCiAgICBsb2dpbjogZnVuY3Rpb24gbG9naW4oX3JlZiwgdXNlcikgewogICAgICB2YXIgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgIHJldHVybiBBdXRoU2VydmljZS5sb2dpbih1c2VyKS50aGVuKGZ1bmN0aW9uIChhY2Nlc3NUb2tlbikgewogICAgICAgIGlmIChhY2Nlc3NUb2tlbi5kYXRhLmF0dHJpYnV0ZXMgIT09IHVuZGVmaW5lZCkgewogICAgICAgICAgY29tbWl0KCdsb2dpblN1Y2Nlc3MnLCBhY2Nlc3NUb2tlbi5kYXRhKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoYWNjZXNzVG9rZW4pOwogICAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBjb21taXQoJ2xvZ2luRmFpbHVyZScpOwogICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7CiAgICAgIH0pOwogICAgfSwKCiAgICAvKioKICAgICAqIFNlbmQgcmVzZXQgdXNlciBwYXNzd29yZCBlbWFpbAogICAgICogCiAgICAgKiBAcGFyYW0geyp9IHBhcmFtMCAKICAgICAqIEBwYXJhbSB7Kn0gZW1haWwgCiAgICAgKi8KICAgIHNlbmRSZXNldFBhc3N3b3JkRW1haWw6IGZ1bmN0aW9uIHNlbmRSZXNldFBhc3N3b3JkRW1haWwoX3JlZjIsIGVtYWlsKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgICAgIGNvbnNvbGUubG9nKGVtYWlsKTsKICAgICAgcmV0dXJuIEF1dGhTZXJ2aWNlLnNlbmRSZXNldFBhc3N3b3JkRW1haWwoZW1haWwpLnRoZW4oZnVuY3Rpb24gKGVtYWlsKSB7CiAgICAgICAgY29tbWl0KCcnKTsKICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGVtYWlsKTsKICAgICAgfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKICAgICAgfSk7CiAgICB9LAoKICAgIC8qKgogICAgICogR2V0IGF1dGhlbnRpY2F0ZWQgdXNlciBwcm9maWxlCiAgICAgKiAKICAgICAqIEBwYXJhbSB7Kn0gcGFyYW0wIAogICAgICovCiAgICBwcm9maWxlOiBmdW5jdGlvbiBwcm9maWxlKF9yZWYzKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmMy5jb21taXQ7CgogICAgICAvKioKICAgICAgICogSXQgdXNlcyBiZWFyZXIgdG9rZW4gdG8gZ2V0IGF1dGhlbnRpY2F0ZWQgdXNlcgogICAgICAgKi8KICAgICAgcmV0dXJuIEF1dGhTZXJ2aWNlLnByb2ZpbGUoKS50aGVuKGZ1bmN0aW9uICh1c2VyUHJvZmlsZSkgewogICAgICAgIHZhciBwcm9maWxlID0gdXNlclByb2ZpbGUuZGF0YTsKICAgICAgICBjb21taXQoJ3Byb2ZpbGVTdWNjZXNzJywgcHJvZmlsZSk7CiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShwcm9maWxlKTsKICAgICAgfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgIGNvbW1pdCgncHJvZmlsZUZhaWwnLCBlcnJvcik7CiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShlcnJvcik7CiAgICAgIH0pOwogICAgfSwKCiAgICAvKioKICAgICAqIFVwZGF0ZSB1c2VyIHByb2ZpbGUgZGF0YQogICAgICogCiAgICAgKiBAcGFyYW0geyp9IHBhcmFtMCAKICAgICAqIEBwYXJhbSB7Kn0gcHJvZmlsZSAKICAgICAqLwogICAgdXBkYXRlUHJvZmlsZTogZnVuY3Rpb24gdXBkYXRlUHJvZmlsZShfcmVmNCwgbmV3RGF0YSkgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjQuY29tbWl0OwoKICAgICAgLyoqCiAgICAgICAqIFVwZGF0ZSB1c2VyIHByb2ZpbGUKICAgICAgICovCiAgICAgIHJldHVybiBBdXRoU2VydmljZS51cGRhdGVQcm9maWxlKG5ld0RhdGEpLnRoZW4oZnVuY3Rpb24gKHByb2ZpbGUpIHsKICAgICAgICB2YXIgdXBkYXRlZFByb2ZpbGVEYXRhID0gcHJvZmlsZTsKICAgICAgICBjb21taXQoJ3VwZGF0ZVByb2ZpbGUnLCB1cGRhdGVkUHJvZmlsZURhdGEuZGF0YSk7CiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh1cGRhdGVkUHJvZmlsZURhdGEpOwogICAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICByZXR1cm4gZXJyb3I7CiAgICAgIH0pOwogICAgfSwKCiAgICAvKioKICAgICAqIExvdWcgb3V0IHRoZSB1c2VyCiAgICAgKiAKICAgICAqIEBwYXJhbSB7Kn0gcGFyYW0wIAogICAgICovCiAgICBsb2dvdXQ6IGZ1bmN0aW9uIGxvZ291dChfcmVmNSkgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjUuY29tbWl0OwogICAgICBBdXRoU2VydmljZS5sb2dvdXQoKTsKICAgICAgY29tbWl0KCdsb2dvdXQnKTsKICAgIH0KICB9LAogIG11dGF0aW9uczogewogICAgLyoqCiAgICAgKiBTZXQgbG9nZ2VpbiwgdG9rZW4gYW5kIGFjY2VzcyB0b2tlbgogICAgICogCiAgICAgKiBAcGFyYW0geyp9IHN0YXRlIAogICAgICogQHBhcmFtIHsqfSBhY2Nlc3NUb2tlbiAKICAgICAqLwogICAgbG9naW5TdWNjZXNzOiBmdW5jdGlvbiBsb2dpblN1Y2Nlc3Moc3RhdGUsIGFjY2Vzc1Rva2VuKSB7CiAgICAgIHN0YXRlLmxvZ2dlZEluID0gdHJ1ZTsKICAgICAgc3RhdGUudG9rZW4gPSBhY2Nlc3NUb2tlbi5hdHRyaWJ1dGVzLmFjY2Vzc190b2tlbjsKICAgICAgc3RhdGUuYWNjZXNzVG9rZW4gPSBhY2Nlc3NUb2tlbi5hdHRyaWJ1dGVzOwogICAgfSwKCiAgICAvKioKICAgICAqIEhhbmRsZSBsb2dpbiBmYWlsdXJlCiAgICAgKiAKICAgICAqIEBwYXJhbSB7Kn0gc3RhdGUgCiAgICAgKi8KICAgIGxvZ2luRmFpbHVyZTogZnVuY3Rpb24gbG9naW5GYWlsdXJlKHN0YXRlKSB7CiAgICAgIHN0YXRlLnVzZXIgPSBudWxsOwogICAgfSwKCiAgICAvKioKICAgICAqIEhhbmRsZSBsYW9kZWQgdXNlciBwcm9maWxlCiAgICAgKiBAcGFyYW0geyp9IHN0YXRlIAogICAgICogQHBhcmFtIHsqfSBwcm9maWxlIAogICAgICovCiAgICBwcm9maWxlU3VjY2VzczogZnVuY3Rpb24gcHJvZmlsZVN1Y2Nlc3Moc3RhdGUsIHByb2ZpbGUpIHsKICAgICAgc3RhdGUucHJvZmlsZSA9IHByb2ZpbGU7CiAgICB9LAoKICAgIC8qKgogICAgICogSGFuZGxlIHVwZGF0ZSB1c2VyIHByb2ZpbGUKICAgICAqIAogICAgICogQHBhcmFtIHsqfSBzdGF0ZSAKICAgICAqIEBwYXJhbSB7Kn0gbmV3UHJvZmlsZSAKICAgICAqLwogICAgdXBkYXRlUHJvZmlsZTogZnVuY3Rpb24gdXBkYXRlUHJvZmlsZShzdGF0ZSwgbmV3UHJvZmlsZSkgewogICAgICBzdGF0ZS5wcm9maWxlID0gbmV3UHJvZmlsZTsKICAgIH0sCgogICAgLyoqCiAgICAgKiBIYW5kbGUgZmFpbGVkIHRvIGxvYWQgcHJvZmlsZQogICAgICovCiAgICBwcm9maWxlRmFpbDogZnVuY3Rpb24gcHJvZmlsZUZhaWwoc3RhdGUsIGVycm9yKSB7CiAgICAgIHN0YXRlLnByb2ZpbGVFcnJvciA9IGVycm9yOwogICAgfSwKCiAgICAvKioKICAgICAqIEhhbmRsZSBsb2dvdXQKICAgICAqIAogICAgICogQHBhcmFtIHsqfSBzdGF0ZSAKICAgICAqLwogICAgbG9nb3V0OiBmdW5jdGlvbiBsb2dvdXQoc3RhdGUpIHsKICAgICAgc3RhdGUubG9nZ2VkSW4gPSBmYWxzZTsKICAgICAgc3RhdGUudG9rZW4gPSBudWxsOwogICAgICBzdGF0ZS5hY2Nlc3NUb2tlbiA9IG51bGw7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/var/www/html/1/medbook-dev-app-vue/src/store/AuthModule.js"],"names":["AuthService","initialState","profile","loggedIn","token","accessToken","auth","namespaced","state","actions","login","user","commit","then","data","attributes","undefined","Promise","resolve","error","reject","sendResetPasswordEmail","email","console","log","userProfile","updateProfile","newData","updatedProfileData","logout","mutations","loginSuccess","access_token","loginFailure","profileSuccess","newProfile","profileFail","profileError"],"mappings":"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","sourcesContent":["import AuthService from '../services/AuthService';\nconst initialState = {\n    profile : null,\n    loggedIn : null,\n    token : null,\n    accessToken : null,\n}\nexport const auth = {\n    namespaced: true,\n    state: initialState,\n    actions: {\n\n        /**\n         * Login a user\n         * \n         * @param {*} param0 \n         * @param {*} user \n         */\n        login({ commit }, user) { \n            return AuthService.login(user).then(\n                accessToken => {\n                    if(accessToken.data.attributes !== undefined) {\n                        commit('loginSuccess', accessToken.data);\n                    }\n                    return Promise.resolve(accessToken);\n                },\n                error => {\n                    commit('loginFailure');\n                    return Promise.reject(error);\n                }\n            );\n        },\n\n        /**\n         * Send reset user password email\n         * \n         * @param {*} param0 \n         * @param {*} email \n         */\n        sendResetPasswordEmail({ commit }, email) {\n            console.log(email)\n            return AuthService.sendResetPasswordEmail(email).then(\n                email => {\n                    commit('');\n                    return Promise.resolve(email)\n                },\n                error => {\n                    return Promise.reject(error)\n                }\n            );\n        },\n        \n        /**\n         * Get authenticated user profile\n         * \n         * @param {*} param0 \n         */\n        profile({ commit }) {\n\n            /**\n             * It uses bearer token to get authenticated user\n             */\n            return AuthService.profile().then(\n                userProfile => {\n                    let profile = userProfile.data\n                    commit('profileSuccess', profile)\n                    return Promise.resolve(profile)\n                },\n                error => {\n                    console.log(error)\n                    commit('profileFail', error)\n                    return Promise.resolve(error)\n                }\n            );\n        },\n\n        /**\n         * Update user profile data\n         * \n         * @param {*} param0 \n         * @param {*} profile \n         */\n        updateProfile({ commit }, newData) {\n\n            /**\n             * Update user profile\n             */\n            return AuthService.updateProfile(newData)\n                .then(\n                profile => {\n                    let updatedProfileData = profile;\n                    commit('updateProfile', updatedProfileData.data);\n                    return Promise.resolve(updatedProfileData);\n                },\n                error => {\n                    return error\n                });\n        },\n\n        /**\n         * Loug out the user\n         * \n         * @param {*} param0 \n         */\n        logout({ commit }) {\n            AuthService.logout();\n            commit('logout');\n        },\n    },\n    mutations: {\n\n        /**\n         * Set loggein, token and access token\n         * \n         * @param {*} state \n         * @param {*} accessToken \n         */\n        loginSuccess(state, accessToken) {\n            state.loggedIn = true;\n            state.token = accessToken.attributes.access_token\n            state.accessToken = accessToken.attributes;\n        },\n\n        /**\n         * Handle login failure\n         * \n         * @param {*} state \n         */\n        loginFailure(state) {\n            state.user = null;\n        },\n\n        /**\n         * Handle laoded user profile\n         * @param {*} state \n         * @param {*} profile \n         */\n        profileSuccess(state, profile) {\n            state.profile = profile\n        },\n\n        /**\n         * Handle update user profile\n         * \n         * @param {*} state \n         * @param {*} newProfile \n         */\n        updateProfile(state, newProfile) {\n            state.profile = newProfile\n        },\n\n        /**\n         * Handle failed to load profile\n         */\n        profileFail(state, error) {\n            state.profileError = error\n        },\n\n        /**\n         * Handle logout\n         * \n         * @param {*} state \n         */\n        logout(state) {\n            state.loggedIn = false;\n            state.token = null;\n            state.accessToken = null;\n        }\n    }\n}\n"]}]}
{"remainingRequest":"/var/www/html/medbook-dev-app-vue/node_modules/babel-loader/lib/index.js!/var/www/html/medbook-dev-app-vue/node_modules/eslint-loader/index.js??ref--13-0!/var/www/html/medbook-dev-app-vue/src/store/AuthModule.js","dependencies":[{"path":"/var/www/html/medbook-dev-app-vue/src/store/AuthModule.js","mtime":1610357226528},{"path":"/var/www/html/medbook-dev-app-vue/node_modules/cache-loader/dist/cjs.js","mtime":1608645174000},{"path":"/var/www/html/medbook-dev-app-vue/node_modules/babel-loader/lib/index.js","mtime":1608645174000},{"path":"/var/www/html/medbook-dev-app-vue/node_modules/eslint-loader/index.js","mtime":1608645174000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBBdXRoU2VydmljZSBmcm9tICcuLi9zZXJ2aWNlcy9BdXRoU2VydmljZSc7IC8vIGNvbnN0IHRva2VuID0gSlNPTi5wYXJzZShzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpKTsKLy8gY29uc29sZS5sb2codG9rZW4pCi8vIGxldCBzdGF0dXMgPSB0b2tlbiA/IHsgCi8vICAgICAgICAgc3RhdHVzOiB7IGxvZ2dlZEluOiB0cnVlLCB0b2tlbiA6IHRva2VuIH0KLy8gICAgIH0gOiB7IAovLyAgICAgICAgIHN0YXR1czogeyBsb2dnZWRJbjogZmFsc2UsdG9rZW4gOiBudWxsIH0KLy8gICAgIH0KCnZhciBpbml0aWFsU3RhdGUgPSB7CiAgcHJvZmlsZTogbnVsbCwKICBsb2dnZWRJbjogbnVsbCwKICB0b2tlbjogbnVsbCwKICBhY2Nlc3NUb2tlbjogbnVsbAp9OwpleHBvcnQgdmFyIGF1dGggPSB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogaW5pdGlhbFN0YXRlLAogIGFjdGlvbnM6IHsKICAgIGxvZ2luOiBmdW5jdGlvbiBsb2dpbihfcmVmLCB1c2VyKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgcmV0dXJuIEF1dGhTZXJ2aWNlLmxvZ2luKHVzZXIpLnRoZW4oZnVuY3Rpb24gKGFjY2Vzc1Rva2VuKSB7CiAgICAgICAgY29tbWl0KCdsb2dpblN1Y2Nlc3MnLCBhY2Nlc3NUb2tlbi5kYXRhKTsKICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGFjY2Vzc1Rva2VuKTsKICAgICAgfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgIGNvbW1pdCgnbG9naW5GYWlsdXJlJyk7CiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKICAgICAgfSk7CiAgICB9LAogICAgcHJvZmlsZTogZnVuY3Rpb24gcHJvZmlsZShfcmVmMikgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICByZXR1cm4gQXV0aFNlcnZpY2UucHJvZmlsZSgpLnRoZW4oZnVuY3Rpb24gKHVzZXJQcm9maWxlKSB7CiAgICAgICAgdmFyIHByb2ZpbGUgPSB1c2VyUHJvZmlsZS5kYXRhOwogICAgICAgIGNvbW1pdCgncHJvZmlsZVN1Y2Nlc3MnLCBwcm9maWxlKTsKICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHByb2ZpbGUpOwogICAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgICAgY29tbWl0KCdwcm9maWxlRmFpbCcsIGVycm9yKTsKICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGVycm9yKTsKICAgICAgfSk7CiAgICB9LAogICAgbG9nb3V0OiBmdW5jdGlvbiBsb2dvdXQoX3JlZjMpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWYzLmNvbW1pdDsKICAgICAgQXV0aFNlcnZpY2UubG9nb3V0KCk7CiAgICAgIGNvbW1pdCgnbG9nb3V0Jyk7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIGxvZ2luU3VjY2VzczogZnVuY3Rpb24gbG9naW5TdWNjZXNzKHN0YXRlLCBhY2Nlc3NUb2tlbikgewogICAgICBzdGF0ZS5sb2dnZWRJbiA9IHRydWU7CiAgICAgIHN0YXRlLnRva2VuID0gYWNjZXNzVG9rZW4uYXR0cmlidXRlcy5hY2Nlc3NfdG9rZW47CiAgICAgIHN0YXRlLmFjY2Vzc1Rva2VuID0gYWNjZXNzVG9rZW4uYXR0cmlidXRlczsKICAgIH0sCiAgICBsb2dpbkZhaWx1cmU6IGZ1bmN0aW9uIGxvZ2luRmFpbHVyZShzdGF0ZSkgewogICAgICBzdGF0ZS5zdGF0dXMubG9nZ2VkSW4gPSBmYWxzZTsKICAgICAgc3RhdGUudXNlciA9IG51bGw7CiAgICB9LAogICAgcHJvZmlsZVN1Y2Nlc3M6IGZ1bmN0aW9uIHByb2ZpbGVTdWNjZXNzKHN0YXRlLCBwcm9maWxlKSB7CiAgICAgIHN0YXRlLnByb2ZpbGUgPSBwcm9maWxlOwogICAgfSwKICAgIHByb2ZpbGVGYWlsOiBmdW5jdGlvbiBwcm9maWxlRmFpbChzdGF0ZSwgZXJyb3IpIHsKICAgICAgc3RhdGUucHJvZmlsZUVycm9yID0gZXJyb3I7CiAgICB9LAogICAgbG9nb3V0OiBmdW5jdGlvbiBsb2dvdXQoc3RhdGUpIHsKICAgICAgc3RhdGUubG9nZ2VkSW4gPSBmYWxzZTsKICAgICAgc3RhdGUudG9rZW4gPSBudWxsOwogICAgICBzdGF0ZS5hY2Nlc3NUb2tlbiA9IG51bGw7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/var/www/html/medbook-dev-app-vue/src/store/AuthModule.js"],"names":["AuthService","initialState","profile","loggedIn","token","accessToken","auth","namespaced","state","actions","login","user","commit","then","data","Promise","resolve","error","console","log","reject","userProfile","logout","mutations","loginSuccess","attributes","access_token","loginFailure","status","profileSuccess","profileFail","profileError"],"mappings":"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","sourcesContent":["import AuthService from '../services/AuthService';\n\n// const token = JSON.parse(sessionStorage.getItem('token'));\n// console.log(token)\n// let status = token ? { \n//         status: { loggedIn: true, token : token }\n//     } : { \n//         status: { loggedIn: false,token : null }\n//     }\nconst initialState = {\n    profile : null,\n    loggedIn : null,\n    token : null,\n    accessToken : null,\n}\nexport const auth = {\n    namespaced: true,\n    state: initialState,\n    actions: {\n        login({ commit }, user) { \n            return AuthService.login(user).then(\n                accessToken => {\n                    commit('loginSuccess', accessToken.data);\n                    return Promise.resolve(accessToken);\n                },\n                error => {\n                    console.log(error)\n                    commit('loginFailure');\n                    return Promise.reject(error);\n                }\n            );\n        },\n        profile({ commit }) {\n            return AuthService.profile().then(\n                userProfile => {\n                    let profile = userProfile.data\n                    commit('profileSuccess', profile)\n                    return Promise.resolve(profile)\n                },\n                error => {\n                    console.log(error)\n                    commit('profileFail', error)\n                    return Promise.resolve(error)\n                }\n            );\n        },\n        logout({ commit }) {\n            AuthService.logout();\n            commit('logout');\n        },\n    },\n    mutations: {\n        loginSuccess(state, accessToken) {\n            state.loggedIn = true;\n            state.token = accessToken.attributes.access_token\n            state.accessToken = accessToken.attributes;\n        },\n        loginFailure(state) {\n            state.status.loggedIn = false;\n            state.user = null;\n        },\n        profileSuccess(state, profile) {\n            state.profile = profile\n        },\n        profileFail(state, error) {\n            state.profileError = error\n        },\n        logout(state) {\n            state.loggedIn = false;\n            state.token = null;\n            state.accessToken = null;\n        }\n    }\n}\n"]}]}